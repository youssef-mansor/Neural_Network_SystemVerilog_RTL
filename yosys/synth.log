
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `synth.ys' --

1. Executing Verilog-2005 frontend: ../verilog/rtl/NN.sv
Parsing Verilog input from `../verilog/rtl/NN.sv' to AST representation.
Generating RTLIL representation for module `\special_check'.
Generating RTLIL representation for module `\mac_spec_check'.
Generating RTLIL representation for module `\rounding'.
Generating RTLIL representation for module `\leading_zero'.
Generating RTLIL representation for module `\leading_ones'.
Generating RTLIL representation for module `\left_shifter'.
Generating RTLIL representation for module `\right_shifter'.
Generating RTLIL representation for module `\int_excep'.
Generating RTLIL representation for module `\rvdff'.
Generating RTLIL representation for module `\rvdffe'.
Generating RTLIL representation for module `\exponent'.
Generating RTLIL representation for module `\invert'.
Generating RTLIL representation for module `\low_mask_hi_lo'.
Generating RTLIL representation for module `\low_mask_lo_hi'.
Generating RTLIL representation for module `\compress_by2'.
Generating RTLIL representation for module `\compress_by4'.
Generating RTLIL representation for module `\lead_zero_param'.
Generating RTLIL representation for module `\round_excep'.
Generating RTLIL representation for module `\add_sub'.
Generating RTLIL representation for module `\multiplier'.
Generating RTLIL representation for module `\divider'.
Generating RTLIL representation for module `\matrix_multiply_1x2_2x1'.
Generating RTLIL representation for module `\matrix_multiply_2x2_2x1'.
Generating RTLIL representation for module `\sigmoid_approx'.
Generating RTLIL representation for module `\NN'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Generating RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 1
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=1'.

2.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\invert'.
Parameter 1 (\width) = 1
Generating RTLIL representation for module `$paramod\invert\width=1'.

2.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\invert'.
Parameter 1 (\width) = 1
Found cached RTLIL representation for module `$paramod\invert\width=1'.

2.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\invert'.
Parameter 1 (\width) = 1
Found cached RTLIL representation for module `$paramod\invert\width=1'.

2.1.6. Executing AST frontend in derive mode using pre-parsed AST for module `\low_mask_lo_hi'.
Parameter 1 (\in_width) = 9
Parameter 2 (\top_bound) = 105
Parameter 3 (\bottom_bound) = 130
Generating RTLIL representation for module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.

2.1.7. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Generating RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.8. Executing AST frontend in derive mode using pre-parsed AST for module `\left_shifter'.
Parameter 1 (\mant) = 27
Generating RTLIL representation for module `$paramod\left_shifter\mant=27'.

2.1.9. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Generating RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.10. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.11. Executing AST frontend in derive mode using pre-parsed AST for module `\round_excep'.
Parameter 1 (\in_exp_width) = 8
Parameter 2 (\in_mant_width) = 26
Parameter 3 (\out_exp_width) = 8
Parameter 4 (\out_mant_width) = 24
Parameter 5 (\options) = 0
Generating RTLIL representation for module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.

2.1.12. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Found cached RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.13. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Found cached RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.14. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.15. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.16. Executing AST frontend in derive mode using pre-parsed AST for module `\round_excep'.
Parameter 1 (\in_exp_width) = 8
Parameter 2 (\in_mant_width) = 26
Parameter 3 (\out_exp_width) = 8
Parameter 4 (\out_mant_width) = 24
Parameter 5 (\options) = 0
Found cached RTLIL representation for module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.

2.1.17. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 26
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=26'.

2.1.18. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.19. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 26
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=26'.

2.1.20. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 23
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=23'.

2.1.21. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 3
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=3'.

2.1.22. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 10
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=10'.

2.1.23. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.24. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.25. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.26. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.27. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.28. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 5
Generating RTLIL representation for module `$paramod\rvdffe\WIDTH=5'.

2.1.29. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.30. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.31. Executing AST frontend in derive mode using pre-parsed AST for module `\exponent'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Generating RTLIL representation for module `$paramod\exponent\exp_width=8\mant_width=24'.

2.1.32. Executing AST frontend in derive mode using pre-parsed AST for module `\exponent'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\exponent\exp_width=8\mant_width=24'.

2.1.33. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Generating RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.34. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.35. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.36. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.37. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.38. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.39. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.40. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.41. Executing AST frontend in derive mode using pre-parsed AST for module `\divider'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Generating RTLIL representation for module `$paramod\divider\exp_width=8\mant_width=24'.

2.1.42. Executing AST frontend in derive mode using pre-parsed AST for module `\divider'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\divider\exp_width=8\mant_width=24'.

2.1.43. Executing AST frontend in derive mode using pre-parsed AST for module `\sigmoid_approx'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Generating RTLIL representation for module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.

2.1.44. Executing AST frontend in derive mode using pre-parsed AST for module `\matrix_multiply_1x2_2x1'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Generating RTLIL representation for module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.

2.1.45. Executing AST frontend in derive mode using pre-parsed AST for module `\sigmoid_approx'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.

2.1.46. Executing AST frontend in derive mode using pre-parsed AST for module `\sigmoid_approx'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.

2.1.47. Executing AST frontend in derive mode using pre-parsed AST for module `\matrix_multiply_2x2_2x1'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Generating RTLIL representation for module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.

2.1.48. Executing AST frontend in derive mode using pre-parsed AST for module `\invert'.
Parameter 1 (\width) = 23
Generating RTLIL representation for module `$paramod\invert\width=23'.

2.1.49. Executing AST frontend in derive mode using pre-parsed AST for module `\invert'.
Parameter 1 (\width) = 25
Generating RTLIL representation for module `$paramod\invert\width=25'.

2.1.50. Executing AST frontend in derive mode using pre-parsed AST for module `\low_mask_lo_hi'.
Parameter 1 (\in_width) = 9
Parameter 2 (\top_bound) = 105
Parameter 3 (\bottom_bound) = 130
Found cached RTLIL representation for module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.

2.1.51. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.52. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 26
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=26'.

2.1.53. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdff\WIDTH=1'.

2.1.54. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 10
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=10'.

2.1.55. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 23
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=23'.

2.1.56. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 3
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=3'.

2.1.57. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdff'.
Parameter 1 (\WIDTH) = 5
Generating RTLIL representation for module `$paramod\rvdff\WIDTH=5'.

2.1.58. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Found cached RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.59. Executing AST frontend in derive mode using pre-parsed AST for module `\round_excep'.
Parameter 1 (\in_exp_width) = 8
Parameter 2 (\in_mant_width) = 26
Parameter 3 (\out_exp_width) = 8
Parameter 4 (\out_mant_width) = 24
Parameter 5 (\options) = 0
Found cached RTLIL representation for module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.

2.1.60. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Found cached RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.61. Executing AST frontend in derive mode using pre-parsed AST for module `\lead_zero_param'.
Parameter 1 (\in_width) = 23
Parameter 2 (\count_width) = 5
Found cached RTLIL representation for module `$paramod\lead_zero_param\in_width=23\count_width=5'.

2.1.62. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.63. Executing AST frontend in derive mode using pre-parsed AST for module `\special_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\special_check\exp_width=8\mant_width=24'.

2.1.64. Executing AST frontend in derive mode using pre-parsed AST for module `\round_excep'.
Parameter 1 (\in_exp_width) = 8
Parameter 2 (\in_mant_width) = 26
Parameter 3 (\out_exp_width) = 8
Parameter 4 (\out_mant_width) = 24
Parameter 5 (\options) = 0
Found cached RTLIL representation for module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.

2.1.65. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 26
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=26'.

2.1.66. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.67. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 26
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=26'.

2.1.68. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 23
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=23'.

2.1.69. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 3
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=3'.

2.1.70. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 10
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=10'.

2.1.71. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.72. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.73. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.74. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.75. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 1
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=1'.

2.1.76. Executing AST frontend in derive mode using pre-parsed AST for module `\rvdffe'.
Parameter 1 (\WIDTH) = 5
Found cached RTLIL representation for module `$paramod\rvdffe\WIDTH=5'.

2.1.77. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.78. Executing AST frontend in derive mode using pre-parsed AST for module `\mac_spec_check'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.

2.1.79. Executing AST frontend in derive mode using pre-parsed AST for module `\exponent'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\exponent\exp_width=8\mant_width=24'.

2.1.80. Executing AST frontend in derive mode using pre-parsed AST for module `\exponent'.
Parameter 1 (\exp_width) = 8
Parameter 2 (\mant_width) = 24
Found cached RTLIL representation for module `$paramod\exponent\exp_width=8\mant_width=24'.

2.1.81. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.82. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.83. Executing AST frontend in derive mode using pre-parsed AST for module `\divider'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\divider\exp_width=8\mant_width=24'.

2.1.84. Executing AST frontend in derive mode using pre-parsed AST for module `\divider'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\divider\exp_width=8\mant_width=24'.

2.1.85. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.86. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.87. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.88. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.89. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.

2.1.90. Executing AST frontend in derive mode using pre-parsed AST for module `\multiplier'.
Parameter \exp_width = 8
Parameter \mant_width = 24
Found cached RTLIL representation for module `$paramod\multiplier\exp_width=8\mant_width=24'.
Mapping positional arguments of cell $paramod\multiplier\exp_width=8\mant_width=24.norm_b ($paramod\lead_zero_param\in_width=23\count_width=5).
Mapping positional arguments of cell $paramod\multiplier\exp_width=8\mant_width=24.norm_a ($paramod\lead_zero_param\in_width=23\count_width=5).
Mapping positional arguments of cell $paramod\exponent\exp_width=8\mant_width=24.countLeadingZeros ($paramod\lead_zero_param\in_width=23\count_width=5).
Mapping positional arguments of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.lowmask_roundmask ($paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130).
Mapping positional arguments of cell $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.reverse_lo ($paramod\invert\width=25).
Mapping positional arguments of cell $paramod\lead_zero_param\in_width=23\count_width=5.reverse_num ($paramod\invert\width=23).
Mapping positional arguments of cell multiplier.norm_b ($paramod\lead_zero_param\in_width=23\count_width=5).
Mapping positional arguments of cell multiplier.norm_a ($paramod\lead_zero_param\in_width=23\count_width=5).
Mapping positional arguments of cell round_excep.lowmask_roundmask ($paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130).
Mapping positional arguments of cell lead_zero_param.reverse_num ($paramod\invert\width=1).
Mapping positional arguments of cell low_mask_lo_hi.reverse_lo ($paramod\invert\width=1).
Mapping positional arguments of cell low_mask_hi_lo.reverse_hi ($paramod\invert\width=1).
Mapping positional arguments of cell exponent.countLeadingZeros ($paramod\lead_zero_param\in_width=23\count_width=5).

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1434 in module $paramod\rvdff\WIDTH=5.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1432 in module $paramod\rvdff\WIDTH=3.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1430 in module $paramod\rvdff\WIDTH=23.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1428 in module $paramod\rvdff\WIDTH=10.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1426 in module $paramod\rvdff\WIDTH=26.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/sigmoid_v5.sv:118$1415 in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$1018 in module $paramod\rvdff\WIDTH=1.
Marked 3 switch rules as full_case in process $proc$../verilog/rtl/NN.sv:66$964 in module NN.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/sigmoid_v5.sv:118$950 in module sigmoid_approx.
Marked 1 switch rules as full_case in process $proc$../verilog/rtl/fpu_lib.sv:299$485 in module rvdff.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).

2.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_l in `$paramod\rvdff\WIDTH=5.$proc$../verilog/rtl/fpu_lib.sv:299$1434'.
Found async reset \rst_l in `$paramod\rvdff\WIDTH=3.$proc$../verilog/rtl/fpu_lib.sv:299$1432'.
Found async reset \rst_l in `$paramod\rvdff\WIDTH=23.$proc$../verilog/rtl/fpu_lib.sv:299$1430'.
Found async reset \rst_l in `$paramod\rvdff\WIDTH=10.$proc$../verilog/rtl/fpu_lib.sv:299$1428'.
Found async reset \rst_l in `$paramod\rvdff\WIDTH=26.$proc$../verilog/rtl/fpu_lib.sv:299$1426'.
Found async reset \rst_l in `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
Found async reset \rst_l in `$paramod\rvdff\WIDTH=1.$proc$../verilog/rtl/fpu_lib.sv:299$1018'.
Found async reset \rst_l in `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
Found async reset \rst_l in `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
Found async reset \rst_l in `\rvdff.$proc$../verilog/rtl/fpu_lib.sv:299$485'.

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\rvdff\WIDTH=5.$proc$../verilog/rtl/fpu_lib.sv:299$1434'.
     1/1: $0\dout[4:0]
Creating decoders for process `$paramod\rvdff\WIDTH=3.$proc$../verilog/rtl/fpu_lib.sv:299$1432'.
     1/1: $0\dout[2:0]
Creating decoders for process `$paramod\rvdff\WIDTH=23.$proc$../verilog/rtl/fpu_lib.sv:299$1430'.
     1/1: $0\dout[22:0]
Creating decoders for process `$paramod\rvdff\WIDTH=10.$proc$../verilog/rtl/fpu_lib.sv:299$1428'.
     1/1: $0\dout[9:0]
Creating decoders for process `$paramod\rvdff\WIDTH=26.$proc$../verilog/rtl/fpu_lib.sv:299$1426'.
     1/1: $0\dout[25:0]
Creating decoders for process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
     1/7: $0\div_inst2_in_valid_counter[1:0]
     2/7: $0\div_inst1_in_valid_counter[1:0]
     3/7: $0\in_x_reg[31:0]
     4/7: $0\div_inst2_in_valid[0:0]
     5/7: $0\div_inst1_in_valid[0:0]
     6/7: $0\x_div_one_plus_x_reg[31:0]
     7/7: $0\x_div_one_minus_x_reg[31:0]
Creating decoders for process `$paramod\rvdff\WIDTH=1.$proc$../verilog/rtl/fpu_lib.sv:299$1018'.
     1/1: $0\dout[0:0]
Creating decoders for process `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
     1/4: $0\prev_B[31:0]
     2/4: $0\prev_A[31:0]
     3/4: $0\cycle_counter[5:0]
     4/4: $0\ready[0:0]
Creating decoders for process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
     1/7: $0\div_inst2_in_valid_counter[1:0]
     2/7: $0\div_inst1_in_valid_counter[1:0]
     3/7: $0\in_x_reg[31:0]
     4/7: $0\div_inst2_in_valid[0:0]
     5/7: $0\div_inst1_in_valid[0:0]
     6/7: $0\x_div_one_plus_x_reg[31:0]
     7/7: $0\x_div_one_minus_x_reg[31:0]
Creating decoders for process `\rvdff.$proc$../verilog/rtl/fpu_lib.sv:299$485'.
     1/1: $0\dout[0:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\rvdff\WIDTH=5.\dout' using process `$paramod\rvdff\WIDTH=5.$proc$../verilog/rtl/fpu_lib.sv:299$1434'.
  created $adff cell `$procdff$1498' with positive edge clock and negative level reset.
Creating register for signal `$paramod\rvdff\WIDTH=3.\dout' using process `$paramod\rvdff\WIDTH=3.$proc$../verilog/rtl/fpu_lib.sv:299$1432'.
  created $adff cell `$procdff$1499' with positive edge clock and negative level reset.
Creating register for signal `$paramod\rvdff\WIDTH=23.\dout' using process `$paramod\rvdff\WIDTH=23.$proc$../verilog/rtl/fpu_lib.sv:299$1430'.
  created $adff cell `$procdff$1500' with positive edge clock and negative level reset.
Creating register for signal `$paramod\rvdff\WIDTH=10.\dout' using process `$paramod\rvdff\WIDTH=10.$proc$../verilog/rtl/fpu_lib.sv:299$1428'.
  created $adff cell `$procdff$1501' with positive edge clock and negative level reset.
Creating register for signal `$paramod\rvdff\WIDTH=26.\dout' using process `$paramod\rvdff\WIDTH=26.$proc$../verilog/rtl/fpu_lib.sv:299$1426'.
  created $adff cell `$procdff$1502' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\x_div_one_minus_x_reg' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1503' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\x_div_one_plus_x_reg' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1504' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\div_inst1_in_valid' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1505' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\div_inst2_in_valid' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1506' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\in_x_reg' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1507' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\div_inst1_in_valid_counter' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1508' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sigmoid_approx\exp_width=8\mant_width=24.\div_inst2_in_valid_counter' using process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
  created $adff cell `$procdff$1509' with positive edge clock and negative level reset.
Creating register for signal `$paramod\rvdff\WIDTH=1.\dout' using process `$paramod\rvdff\WIDTH=1.$proc$../verilog/rtl/fpu_lib.sv:299$1018'.
  created $adff cell `$procdff$1510' with positive edge clock and negative level reset.
Creating register for signal `\NN.\ready' using process `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
  created $adff cell `$procdff$1511' with positive edge clock and negative level reset.
Creating register for signal `\NN.\cycle_counter' using process `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
  created $adff cell `$procdff$1512' with positive edge clock and negative level reset.
Creating register for signal `\NN.\prev_A' using process `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
  created $adff cell `$procdff$1513' with positive edge clock and negative level reset.
Creating register for signal `\NN.\prev_B' using process `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
  created $adff cell `$procdff$1514' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\x_div_one_minus_x_reg' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1515' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\x_div_one_plus_x_reg' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1516' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\div_inst1_in_valid' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1517' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\div_inst2_in_valid' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1518' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\in_x_reg' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1519' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\div_inst1_in_valid_counter' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1520' with positive edge clock and negative level reset.
Creating register for signal `\sigmoid_approx.\div_inst2_in_valid_counter' using process `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
  created $adff cell `$procdff$1521' with positive edge clock and negative level reset.
Creating register for signal `\rvdff.\dout' using process `\rvdff.$proc$../verilog/rtl/fpu_lib.sv:299$485'.
  created $adff cell `$procdff$1522' with positive edge clock and negative level reset.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\rvdff\WIDTH=5.$proc$../verilog/rtl/fpu_lib.sv:299$1434'.
Removing empty process `$paramod\rvdff\WIDTH=3.$proc$../verilog/rtl/fpu_lib.sv:299$1432'.
Removing empty process `$paramod\rvdff\WIDTH=23.$proc$../verilog/rtl/fpu_lib.sv:299$1430'.
Removing empty process `$paramod\rvdff\WIDTH=10.$proc$../verilog/rtl/fpu_lib.sv:299$1428'.
Removing empty process `$paramod\rvdff\WIDTH=26.$proc$../verilog/rtl/fpu_lib.sv:299$1426'.
Found and cleaned up 7 empty switches in `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
Removing empty process `$paramod\sigmoid_approx\exp_width=8\mant_width=24.$proc$../verilog/rtl/sigmoid_v5.sv:118$1415'.
Removing empty process `$paramod\rvdff\WIDTH=1.$proc$../verilog/rtl/fpu_lib.sv:299$1018'.
Found and cleaned up 3 empty switches in `\NN.$proc$../verilog/rtl/NN.sv:66$964'.
Removing empty process `NN.$proc$../verilog/rtl/NN.sv:66$964'.
Found and cleaned up 7 empty switches in `\sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
Removing empty process `sigmoid_approx.$proc$../verilog/rtl/sigmoid_v5.sv:118$950'.
Removing empty process `rvdff.$proc$../verilog/rtl/fpu_lib.sv:299$485'.
Cleaned up 17 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\rvdff\WIDTH=5.
<suppressed ~1 debug messages>
Optimizing module $paramod\rvdff\WIDTH=3.
<suppressed ~1 debug messages>
Optimizing module $paramod\rvdff\WIDTH=23.
<suppressed ~1 debug messages>
Optimizing module $paramod\rvdff\WIDTH=10.
<suppressed ~1 debug messages>
Optimizing module $paramod\rvdff\WIDTH=26.
<suppressed ~1 debug messages>
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
<suppressed ~11 debug messages>
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
<suppressed ~10 debug messages>
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
<suppressed ~3 debug messages>
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~18 debug messages>
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
<suppressed ~5 debug messages>
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
<suppressed ~3 debug messages>
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
<suppressed ~1 debug messages>
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\rvdff\WIDTH=1.
<suppressed ~1 debug messages>
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
<suppressed ~1 debug messages>
Optimizing module NN.
Optimizing module sigmoid_approx.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module divider.
<suppressed ~11 debug messages>
Optimizing module multiplier.
<suppressed ~10 debug messages>
Optimizing module add_sub.
<suppressed ~7 debug messages>
Optimizing module round_excep.
<suppressed ~27 debug messages>
Optimizing module lead_zero_param.
<suppressed ~1 debug messages>
Optimizing module compress_by4.
<suppressed ~1 debug messages>
Optimizing module compress_by2.
<suppressed ~1 debug messages>
Optimizing module low_mask_lo_hi.
<suppressed ~1 debug messages>
Optimizing module low_mask_hi_lo.
<suppressed ~1 debug messages>
Optimizing module invert.
Optimizing module exponent.
<suppressed ~3 debug messages>
Optimizing module rvdffe.
Optimizing module rvdff.
<suppressed ~1 debug messages>
Optimizing module int_excep.
Optimizing module right_shifter.
<suppressed ~1 debug messages>
Optimizing module left_shifter.
Optimizing module leading_ones.
<suppressed ~1 debug messages>
Optimizing module leading_zero.
<suppressed ~1 debug messages>
Optimizing module rounding.
<suppressed ~4 debug messages>
Optimizing module mac_spec_check.
<suppressed ~3 debug messages>
Optimizing module special_check.
<suppressed ~5 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \special_check..
Removed 25 unused cells and 436 unused wires.
<suppressed ~94 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
checking module $paramod\divider\exp_width=8\mant_width=24..
checking module $paramod\exponent\exp_width=8\mant_width=24..
checking module $paramod\invert\width=1..
checking module $paramod\invert\width=23..
checking module $paramod\invert\width=25..
checking module $paramod\lead_zero_param\in_width=23\count_width=5..
checking module $paramod\left_shifter\mant=27..
checking module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
checking module $paramod\mac_spec_check\exp_width=8\mant_width=24..
checking module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
checking module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
checking module $paramod\multiplier\exp_width=8\mant_width=24..
checking module $paramod\rvdff\WIDTH=1..
checking module $paramod\rvdff\WIDTH=10..
checking module $paramod\rvdff\WIDTH=23..
checking module $paramod\rvdff\WIDTH=26..
checking module $paramod\rvdff\WIDTH=3..
checking module $paramod\rvdff\WIDTH=5..
checking module $paramod\rvdffe\WIDTH=1..
checking module $paramod\rvdffe\WIDTH=10..
checking module $paramod\rvdffe\WIDTH=23..
checking module $paramod\rvdffe\WIDTH=26..
checking module $paramod\rvdffe\WIDTH=3..
checking module $paramod\rvdffe\WIDTH=5..
checking module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
checking module $paramod\special_check\exp_width=8\mant_width=24..
checking module NN..
checking module add_sub..
checking module compress_by2..
checking module compress_by4..
checking module divider..
checking module exponent..
checking module int_excep..
checking module invert..
checking module lead_zero_param..
checking module leading_ones..
checking module leading_zero..
checking module left_shifter..
checking module low_mask_hi_lo..
checking module low_mask_lo_hi..
checking module mac_spec_check..
checking module matrix_multiply_1x2_2x1..
checking module matrix_multiply_2x2_2x1..
checking module multiplier..
checking module right_shifter..
checking module round_excep..
checking module rounding..
checking module rvdff..
checking module rvdffe..
checking module sigmoid_approx..
checking module special_check..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
<suppressed ~18 debug messages>
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
<suppressed ~15 debug messages>
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
<suppressed ~36 debug messages>
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
<suppressed ~21 debug messages>
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
<suppressed ~15 debug messages>
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
<suppressed ~6 debug messages>
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
<suppressed ~18 debug messages>
Finding identical cells in module `\rounding'.
<suppressed ~24 debug messages>
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
<suppressed ~36 debug messages>
Removed a total of 65 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:619$1217: { \in_mant [0] \in_mant [1] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:598$1184: { $and$../verilog/rtl/fpu_lib.sv:598$1183_Y [0] $and$../verilog/rtl/fpu_lib.sv:598$1183_Y [1] $and$../verilog/rtl/fpu_lib.sv:598$1183_Y [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:598$1182: { $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [0] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [1] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [2] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [3] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [4] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [5] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [6] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [7] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [8] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [9] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [10] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [11] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [12] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [13] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [14] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [15] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [16] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [17] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [18] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [19] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [20] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [21] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [22] $and$../verilog/rtl/fpu_lib.sv:598$1181_Y [23] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:597$1179: { $and$../verilog/rtl/fpu_lib.sv:597$1178_Y [0] $and$../verilog/rtl/fpu_lib.sv:597$1178_Y [1] $and$../verilog/rtl/fpu_lib.sv:597$1178_Y [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:597$1177: { $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [0] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [1] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [2] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [3] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [4] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [5] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [6] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [7] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [8] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [9] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [10] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [11] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [12] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [13] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [14] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [15] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [16] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [17] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [18] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [19] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [20] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [21] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [22] $and$../verilog/rtl/fpu_lib.sv:597$1176_Y [23] }
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/multiplier.sv:93$1321: { \mant_prod [0] \mant_prod [1] \mant_prod [2] \mant_prod [3] \mant_prod [4] \mant_prod [5] \mant_prod [6] \mant_prod [7] \mant_prod [8] \mant_prod [9] \mant_prod [10] \mant_prod [11] \mant_prod [12] \mant_prod [13] \mant_prod [14] \mant_prod [15] \mant_prod [16] \mant_prod [17] \mant_prod [18] \mant_prod [19] \mant_prod [20] \mant_prod [21] }
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:46$1037: { \in [0] \in [1] \in [2] \in [3] \in [4] \in [5] \in [6] \in [7] \in [8] \in [9] \in [10] \in [11] \in [12] \in [13] \in [14] \in [15] \in [16] \in [17] \in [18] \in [19] \in [20] \in [21] \in [22] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:45$1035: { \in [23] \in [24] \in [25] \in [26] \in [27] \in [28] \in [29] \in [30] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:47$1039: { \in [23] \in [24] \in [25] \in [26] \in [27] \in [28] \in [29] \in [30] }
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:176$782: { \norm_sum [0] \norm_sum [1] \norm_sum [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:144$725: { \norm_exp [0] \norm_exp [1] \norm_exp [2] \norm_exp [3] \norm_exp [4] \norm_exp [5] \norm_exp [6] \norm_exp [7] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:133$714: { \mant_sum [0] \mant_sum [1] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:127$711: { \exp_a [0] \exp_a [1] \exp_a [2] \exp_a [3] \exp_a [4] \exp_a [5] \exp_a [6] \exp_a [7] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:101$692: { \exp_b [0] \exp_b [1] \exp_b [2] \exp_b [3] \exp_b [4] \exp_b [5] \exp_b [6] \exp_b [7] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/add_sub.sv:100$690: { \exp_a [0] \exp_a [1] \exp_a [2] \exp_a [3] \exp_a [4] \exp_a [5] \exp_a [6] \exp_a [7] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/add_sub.sv:162$756: { \exp_z [0] \exp_z [1] \exp_z [2] \exp_z [3] \exp_z [4] \exp_z [5] \exp_z [6] \exp_z [7] }
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:210$370: { $not$../verilog/rtl/fpu_lib.sv:210$369_Y [0] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [1] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [2] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [3] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [4] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [5] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [6] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [7] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [8] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [9] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [10] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [11] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [12] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [13] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [14] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [15] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [16] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [17] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [18] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [19] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [20] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [21] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [22] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [23] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [24] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [25] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [26] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [27] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [28] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [29] $not$../verilog/rtl/fpu_lib.sv:210$369_Y [30] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:209$365: { $not$../verilog/rtl/fpu_lib.sv:209$364_Y [0] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [1] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [2] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [3] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [4] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [5] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [6] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [7] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [8] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [9] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [10] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [11] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [12] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [13] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [14] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [15] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [16] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [17] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [18] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [19] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [20] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [21] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [22] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [23] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [24] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [25] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [26] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [27] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [28] $not$../verilog/rtl/fpu_lib.sv:209$364_Y [29] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:208$360: { $not$../verilog/rtl/fpu_lib.sv:208$359_Y [0] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [1] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [2] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [3] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [4] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [5] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [6] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [7] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [8] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [9] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [10] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [11] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [12] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [13] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [14] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [15] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [16] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [17] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [18] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [19] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [20] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [21] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [22] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [23] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [24] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [25] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [26] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [27] $not$../verilog/rtl/fpu_lib.sv:208$359_Y [28] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:207$355: { $not$../verilog/rtl/fpu_lib.sv:207$354_Y [0] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [1] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [2] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [3] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [4] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [5] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [6] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [7] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [8] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [9] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [10] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [11] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [12] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [13] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [14] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [15] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [16] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [17] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [18] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [19] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [20] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [21] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [22] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [23] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [24] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [25] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [26] $not$../verilog/rtl/fpu_lib.sv:207$354_Y [27] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:206$350: { $not$../verilog/rtl/fpu_lib.sv:206$349_Y [0] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [1] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [2] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [3] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [4] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [5] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [6] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [7] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [8] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [9] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [10] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [11] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [12] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [13] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [14] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [15] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [16] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [17] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [18] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [19] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [20] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [21] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [22] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [23] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [24] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [25] $not$../verilog/rtl/fpu_lib.sv:206$349_Y [26] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:205$345: { $not$../verilog/rtl/fpu_lib.sv:205$344_Y [0] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [1] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [2] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [3] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [4] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [5] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [6] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [7] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [8] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [9] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [10] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [11] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [12] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [13] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [14] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [15] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [16] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [17] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [18] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [19] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [20] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [21] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [22] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [23] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [24] $not$../verilog/rtl/fpu_lib.sv:205$344_Y [25] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:204$340: { $not$../verilog/rtl/fpu_lib.sv:204$339_Y [0] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [1] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [2] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [3] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [4] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [5] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [6] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [7] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [8] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [9] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [10] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [11] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [12] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [13] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [14] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [15] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [16] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [17] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [18] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [19] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [20] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [21] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [22] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [23] $not$../verilog/rtl/fpu_lib.sv:204$339_Y [24] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:203$335: { $not$../verilog/rtl/fpu_lib.sv:203$334_Y [0] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [1] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [2] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [3] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [4] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [5] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [6] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [7] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [8] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [9] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [10] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [11] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [12] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [13] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [14] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [15] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [16] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [17] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [18] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [19] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [20] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [21] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [22] $not$../verilog/rtl/fpu_lib.sv:203$334_Y [23] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:202$330: { $not$../verilog/rtl/fpu_lib.sv:202$329_Y [0] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [1] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [2] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [3] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [4] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [5] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [6] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [7] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [8] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [9] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [10] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [11] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [12] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [13] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [14] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [15] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [16] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [17] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [18] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [19] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [20] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [21] $not$../verilog/rtl/fpu_lib.sv:202$329_Y [22] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:201$325: { $not$../verilog/rtl/fpu_lib.sv:201$324_Y [0] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [1] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [2] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [3] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [4] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [5] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [6] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [7] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [8] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [9] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [10] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [11] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [12] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [13] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [14] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [15] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [16] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [17] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [18] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [19] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [20] $not$../verilog/rtl/fpu_lib.sv:201$324_Y [21] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:200$320: { $not$../verilog/rtl/fpu_lib.sv:200$319_Y [0] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [1] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [2] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [3] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [4] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [5] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [6] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [7] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [8] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [9] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [10] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [11] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [12] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [13] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [14] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [15] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [16] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [17] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [18] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [19] $not$../verilog/rtl/fpu_lib.sv:200$319_Y [20] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:199$315: { $not$../verilog/rtl/fpu_lib.sv:199$314_Y [0] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [1] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [2] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [3] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [4] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [5] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [6] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [7] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [8] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [9] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [10] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [11] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [12] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [13] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [14] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [15] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [16] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [17] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [18] $not$../verilog/rtl/fpu_lib.sv:199$314_Y [19] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:198$310: { $not$../verilog/rtl/fpu_lib.sv:198$309_Y [0] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [1] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [2] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [3] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [4] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [5] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [6] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [7] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [8] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [9] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [10] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [11] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [12] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [13] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [14] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [15] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [16] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [17] $not$../verilog/rtl/fpu_lib.sv:198$309_Y [18] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:197$305: { $not$../verilog/rtl/fpu_lib.sv:197$304_Y [0] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [1] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [2] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [3] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [4] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [5] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [6] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [7] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [8] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [9] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [10] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [11] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [12] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [13] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [14] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [15] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [16] $not$../verilog/rtl/fpu_lib.sv:197$304_Y [17] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:196$300: { $not$../verilog/rtl/fpu_lib.sv:196$299_Y [0] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [1] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [2] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [3] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [4] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [5] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [6] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [7] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [8] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [9] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [10] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [11] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [12] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [13] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [14] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [15] $not$../verilog/rtl/fpu_lib.sv:196$299_Y [16] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:195$295: { $not$../verilog/rtl/fpu_lib.sv:195$294_Y [0] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [1] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [2] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [3] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [4] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [5] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [6] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [7] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [8] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [9] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [10] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [11] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [12] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [13] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [14] $not$../verilog/rtl/fpu_lib.sv:195$294_Y [15] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:194$290: { $not$../verilog/rtl/fpu_lib.sv:194$289_Y [0] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [1] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [2] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [3] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [4] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [5] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [6] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [7] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [8] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [9] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [10] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [11] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [12] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [13] $not$../verilog/rtl/fpu_lib.sv:194$289_Y [14] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:193$285: { $not$../verilog/rtl/fpu_lib.sv:193$284_Y [0] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [1] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [2] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [3] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [4] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [5] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [6] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [7] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [8] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [9] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [10] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [11] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [12] $not$../verilog/rtl/fpu_lib.sv:193$284_Y [13] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:192$280: { $not$../verilog/rtl/fpu_lib.sv:192$279_Y [0] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [1] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [2] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [3] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [4] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [5] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [6] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [7] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [8] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [9] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [10] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [11] $not$../verilog/rtl/fpu_lib.sv:192$279_Y [12] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:191$275: { $not$../verilog/rtl/fpu_lib.sv:191$274_Y [0] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [1] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [2] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [3] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [4] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [5] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [6] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [7] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [8] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [9] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [10] $not$../verilog/rtl/fpu_lib.sv:191$274_Y [11] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:190$270: { $not$../verilog/rtl/fpu_lib.sv:190$269_Y [0] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [1] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [2] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [3] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [4] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [5] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [6] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [7] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [8] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [9] $not$../verilog/rtl/fpu_lib.sv:190$269_Y [10] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:189$265: { $not$../verilog/rtl/fpu_lib.sv:189$264_Y [0] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [1] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [2] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [3] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [4] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [5] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [6] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [7] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [8] $not$../verilog/rtl/fpu_lib.sv:189$264_Y [9] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:188$260: { $not$../verilog/rtl/fpu_lib.sv:188$259_Y [0] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [1] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [2] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [3] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [4] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [5] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [6] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [7] $not$../verilog/rtl/fpu_lib.sv:188$259_Y [8] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:187$255: { $not$../verilog/rtl/fpu_lib.sv:187$254_Y [0] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [1] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [2] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [3] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [4] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [5] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [6] $not$../verilog/rtl/fpu_lib.sv:187$254_Y [7] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:186$250: { $not$../verilog/rtl/fpu_lib.sv:186$249_Y [0] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [1] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [2] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [3] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [4] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [5] $not$../verilog/rtl/fpu_lib.sv:186$249_Y [6] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:185$245: { $not$../verilog/rtl/fpu_lib.sv:185$244_Y [0] $not$../verilog/rtl/fpu_lib.sv:185$244_Y [1] $not$../verilog/rtl/fpu_lib.sv:185$244_Y [2] $not$../verilog/rtl/fpu_lib.sv:185$244_Y [3] $not$../verilog/rtl/fpu_lib.sv:185$244_Y [4] $not$../verilog/rtl/fpu_lib.sv:185$244_Y [5] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:184$240: { $not$../verilog/rtl/fpu_lib.sv:184$239_Y [0] $not$../verilog/rtl/fpu_lib.sv:184$239_Y [1] $not$../verilog/rtl/fpu_lib.sv:184$239_Y [2] $not$../verilog/rtl/fpu_lib.sv:184$239_Y [3] $not$../verilog/rtl/fpu_lib.sv:184$239_Y [4] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:183$235: { $not$../verilog/rtl/fpu_lib.sv:183$234_Y [0] $not$../verilog/rtl/fpu_lib.sv:183$234_Y [1] $not$../verilog/rtl/fpu_lib.sv:183$234_Y [2] $not$../verilog/rtl/fpu_lib.sv:183$234_Y [3] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:182$230: { $not$../verilog/rtl/fpu_lib.sv:182$229_Y [0] $not$../verilog/rtl/fpu_lib.sv:182$229_Y [1] $not$../verilog/rtl/fpu_lib.sv:182$229_Y [2] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:181$225: { $not$../verilog/rtl/fpu_lib.sv:181$224_Y [0] $not$../verilog/rtl/fpu_lib.sv:181$224_Y [1] }
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:168$214: { $not$../verilog/rtl/fpu_lib.sv:168$213_Y [0] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [1] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [2] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [3] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [4] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [5] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [6] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [7] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [8] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [9] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [10] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [11] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [12] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [13] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [14] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [15] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [16] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [17] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [18] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [19] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [20] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [21] $not$../verilog/rtl/fpu_lib.sv:168$213_Y [22] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:167$209: { $not$../verilog/rtl/fpu_lib.sv:167$208_Y [0] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [1] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [2] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [3] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [4] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [5] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [6] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [7] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [8] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [9] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [10] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [11] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [12] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [13] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [14] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [15] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [16] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [17] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [18] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [19] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [20] $not$../verilog/rtl/fpu_lib.sv:167$208_Y [21] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:166$204: { $not$../verilog/rtl/fpu_lib.sv:166$203_Y [0] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [1] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [2] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [3] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [4] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [5] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [6] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [7] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [8] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [9] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [10] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [11] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [12] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [13] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [14] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [15] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [16] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [17] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [18] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [19] $not$../verilog/rtl/fpu_lib.sv:166$203_Y [20] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:165$199: { $not$../verilog/rtl/fpu_lib.sv:165$198_Y [0] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [1] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [2] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [3] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [4] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [5] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [6] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [7] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [8] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [9] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [10] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [11] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [12] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [13] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [14] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [15] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [16] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [17] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [18] $not$../verilog/rtl/fpu_lib.sv:165$198_Y [19] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:164$194: { $not$../verilog/rtl/fpu_lib.sv:164$193_Y [0] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [1] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [2] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [3] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [4] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [5] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [6] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [7] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [8] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [9] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [10] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [11] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [12] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [13] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [14] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [15] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [16] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [17] $not$../verilog/rtl/fpu_lib.sv:164$193_Y [18] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:163$189: { $not$../verilog/rtl/fpu_lib.sv:163$188_Y [0] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [1] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [2] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [3] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [4] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [5] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [6] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [7] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [8] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [9] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [10] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [11] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [12] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [13] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [14] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [15] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [16] $not$../verilog/rtl/fpu_lib.sv:163$188_Y [17] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:162$184: { $not$../verilog/rtl/fpu_lib.sv:162$183_Y [0] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [1] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [2] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [3] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [4] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [5] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [6] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [7] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [8] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [9] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [10] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [11] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [12] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [13] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [14] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [15] $not$../verilog/rtl/fpu_lib.sv:162$183_Y [16] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:161$179: { $not$../verilog/rtl/fpu_lib.sv:161$178_Y [0] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [1] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [2] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [3] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [4] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [5] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [6] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [7] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [8] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [9] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [10] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [11] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [12] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [13] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [14] $not$../verilog/rtl/fpu_lib.sv:161$178_Y [15] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:160$174: { $not$../verilog/rtl/fpu_lib.sv:160$173_Y [0] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [1] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [2] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [3] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [4] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [5] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [6] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [7] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [8] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [9] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [10] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [11] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [12] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [13] $not$../verilog/rtl/fpu_lib.sv:160$173_Y [14] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:159$169: { $not$../verilog/rtl/fpu_lib.sv:159$168_Y [0] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [1] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [2] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [3] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [4] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [5] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [6] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [7] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [8] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [9] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [10] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [11] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [12] $not$../verilog/rtl/fpu_lib.sv:159$168_Y [13] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:158$164: { $not$../verilog/rtl/fpu_lib.sv:158$163_Y [0] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [1] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [2] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [3] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [4] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [5] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [6] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [7] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [8] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [9] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [10] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [11] $not$../verilog/rtl/fpu_lib.sv:158$163_Y [12] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:157$159: { $not$../verilog/rtl/fpu_lib.sv:157$158_Y [0] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [1] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [2] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [3] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [4] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [5] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [6] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [7] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [8] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [9] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [10] $not$../verilog/rtl/fpu_lib.sv:157$158_Y [11] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:156$154: { $not$../verilog/rtl/fpu_lib.sv:156$153_Y [0] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [1] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [2] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [3] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [4] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [5] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [6] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [7] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [8] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [9] $not$../verilog/rtl/fpu_lib.sv:156$153_Y [10] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:155$149: { $not$../verilog/rtl/fpu_lib.sv:155$148_Y [0] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [1] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [2] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [3] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [4] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [5] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [6] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [7] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [8] $not$../verilog/rtl/fpu_lib.sv:155$148_Y [9] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:154$144: { $not$../verilog/rtl/fpu_lib.sv:154$143_Y [0] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [1] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [2] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [3] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [4] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [5] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [6] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [7] $not$../verilog/rtl/fpu_lib.sv:154$143_Y [8] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:153$139: { $not$../verilog/rtl/fpu_lib.sv:153$138_Y [0] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [1] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [2] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [3] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [4] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [5] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [6] $not$../verilog/rtl/fpu_lib.sv:153$138_Y [7] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:152$134: { $not$../verilog/rtl/fpu_lib.sv:152$133_Y [0] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [1] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [2] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [3] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [4] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [5] $not$../verilog/rtl/fpu_lib.sv:152$133_Y [6] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:151$129: { $not$../verilog/rtl/fpu_lib.sv:151$128_Y [0] $not$../verilog/rtl/fpu_lib.sv:151$128_Y [1] $not$../verilog/rtl/fpu_lib.sv:151$128_Y [2] $not$../verilog/rtl/fpu_lib.sv:151$128_Y [3] $not$../verilog/rtl/fpu_lib.sv:151$128_Y [4] $not$../verilog/rtl/fpu_lib.sv:151$128_Y [5] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:150$124: { $not$../verilog/rtl/fpu_lib.sv:150$123_Y [0] $not$../verilog/rtl/fpu_lib.sv:150$123_Y [1] $not$../verilog/rtl/fpu_lib.sv:150$123_Y [2] $not$../verilog/rtl/fpu_lib.sv:150$123_Y [3] $not$../verilog/rtl/fpu_lib.sv:150$123_Y [4] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:149$119: { $not$../verilog/rtl/fpu_lib.sv:149$118_Y [0] $not$../verilog/rtl/fpu_lib.sv:149$118_Y [1] $not$../verilog/rtl/fpu_lib.sv:149$118_Y [2] $not$../verilog/rtl/fpu_lib.sv:149$118_Y [3] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:148$114: { $not$../verilog/rtl/fpu_lib.sv:148$113_Y [0] $not$../verilog/rtl/fpu_lib.sv:148$113_Y [1] $not$../verilog/rtl/fpu_lib.sv:148$113_Y [2] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:147$109: { $not$../verilog/rtl/fpu_lib.sv:147$108_Y [0] $not$../verilog/rtl/fpu_lib.sv:147$108_Y [1] }
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/multiplier.sv:93$856: { \mant_prod [0] \mant_prod [1] \mant_prod [2] \mant_prod [3] \mant_prod [4] \mant_prod [5] \mant_prod [6] \mant_prod [7] \mant_prod [8] \mant_prod [9] \mant_prod [10] \mant_prod [11] \mant_prod [12] \mant_prod [13] \mant_prod [14] \mant_prod [15] \mant_prod [16] \mant_prod [17] \mant_prod [18] \mant_prod [19] \mant_prod [20] \mant_prod [21] }
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:262$478: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] \mantisa [22] \mantisa [23] \mantisa [24] \mantisa [25] \mantisa [26] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:261$474: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] \mantisa [22] \mantisa [23] \mantisa [24] \mantisa [25] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:260$470: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] \mantisa [22] \mantisa [23] \mantisa [24] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:259$466: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] \mantisa [22] \mantisa [23] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:258$462: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] \mantisa [22] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:257$458: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] \mantisa [21] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:256$454: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] \mantisa [20] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:255$450: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] \mantisa [19] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:254$446: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] \mantisa [18] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:253$442: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] \mantisa [17] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:252$438: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] \mantisa [16] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:251$434: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] \mantisa [15] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:250$430: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] \mantisa [14] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:249$426: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] \mantisa [13] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:248$422: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] \mantisa [12] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:247$418: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] \mantisa [11] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:246$414: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] \mantisa [10] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:245$410: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] \mantisa [9] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:244$406: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] \mantisa [8] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:243$402: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] \mantisa [7] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:242$398: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] \mantisa [6] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:241$394: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] \mantisa [5] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:240$390: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] \mantisa [4] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:239$386: { \mantisa [0] \mantisa [1] \mantisa [2] \mantisa [3] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:238$382: { \mantisa [0] \mantisa [1] \mantisa [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:237$378: { \mantisa [0] \mantisa [1] }
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:619$650: { \in_mant [0] \in_mant [1] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:598$617: { $and$../verilog/rtl/fpu_lib.sv:598$616_Y [0] $and$../verilog/rtl/fpu_lib.sv:598$616_Y [1] $and$../verilog/rtl/fpu_lib.sv:598$616_Y [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:598$615: { $and$../verilog/rtl/fpu_lib.sv:598$614_Y [0] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [1] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [2] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [3] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [4] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [5] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [6] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [7] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [8] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [9] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [10] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [11] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [12] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [13] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [14] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [15] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [16] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [17] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [18] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [19] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [20] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [21] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [22] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [23] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:597$612: { $and$../verilog/rtl/fpu_lib.sv:597$611_Y [0] $and$../verilog/rtl/fpu_lib.sv:597$611_Y [1] $and$../verilog/rtl/fpu_lib.sv:597$611_Y [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:597$610: { $and$../verilog/rtl/fpu_lib.sv:597$609_Y [0] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [1] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [2] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [3] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [4] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [5] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [6] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [7] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [8] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [9] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [10] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [11] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [12] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [13] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [14] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [15] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [16] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [17] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [18] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [19] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [20] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [21] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [22] $and$../verilog/rtl/fpu_lib.sv:597$609_Y [23] }
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:118$66: { \mantisa [0] \mantisa [1] \mantisa [2] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:113$61: { \mantisa [0] \mantisa [1] }
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:46$3: { \in [0] \in [1] \in [2] \in [3] \in [4] \in [5] \in [6] \in [7] \in [8] \in [9] \in [10] \in [11] \in [12] \in [13] \in [14] \in [15] \in [16] \in [17] \in [18] \in [19] \in [20] \in [21] \in [22] }
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:45$1: { \in [23] \in [24] \in [25] \in [26] \in [27] \in [28] \in [29] \in [30] }
    New input vector for $reduce_and cell $reduce_and$../verilog/rtl/fpu_lib.sv:47$5: { \in [23] \in [24] \in [25] \in [26] \in [27] \in [28] \in [29] \in [30] }
  Optimizing cells in module \special_check.
Performed a total of 105 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 0 unused cells and 65 unused wires.
<suppressed ~10 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$eq$../verilog/rtl/fpu_lib.sv:560$1087 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$eq$../verilog/rtl/fpu_lib.sv:561$1088 ($eq).
Removed top 31 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:643$1119 ($mux).
Removed top 23 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:645$1121 ($mux).
Removed top 24 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:647$1127 ($mux).
Removed top 25 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:648$1130 ($mux).
Removed top 25 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:648$1131 ($not).
Removed top 25 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:649$1133 ($mux).
Removed top 23 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:650$1135 ($mux).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:651$1136 ($or).
Removed top 23 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:651$1137 ($mux).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1138 ($or).
Removed top 23 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:652$1139 ($mux).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1140 ($or).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1140 ($or).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1140 ($or).
Removed top 9 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:655$1142 ($mux).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:657$1146 ($and).
Removed top 9 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:658$1148 ($or).
Removed top 9 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1157 ($or).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1157 ($or).
Removed top 9 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1157 ($or).
Removed top 1 bits (of 9) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$lt$../verilog/rtl/fpu_lib.sv:668$1158 ($lt).
Removed top 24 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$1159 ($sub).
Removed top 27 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$1159 ($sub).
Removed top 7 bits (of 8) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$1159 ($sub).
Removed top 5 bits (of 10) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$1159 ($sub).
Removed top 1 bits (of 9) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$1160 ($sub).
Removed top 31 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:671$1161 ($add).
Removed top 9 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:672$1171 ($mux).
Removed top 24 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:671$1165 ($mux).
Removed top 24 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:671$1166 ($or).
Removed top 24 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:671$1166 ($or).
Removed top 24 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:671$1166 ($or).
Removed top 8 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$1168 ($shr).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$1168 ($shr).
Removed top 9 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:672$1170 ($mux).
Removed top 1 bits (of 27) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:596$1174 ($not).
Removed top 1 bits (of 24) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:598$1181 ($and).
Removed top 5 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:605$1191 ($or).
Removed top 7 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:605$1193 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:605$1193 ($add).
Removed top 6 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:605$1193 ($add).
Removed top 6 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:606$1198 ($mux).
Removed top 6 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1200 ($and).
Removed top 6 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:606$1205 ($mux).
Removed top 5 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1202 ($not).
Removed top 4 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1203 ($and).
Removed top 4 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1203 ($and).
Removed top 24 bits (of 26) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:608$1207 ($add).
Removed top 15 bits (of 26) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:608$1207 ($add).
Removed top 3 bits (of 26) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:612$1209 ($mux).
Removed top 28 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ge$../verilog/rtl/fpu_lib.sv:613$1211 ($ge).
Removed top 29 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ge$../verilog/rtl/fpu_lib.sv:613$1211 ($ge).
Removed top 24 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$lt$../verilog/rtl/fpu_lib.sv:614$1213 ($lt).
Removed top 30 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$le$../verilog/rtl/fpu_lib.sv:624$1225 ($le).
Removed top 31 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$le$../verilog/rtl/fpu_lib.sv:624$1225 ($le).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1138 ($or).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1138 ($or).
Removed top 24 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:671$1162 ($mux).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1156 ($or).
Removed top 9 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1156 ($or).
Removed top 9 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1156 ($or).
Removed top 6 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1200 ($and).
Removed top 6 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1200 ($and).
Removed top 4 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1202 ($not).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:651$1136 ($or).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:651$1136 ($or).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:658$1148 ($or).
Removed top 9 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:658$1148 ($or).
Removed top 9 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:659$1155 ($mux).
Removed top 24 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:671$1161 ($add).
Removed top 24 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:671$1161 ($add).
Removed top 6 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1199 ($not).
Removed top 6 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1199 ($not).
Removed top 25 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:650$1134 ($or).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:650$1134 ($or).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:650$1134 ($or).
Removed top 9 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:657$1147 ($mux).
Removed top 9 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:659$1154 ($and).
Removed top 10 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:659$1154 ($and).
Removed top 24 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$1160 ($sub).
Removed top 2 bits (of 10) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$1160 ($sub).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1132 ($and).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1132 ($and).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1132 ($and).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1129 ($and).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1129 ($and).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1129 ($and).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:648$1131 ($not).
Removed top 24 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:648$1128 ($not).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:648$1128 ($not).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:647$1126 ($and).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:647$1126 ($and).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:647$1126 ($and).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:646$1123 ($and).
Removed top 23 bits (of 32) from port B of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:646$1123 ($and).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:647$1125 ($not).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:647$1125 ($not).
Removed top 23 bits (of 32) from port A of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:646$1122 ($not).
Removed top 23 bits (of 32) from port Y of cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:646$1122 ($not).
Removed top 23 bits (of 32) from mux cell $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:646$1124 ($mux).
Removed top 6 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:605$1193_Y.
Removed top 24 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$add$../verilog/rtl/fpu_lib.sv:671$1161_Y.
Removed top 6 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1200_Y.
Removed top 4 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:606$1203_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:646$1123_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:647$1126_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1129_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:648$1132_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:657$1146_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$and$../verilog/rtl/fpu_lib.sv:659$1154_Y.
Removed top 6 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1199_Y.
Removed top 6 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$not$../verilog/rtl/fpu_lib.sv:606$1202_Y.
Removed top 6 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:605$1191_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:650$1134_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:651$1136_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:652$1138_Y.
Removed top 18 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:658$1148_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$or$../verilog/rtl/fpu_lib.sv:660$1156_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$1168_Y.
Removed top 24 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$1160_Y.
Removed top 23 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:652$1139_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:655$1142_Y.
Removed top 10 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:657$1147_Y.
Removed top 31 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:659$1155_Y.
Removed top 31 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:671$1162_Y.
Removed top 9 bits (of 32) from wire $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.$ternary$../verilog/rtl/fpu_lib.sv:672$1170_Y.
Removed top 22 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$le$../verilog/rtl/divider.sv:123$1351 ($le).
Removed top 31 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$le$../verilog/rtl/divider.sv:127$1354 ($le).
Removed top 3 bits (of 5) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$eq$../verilog/rtl/divider.sv:130$1357 ($eq).
Removed top 31 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:132$1361 ($mux).
Removed top 27 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:133$1362 ($mux).
Removed top 31 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$sub$../verilog/rtl/divider.sv:134$1367 ($sub).
Removed top 6 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:150$1378 ($mux).
Removed top 31 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:135$1372 ($mux).
Removed top 31 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1373 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1373 ($or).
Removed top 27 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1373 ($or).
Removed top 5 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:150$1381 ($mux).
Removed top 6 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:150$1382 ($or).
Removed top 5 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:150$1382 ($or).
Removed top 5 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:150$1382 ($or).
Removed top 26 bits (of 27) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$shl$../verilog/rtl/divider.sv:151$1383 ($shl).
Removed top 6 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:152$1386 ($mux).
Removed top 7 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:153$1389 ($mux).
Removed top 6 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:153$1390 ($or).
Removed top 7 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:153$1390 ($or).
Removed top 6 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:153$1390 ($or).
Removed top 31 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$le$../verilog/rtl/divider.sv:155$1392 ($le).
Removed top 2 bits (of 28) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:157$1394 ($mux).
Removed top 30 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$gt$../verilog/rtl/divider.sv:158$1395 ($gt).
Removed top 6 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:161$1402 ($mux).
Removed top 6 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:162$1404 ($or).
Removed top 6 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:162$1405 ($mux).
Removed top 6 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:162$1406 ($or).
Removed top 6 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:162$1406 ($or).
Removed top 6 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:162$1406 ($or).
Removed top 4 bits (of 5) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$eq$../verilog/rtl/divider.sv:165$1410 ($eq).
Removed top 27 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1369 ($or).
Removed top 27 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1369 ($or).
Removed top 27 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1369 ($or).
Removed top 31 bits (of 32) from port A of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:134$1363 ($or).
Removed top 27 bits (of 32) from port B of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:134$1363 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:134$1363 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:134$1368 ($mux).
Removed top 27 bits (of 32) from port Y of cell $paramod\divider\exp_width=8\mant_width=24.$sub$../verilog/rtl/divider.sv:134$1367 ($sub).
Removed top 27 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:134$1363_Y.
Removed top 27 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:135$1369_Y.
Removed top 6 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$or$../verilog/rtl/divider.sv:162$1404_Y.
Removed top 31 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:135$1372_Y.
Removed top 6 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:150$1378_Y.
Removed top 5 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:150$1381_Y.
Removed top 6 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:152$1386_Y.
Removed top 7 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:153$1389_Y.
Removed top 20 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:161$1402_Y.
Removed top 6 bits (of 32) from wire $paramod\divider\exp_width=8\mant_width=24.$ternary$../verilog/rtl/divider.sv:162$1405_Y.
Removed top 1 bits (of 23) from port Y of cell $paramod\exponent\exp_width=8\mant_width=24.$shl$../verilog/rtl/fpu_lib.sv:375$1249 ($shl).
Removed top 24 bits (of 32) from port A of cell $paramod\exponent\exp_width=8\mant_width=24.$or$../verilog/rtl/fpu_lib.sv:376$1255 ($or).
Removed top 23 bits (of 32) from port B of cell $paramod\exponent\exp_width=8\mant_width=24.$xor$../verilog/rtl/fpu_lib.sv:376$1251 ($xor).
Removed top 23 bits (of 32) from port Y of cell $paramod\exponent\exp_width=8\mant_width=24.$xor$../verilog/rtl/fpu_lib.sv:376$1251 ($xor).
Removed top 23 bits (of 32) from mux cell $paramod\exponent\exp_width=8\mant_width=24.$ternary$../verilog/rtl/fpu_lib.sv:376$1253 ($mux).
Removed top 30 bits (of 32) from mux cell $paramod\exponent\exp_width=8\mant_width=24.$ternary$../verilog/rtl/fpu_lib.sv:376$1254 ($mux).
Removed top 23 bits (of 32) from port A of cell $paramod\exponent\exp_width=8\mant_width=24.$add$../verilog/rtl/fpu_lib.sv:376$1256 ($add).
Removed top 23 bits (of 32) from port Y of cell $paramod\exponent\exp_width=8\mant_width=24.$add$../verilog/rtl/fpu_lib.sv:376$1256 ($add).
Removed top 23 bits (of 32) from port B of cell $paramod\exponent\exp_width=8\mant_width=24.$add$../verilog/rtl/fpu_lib.sv:376$1256 ($add).
Removed top 30 bits (of 32) from port B of cell $paramod\exponent\exp_width=8\mant_width=24.$or$../verilog/rtl/fpu_lib.sv:376$1255 ($or).
Removed top 24 bits (of 32) from port Y of cell $paramod\exponent\exp_width=8\mant_width=24.$or$../verilog/rtl/fpu_lib.sv:376$1255 ($or).
Removed top 24 bits (of 32) from wire $paramod\exponent\exp_width=8\mant_width=24.$or$../verilog/rtl/fpu_lib.sv:376$1255_Y.
Removed top 1 bits (of 23) from wire $paramod\exponent\exp_width=8\mant_width=24.$shl$../verilog/rtl/fpu_lib.sv:375$1249_Y.
Removed top 23 bits (of 32) from wire $paramod\exponent\exp_width=8\mant_width=24.$ternary$../verilog/rtl/fpu_lib.sv:376$1253_Y.
Removed top 31 bits (of 32) from wire $paramod\exponent\exp_width=8\mant_width=24.$ternary$../verilog/rtl/fpu_lib.sv:376$1254_Y.
Removed top 23 bits (of 32) from wire $paramod\exponent\exp_width=8\mant_width=24.$xor$../verilog/rtl/fpu_lib.sv:376$1251_Y.
Removed top 9 bits (of 32) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$add$../verilog/rtl/fpu_lib.sv:477$970 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$add$../verilog/rtl/fpu_lib.sv:477$970 ($add).
Removed top 8 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$add$../verilog/rtl/fpu_lib.sv:477$970 ($add).
Removed top 8 bits (of 32) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$and$../verilog/rtl/fpu_lib.sv:477$971 ($and).
Removed top 8 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$and$../verilog/rtl/fpu_lib.sv:477$971 ($and).
Removed top 8 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$and$../verilog/rtl/fpu_lib.sv:477$971 ($and).
Removed top 31 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$972 ($mux).
Removed top 30 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$974 ($mux).
Removed top 4 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$975 ($or).
Removed top 30 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$975 ($or).
Removed top 30 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$975 ($or).
Removed top 30 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$976 ($mux).
Removed top 3 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$977 ($or).
Removed top 30 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$977 ($or).
Removed top 30 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$977 ($or).
Removed top 29 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$978 ($mux).
Removed top 3 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$979 ($or).
Removed top 29 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$979 ($or).
Removed top 29 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$979 ($or).
Removed top 29 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$980 ($mux).
Removed top 2 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$981 ($or).
Removed top 29 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$981 ($or).
Removed top 29 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$981 ($or).
Removed top 29 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$982 ($mux).
Removed top 2 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$983 ($or).
Removed top 29 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$983 ($or).
Removed top 29 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$983 ($or).
Removed top 29 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$984 ($mux).
Removed top 2 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$985 ($or).
Removed top 29 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$985 ($or).
Removed top 29 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$985 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$986 ($mux).
Removed top 2 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$987 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$987 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$987 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$988 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$989 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$989 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$989 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$990 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$991 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$991 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$991 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$992 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$993 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$993 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$993 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$994 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$995 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$995 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$995 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$996 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$997 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$997 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$997 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$998 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$999 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$999 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$999 ($or).
Removed top 28 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1000 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1001 ($or).
Removed top 28 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1001 ($or).
Removed top 28 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1001 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1002 ($mux).
Removed top 1 bits (of 5) from port A of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1003 ($or).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1003 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1003 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1004 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1005 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1005 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1006 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1007 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1007 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1008 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1009 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1009 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1010 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1011 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1011 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1012 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1013 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1013 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1014 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1015 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1015 ($or).
Removed top 27 bits (of 32) from mux cell $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1016 ($mux).
Removed top 27 bits (of 32) from port B of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1017 ($or).
Removed top 27 bits (of 32) from port Y of cell $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1017 ($or).
Removed top 8 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$add$../verilog/rtl/fpu_lib.sv:477$970_Y.
Removed top 2 bits (of 23) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$not$../verilog/rtl/fpu_lib.sv:477$969_Y.
Removed top 28 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$1001_Y.
Removed top 31 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$or$../verilog/rtl/fpu_lib.sv:487$973_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1002_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1004_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1006_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1008_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1010_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1012_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1014_Y.
Removed top 27 bits (of 32) from wire $paramod\lead_zero_param\in_width=23\count_width=5.$ternary$../verilog/rtl/fpu_lib.sv:487$1016_Y.
Removed top 4 bits (of 5) from wire $paramod\lead_zero_param\in_width=23\count_width=5.bt[1].count_so_far.
Removed top 382 bits (of 513) from port Y of cell $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.$sshr$../verilog/rtl/fpu_lib.sv:427$1021 ($sshr).
Removed top 382 bits (of 513) from wire $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.$sshr$../verilog/rtl/fpu_lib.sv:427$1021_Y.
Removed top 24 bits (of 32) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:58$1275 ($or).
Removed top 1 bits (of 23) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$shl$../verilog/rtl/multiplier.sv:55$1267 ($shl).
Removed top 1 bits (of 23) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$shl$../verilog/rtl/multiplier.sv:56$1269 ($shl).
Removed top 23 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$xor$../verilog/rtl/multiplier.sv:57$1271 ($xor).
Removed top 23 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$xor$../verilog/rtl/multiplier.sv:57$1271 ($xor).
Removed top 23 bits (of 32) from mux cell $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:57$1273 ($mux).
Removed top 30 bits (of 32) from mux cell $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:58$1274 ($mux).
Removed top 23 bits (of 32) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:58$1276 ($add).
Removed top 23 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:58$1276 ($add).
Removed top 23 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:58$1276 ($add).
Removed top 24 bits (of 32) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:60$1281 ($or).
Removed top 23 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$xor$../verilog/rtl/multiplier.sv:59$1277 ($xor).
Removed top 23 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$xor$../verilog/rtl/multiplier.sv:59$1277 ($xor).
Removed top 23 bits (of 32) from mux cell $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:59$1279 ($mux).
Removed top 30 bits (of 32) from mux cell $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:60$1280 ($mux).
Removed top 23 bits (of 32) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:60$1282 ($add).
Removed top 23 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:60$1282 ($add).
Removed top 23 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:60$1282 ($add).
Removed top 22 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$sub$../verilog/rtl/multiplier.sv:91$1319 ($sub).
Removed top 22 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$sub$../verilog/rtl/multiplier.sv:91$1319 ($sub).
Removed top 22 bits (of 32) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$sub$../verilog/rtl/multiplier.sv:91$1319 ($sub).
Converting cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:91$1318 ($add) from signed to unsigned.
Removed top 22 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:91$1318 ($add).
Removed top 1 bits (of 10) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:91$1318 ($add).
Removed top 1 bits (of 10) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:91$1318 ($add).
Removed top 1 bits (of 25) from port A of cell $paramod\multiplier\exp_width=8\mant_width=24.$mul$../verilog/rtl/multiplier.sv:92$1320 ($mul).
Removed top 1 bits (of 25) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$mul$../verilog/rtl/multiplier.sv:92$1320 ($mul).
Removed top 30 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:58$1275 ($or).
Removed top 24 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:58$1275 ($or).
Removed top 30 bits (of 32) from port B of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:60$1281 ($or).
Removed top 24 bits (of 32) from port Y of cell $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:60$1281 ($or).
Removed top 22 bits (of 32) from wire $paramod\multiplier\exp_width=8\mant_width=24.$add$../verilog/rtl/multiplier.sv:91$1318_Y.
Removed top 24 bits (of 32) from wire $paramod\multiplier\exp_width=8\mant_width=24.$or$../verilog/rtl/multiplier.sv:58$1275_Y.
Removed top 1 bits (of 23) from wire $paramod\multiplier\exp_width=8\mant_width=24.$shl$../verilog/rtl/multiplier.sv:55$1267_Y.
Removed top 1 bits (of 23) from wire $paramod\multiplier\exp_width=8\mant_width=24.$shl$../verilog/rtl/multiplier.sv:56$1269_Y.
Removed top 23 bits (of 32) from wire $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:57$1273_Y.
Removed top 30 bits (of 32) from wire $paramod\multiplier\exp_width=8\mant_width=24.$ternary$../verilog/rtl/multiplier.sv:58$1274_Y.
Removed top 23 bits (of 32) from wire $paramod\multiplier\exp_width=8\mant_width=24.$xor$../verilog/rtl/multiplier.sv:57$1271_Y.
Removed top 1 bits (of 25) from wire $paramod\multiplier\exp_width=8\mant_width=24.mant_1.
Removed top 31 bits (of 32) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$gt$../verilog/rtl/sigmoid_v5.sv:138$1418 ($gt).
Removed top 31 bits (of 32) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:139$1419 ($sub).
Removed top 30 bits (of 32) from port Y of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:139$1419 ($sub).
Removed top 1 bits (of 2) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$eq$../verilog/rtl/sigmoid_v5.sv:141$1420 ($eq).
Removed top 31 bits (of 32) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$gt$../verilog/rtl/sigmoid_v5.sv:146$1421 ($gt).
Removed top 31 bits (of 32) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:147$1422 ($sub).
Removed top 30 bits (of 32) from port Y of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:147$1422 ($sub).
Removed top 1 bits (of 2) from port B of cell $paramod\sigmoid_approx\exp_width=8\mant_width=24.$eq$../verilog/rtl/sigmoid_v5.sv:149$1423 ($eq).
Removed top 30 bits (of 32) from wire $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:139$1419_Y.
Removed top 30 bits (of 32) from wire $paramod\sigmoid_approx\exp_width=8\mant_width=24.$sub$../verilog/rtl/sigmoid_v5.sv:147$1422_Y.
Removed top 31 bits (of 32) from port B of cell NN.$add$../verilog/rtl/NN.sv:84$967 ($add).
Removed top 26 bits (of 32) from port Y of cell NN.$add$../verilog/rtl/NN.sv:84$967 ($add).
Removed top 26 bits (of 32) from wire NN.$add$../verilog/rtl/NN.sv:84$967_Y.
Removed top 31 bits (of 32) from port B of cell add_sub.$sub$../verilog/rtl/add_sub.sv:104$698 ($sub).
Removed top 24 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:105$700 ($mux).
Removed top 26 bits (of 27) from port B of cell add_sub.$add$../verilog/rtl/add_sub.sv:117$704 ($add).
Removed top 1 bits (of 28) from port A of cell add_sub.$add$../verilog/rtl/add_sub.sv:119$706 ($add).
Removed top 1 bits (of 28) from port B of cell add_sub.$add$../verilog/rtl/add_sub.sv:119$706 ($add).
Removed top 3 bits (of 8) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:125$709 ($mux).
Removed top 3 bits (of 8) from port B of cell add_sub.$le$../verilog/rtl/add_sub.sv:126$710 ($le).
Removed top 7 bits (of 8) from port B of cell add_sub.$sub$../verilog/rtl/add_sub.sv:127$712 ($sub).
Removed top 3 bits (of 8) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:134$719 ($mux).
Removed top 7 bits (of 8) from port Y of cell add_sub.$or$../verilog/rtl/add_sub.sv:145$728 ($or).
Removed top 7 bits (of 8) from port A of cell add_sub.$and$../verilog/rtl/add_sub.sv:145$729 ($and).
Removed top 7 bits (of 8) from port Y of cell add_sub.$and$../verilog/rtl/add_sub.sv:145$729 ($and).
Removed top 7 bits (of 8) from port A of cell add_sub.$and$../verilog/rtl/add_sub.sv:145$731 ($and).
Removed top 7 bits (of 8) from port B of cell add_sub.$and$../verilog/rtl/add_sub.sv:145$731 ($and).
Removed top 7 bits (of 8) from port Y of cell add_sub.$and$../verilog/rtl/add_sub.sv:145$731 ($and).
Removed top 7 bits (of 8) from port B of cell add_sub.$sub$../verilog/rtl/add_sub.sv:145$732 ($sub).
Removed top 1 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:149$738 ($mux).
Removed top 1 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:149$739 ($mux).
Removed top 1 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:149$740 ($mux).
Removed top 9 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:154$744 ($mux).
Removed top 1 bits (of 32) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:154$745 ($mux).
Removed top 2 bits (of 3) from port B of cell add_sub.$eq$../verilog/rtl/add_sub.sv:167$769 ($eq).
Removed top 1 bits (of 3) from port B of cell add_sub.$eq$../verilog/rtl/add_sub.sv:168$772 ($eq).
Removed top 1 bits (of 3) from port B of cell add_sub.$eq$../verilog/rtl/add_sub.sv:170$776 ($eq).
Removed top 24 bits (of 32) from port Y of cell add_sub.$sub$../verilog/rtl/add_sub.sv:104$698 ($sub).
Removed top 24 bits (of 32) from port A of cell add_sub.$sub$../verilog/rtl/add_sub.sv:104$698 ($sub).
Removed top 3 bits (of 8) from mux cell add_sub.$ternary$../verilog/rtl/add_sub.sv:134$717 ($mux).
Removed top 24 bits (of 32) from port Y of cell add_sub.$sub$../verilog/rtl/add_sub.sv:104$697 ($sub).
Removed top 7 bits (of 8) from wire add_sub.$and$../verilog/rtl/add_sub.sv:145$729_Y.
Removed top 7 bits (of 8) from wire add_sub.$and$../verilog/rtl/add_sub.sv:145$731_Y.
Removed top 7 bits (of 8) from wire add_sub.$or$../verilog/rtl/add_sub.sv:145$728_Y.
Removed top 31 bits (of 32) from wire add_sub.$reduce_or$../verilog/rtl/add_sub.sv:100$690_Y.
Removed top 31 bits (of 32) from wire add_sub.$reduce_or$../verilog/rtl/add_sub.sv:101$692_Y.
Removed top 7 bits (of 8) from wire add_sub.$reduce_or$../verilog/rtl/add_sub.sv:127$711_Y.
Removed top 24 bits (of 32) from wire add_sub.$sub$../verilog/rtl/add_sub.sv:104$697_Y.
Removed top 24 bits (of 32) from wire add_sub.$sub$../verilog/rtl/add_sub.sv:104$698_Y.
Removed top 3 bits (of 8) from wire add_sub.$ternary$../verilog/rtl/add_sub.sv:134$717_Y.
Removed top 1 bits (of 32) from wire add_sub.$ternary$../verilog/rtl/add_sub.sv:149$738_Y.
Removed top 1 bits (of 32) from wire add_sub.$ternary$../verilog/rtl/add_sub.sv:149$739_Y.
Removed top 1 bits (of 32) from wire add_sub.$ternary$../verilog/rtl/add_sub.sv:149$740_Y.
Removed top 3 bits (of 8) from wire add_sub.inter_shft_amt.
Removed top 31 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:132$896 ($mux).
Removed top 22 bits (of 32) from port A of cell divider.$le$../verilog/rtl/divider.sv:123$886 ($le).
Removed top 31 bits (of 32) from port B of cell divider.$le$../verilog/rtl/divider.sv:127$889 ($le).
Removed top 3 bits (of 5) from port B of cell divider.$eq$../verilog/rtl/divider.sv:130$892 ($eq).
Removed top 27 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:133$897 ($mux).
Removed top 31 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:134$898 ($or).
Removed top 27 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:134$898 ($or).
Removed top 27 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:134$898 ($or).
Removed top 31 bits (of 32) from port B of cell divider.$sub$../verilog/rtl/divider.sv:134$902 ($sub).
Removed top 27 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:135$904 ($or).
Removed top 31 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:135$907 ($mux).
Removed top 31 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:135$908 ($or).
Removed top 27 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:135$908 ($or).
Removed top 27 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:135$908 ($or).
Removed top 6 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:150$913 ($mux).
Removed top 5 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:150$916 ($mux).
Removed top 6 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:150$917 ($or).
Removed top 5 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:150$917 ($or).
Removed top 5 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:150$917 ($or).
Removed top 26 bits (of 27) from port A of cell divider.$shl$../verilog/rtl/divider.sv:151$918 ($shl).
Removed top 6 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:152$921 ($mux).
Removed top 7 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:153$924 ($mux).
Removed top 6 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:153$925 ($or).
Removed top 7 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:153$925 ($or).
Removed top 6 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:153$925 ($or).
Removed top 31 bits (of 32) from port A of cell divider.$le$../verilog/rtl/divider.sv:155$927 ($le).
Removed top 2 bits (of 28) from mux cell divider.$ternary$../verilog/rtl/divider.sv:157$929 ($mux).
Removed top 30 bits (of 32) from port B of cell divider.$gt$../verilog/rtl/divider.sv:158$930 ($gt).
Removed top 6 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:161$937 ($mux).
Removed top 6 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:162$939 ($or).
Removed top 6 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:162$940 ($mux).
Removed top 6 bits (of 32) from port A of cell divider.$or$../verilog/rtl/divider.sv:162$941 ($or).
Removed top 6 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:162$941 ($or).
Removed top 6 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:162$941 ($or).
Removed top 4 bits (of 5) from port B of cell divider.$eq$../verilog/rtl/divider.sv:165$945 ($eq).
Removed top 27 bits (of 32) from port Y of cell divider.$or$../verilog/rtl/divider.sv:135$904 ($or).
Removed top 27 bits (of 32) from port B of cell divider.$or$../verilog/rtl/divider.sv:135$904 ($or).
Removed top 27 bits (of 32) from mux cell divider.$ternary$../verilog/rtl/divider.sv:134$903 ($mux).
Removed top 27 bits (of 32) from port Y of cell divider.$sub$../verilog/rtl/divider.sv:134$902 ($sub).
Removed top 27 bits (of 32) from wire divider.$or$../verilog/rtl/divider.sv:134$898_Y.
Removed top 27 bits (of 32) from wire divider.$or$../verilog/rtl/divider.sv:135$904_Y.
Removed top 6 bits (of 32) from wire divider.$or$../verilog/rtl/divider.sv:162$939_Y.
Removed top 27 bits (of 32) from wire divider.$sub$../verilog/rtl/divider.sv:134$902_Y.
Removed top 31 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:135$907_Y.
Removed top 6 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:150$913_Y.
Removed top 5 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:150$916_Y.
Removed top 6 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:152$921_Y.
Removed top 7 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:153$924_Y.
Removed top 19 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:161$937_Y.
Removed top 6 bits (of 32) from wire divider.$ternary$../verilog/rtl/divider.sv:162$940_Y.
Removed top 1 bits (of 23) from port Y of cell exponent.$shl$../verilog/rtl/fpu_lib.sv:375$491 ($shl).
Removed top 24 bits (of 32) from port A of cell exponent.$or$../verilog/rtl/fpu_lib.sv:376$497 ($or).
Removed top 23 bits (of 32) from port B of cell exponent.$xor$../verilog/rtl/fpu_lib.sv:376$493 ($xor).
Removed top 23 bits (of 32) from port Y of cell exponent.$xor$../verilog/rtl/fpu_lib.sv:376$493 ($xor).
Removed top 23 bits (of 32) from mux cell exponent.$ternary$../verilog/rtl/fpu_lib.sv:376$495 ($mux).
Removed top 30 bits (of 32) from mux cell exponent.$ternary$../verilog/rtl/fpu_lib.sv:376$496 ($mux).
Removed top 23 bits (of 32) from port A of cell exponent.$add$../verilog/rtl/fpu_lib.sv:376$498 ($add).
Removed top 23 bits (of 32) from port Y of cell exponent.$add$../verilog/rtl/fpu_lib.sv:376$498 ($add).
Removed top 23 bits (of 32) from port B of cell exponent.$add$../verilog/rtl/fpu_lib.sv:376$498 ($add).
Removed top 30 bits (of 32) from port B of cell exponent.$or$../verilog/rtl/fpu_lib.sv:376$497 ($or).
Removed top 24 bits (of 32) from port Y of cell exponent.$or$../verilog/rtl/fpu_lib.sv:376$497 ($or).
Removed top 24 bits (of 32) from wire exponent.$or$../verilog/rtl/fpu_lib.sv:376$497_Y.
Removed top 1 bits (of 23) from wire exponent.$shl$../verilog/rtl/fpu_lib.sv:375$491_Y.
Removed top 23 bits (of 32) from wire exponent.$ternary$../verilog/rtl/fpu_lib.sv:376$495_Y.
Removed top 30 bits (of 32) from wire exponent.$ternary$../verilog/rtl/fpu_lib.sv:376$496_Y.
Removed top 23 bits (of 32) from wire exponent.$xor$../verilog/rtl/fpu_lib.sv:376$493_Y.
Removed top 31 bits (of 32) from port A of cell lead_zero_param.$add$../verilog/rtl/fpu_lib.sv:477$513 ($add).
Removed top 31 bits (of 32) from port B of cell lead_zero_param.$add$../verilog/rtl/fpu_lib.sv:477$513 ($add).
Removed top 30 bits (of 32) from port Y of cell lead_zero_param.$add$../verilog/rtl/fpu_lib.sv:477$513 ($add).
Removed top 30 bits (of 32) from port A of cell lead_zero_param.$and$../verilog/rtl/fpu_lib.sv:477$514 ($and).
Removed top 30 bits (of 32) from port B of cell lead_zero_param.$and$../verilog/rtl/fpu_lib.sv:477$514 ($and).
Removed top 30 bits (of 32) from port Y of cell lead_zero_param.$and$../verilog/rtl/fpu_lib.sv:477$514 ($and).
Removed top 31 bits (of 32) from mux cell lead_zero_param.$ternary$../verilog/rtl/fpu_lib.sv:487$515 ($mux).
Removed top 30 bits (of 32) from wire lead_zero_param.$add$../verilog/rtl/fpu_lib.sv:477$513_Y.
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:195$297 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:196$302 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:197$307 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:198$312 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:199$317 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:200$322 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:201$327 ($and).
Removed top 1 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:202$332 ($and).
Removed top 2 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:203$337 ($and).
Removed top 2 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:204$342 ($and).
Removed top 2 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:205$347 ($and).
Removed top 2 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:206$352 ($and).
Removed top 3 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:207$357 ($and).
Removed top 3 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:208$362 ($and).
Removed top 4 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:209$367 ($and).
Removed top 4 bits (of 5) from port B of cell leading_ones.$and$../verilog/rtl/fpu_lib.sv:210$372 ($and).
Removed top 4 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:146$107 ($and).
Removed top 3 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:147$111 ($and).
Removed top 3 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:148$116 ($and).
Removed top 2 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:149$121 ($and).
Removed top 2 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:150$126 ($and).
Removed top 2 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:151$131 ($and).
Removed top 2 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:152$136 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:153$141 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:154$146 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:155$151 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:156$156 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:157$161 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:158$166 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:159$171 ($and).
Removed top 1 bits (of 5) from port B of cell leading_zero.$and$../verilog/rtl/fpu_lib.sv:160$176 ($and).
Removed top 1 bits (of 3) from port Y of cell low_mask_hi_lo.$sshr$../verilog/rtl/fpu_lib.sv:411$505 ($sshr).
Removed top 1 bits (of 3) from wire low_mask_hi_lo.$sshr$../verilog/rtl/fpu_lib.sv:411$505_Y.
Removed top 1 bits (of 3) from port Y of cell low_mask_lo_hi.$sshr$../verilog/rtl/fpu_lib.sv:427$508 ($sshr).
Removed top 1 bits (of 3) from wire low_mask_lo_hi.$sshr$../verilog/rtl/fpu_lib.sv:427$508_Y.
Removed top 1 bits (of 23) from port Y of cell multiplier.$shl$../verilog/rtl/multiplier.sv:55$802 ($shl).
Removed top 1 bits (of 23) from port Y of cell multiplier.$shl$../verilog/rtl/multiplier.sv:56$804 ($shl).
Removed top 23 bits (of 32) from port B of cell multiplier.$xor$../verilog/rtl/multiplier.sv:57$806 ($xor).
Removed top 23 bits (of 32) from port Y of cell multiplier.$xor$../verilog/rtl/multiplier.sv:57$806 ($xor).
Removed top 23 bits (of 32) from port Y of cell multiplier.$add$../verilog/rtl/multiplier.sv:60$817 ($add).
Removed top 23 bits (of 32) from port A of cell multiplier.$add$../verilog/rtl/multiplier.sv:60$817 ($add).
Removed top 23 bits (of 32) from port B of cell multiplier.$add$../verilog/rtl/multiplier.sv:60$817 ($add).
Removed top 30 bits (of 32) from mux cell multiplier.$ternary$../verilog/rtl/multiplier.sv:58$809 ($mux).
Removed top 24 bits (of 32) from port A of cell multiplier.$or$../verilog/rtl/multiplier.sv:58$810 ($or).
Removed top 30 bits (of 32) from port B of cell multiplier.$or$../verilog/rtl/multiplier.sv:58$810 ($or).
Removed top 24 bits (of 32) from port Y of cell multiplier.$or$../verilog/rtl/multiplier.sv:58$810 ($or).
Removed top 24 bits (of 32) from port B of cell multiplier.$add$../verilog/rtl/multiplier.sv:58$811 ($add).
Removed top 23 bits (of 32) from port Y of cell multiplier.$add$../verilog/rtl/multiplier.sv:58$811 ($add).
Removed top 23 bits (of 32) from port A of cell multiplier.$add$../verilog/rtl/multiplier.sv:58$811 ($add).
Removed top 23 bits (of 32) from port B of cell multiplier.$xor$../verilog/rtl/multiplier.sv:59$812 ($xor).
Removed top 23 bits (of 32) from port Y of cell multiplier.$xor$../verilog/rtl/multiplier.sv:59$812 ($xor).
Removed top 23 bits (of 32) from mux cell multiplier.$ternary$../verilog/rtl/multiplier.sv:59$814 ($mux).
Removed top 30 bits (of 32) from mux cell multiplier.$ternary$../verilog/rtl/multiplier.sv:60$815 ($mux).
Removed top 24 bits (of 32) from port A of cell multiplier.$or$../verilog/rtl/multiplier.sv:60$816 ($or).
Removed top 30 bits (of 32) from port B of cell multiplier.$or$../verilog/rtl/multiplier.sv:60$816 ($or).
Removed top 24 bits (of 32) from port Y of cell multiplier.$or$../verilog/rtl/multiplier.sv:60$816 ($or).
Removed top 22 bits (of 32) from port B of cell multiplier.$sub$../verilog/rtl/multiplier.sv:91$854 ($sub).
Removed top 22 bits (of 32) from port Y of cell multiplier.$sub$../verilog/rtl/multiplier.sv:91$854 ($sub).
Removed top 22 bits (of 32) from port A of cell multiplier.$sub$../verilog/rtl/multiplier.sv:91$854 ($sub).
Converting cell multiplier.$add$../verilog/rtl/multiplier.sv:91$853 ($add) from signed to unsigned.
Removed top 22 bits (of 32) from port Y of cell multiplier.$add$../verilog/rtl/multiplier.sv:91$853 ($add).
Removed top 1 bits (of 10) from port A of cell multiplier.$add$../verilog/rtl/multiplier.sv:91$853 ($add).
Removed top 1 bits (of 10) from port B of cell multiplier.$add$../verilog/rtl/multiplier.sv:91$853 ($add).
Removed top 1 bits (of 25) from port A of cell multiplier.$mul$../verilog/rtl/multiplier.sv:92$855 ($mul).
Removed top 1 bits (of 25) from port B of cell multiplier.$mul$../verilog/rtl/multiplier.sv:92$855 ($mul).
Removed top 23 bits (of 32) from mux cell multiplier.$ternary$../verilog/rtl/multiplier.sv:57$808 ($mux).
Removed top 22 bits (of 32) from wire multiplier.$add$../verilog/rtl/multiplier.sv:91$853_Y.
Removed top 24 bits (of 32) from wire multiplier.$or$../verilog/rtl/multiplier.sv:58$810_Y.
Removed top 24 bits (of 32) from wire multiplier.$or$../verilog/rtl/multiplier.sv:60$816_Y.
Removed top 1 bits (of 23) from wire multiplier.$shl$../verilog/rtl/multiplier.sv:55$802_Y.
Removed top 1 bits (of 23) from wire multiplier.$shl$../verilog/rtl/multiplier.sv:56$804_Y.
Removed top 23 bits (of 32) from wire multiplier.$ternary$../verilog/rtl/multiplier.sv:57$808_Y.
Removed top 30 bits (of 32) from wire multiplier.$ternary$../verilog/rtl/multiplier.sv:58$809_Y.
Removed top 23 bits (of 32) from wire multiplier.$ternary$../verilog/rtl/multiplier.sv:59$814_Y.
Removed top 31 bits (of 32) from wire multiplier.$ternary$../verilog/rtl/multiplier.sv:60$815_Y.
Removed top 27 bits (of 32) from wire multiplier.$xor$../verilog/rtl/multiplier.sv:57$806_Y.
Removed top 23 bits (of 32) from wire multiplier.$xor$../verilog/rtl/multiplier.sv:59$812_Y.
Removed top 1 bits (of 25) from wire multiplier.mant_1.
Removed top 7 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:237$377 ($eq).
Removed top 26 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:262$479 ($and).
Removed top 1 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:237$379 ($and).
Removed top 6 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:238$381 ($eq).
Removed top 2 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:238$383 ($and).
Removed top 6 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:239$385 ($eq).
Removed top 3 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:239$387 ($and).
Removed top 5 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:240$389 ($eq).
Removed top 4 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:240$391 ($and).
Removed top 5 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:241$393 ($eq).
Removed top 5 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:241$395 ($and).
Removed top 5 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:242$397 ($eq).
Removed top 6 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:242$399 ($and).
Removed top 5 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:243$401 ($eq).
Removed top 7 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:243$403 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:244$405 ($eq).
Removed top 8 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:244$407 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:245$409 ($eq).
Removed top 9 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:245$411 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:246$413 ($eq).
Removed top 10 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:246$415 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:247$417 ($eq).
Removed top 11 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:247$419 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:248$421 ($eq).
Removed top 12 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:248$423 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:249$425 ($eq).
Removed top 13 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:249$427 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:250$429 ($eq).
Removed top 14 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:250$431 ($and).
Removed top 4 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:251$433 ($eq).
Removed top 15 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:251$435 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:252$437 ($eq).
Removed top 16 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:252$439 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:253$441 ($eq).
Removed top 17 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:253$443 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:254$445 ($eq).
Removed top 18 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:254$447 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:255$449 ($eq).
Removed top 19 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:255$451 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:256$453 ($eq).
Removed top 20 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:256$455 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:257$457 ($eq).
Removed top 21 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:257$459 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:258$461 ($eq).
Removed top 22 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:258$463 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:259$465 ($eq).
Removed top 23 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:259$467 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:260$469 ($eq).
Removed top 24 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:260$471 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$eq$../verilog/rtl/fpu_lib.sv:261$473 ($eq).
Removed top 25 bits (of 27) from port B of cell right_shifter.$and$../verilog/rtl/fpu_lib.sv:261$475 ($and).
Removed top 3 bits (of 8) from port B of cell right_shifter.$ge$../verilog/rtl/fpu_lib.sv:262$477 ($ge).
Removed top 1 bits (of 3) from port B of cell round_excep.$eq$../verilog/rtl/fpu_lib.sv:560$520 ($eq).
Removed top 1 bits (of 3) from port B of cell round_excep.$eq$../verilog/rtl/fpu_lib.sv:561$521 ($eq).
Removed top 31 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:643$552 ($mux).
Removed top 23 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:645$554 ($mux).
Removed top 24 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:647$560 ($mux).
Removed top 25 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:648$563 ($mux).
Removed top 25 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:648$564 ($not).
Removed top 25 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:649$566 ($mux).
Removed top 23 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:650$568 ($mux).
Removed top 23 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:651$569 ($or).
Removed top 23 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:651$570 ($mux).
Removed top 23 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$571 ($or).
Removed top 23 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:652$572 ($mux).
Removed top 23 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$573 ($or).
Removed top 23 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$573 ($or).
Removed top 23 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$573 ($or).
Removed top 9 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:655$575 ($mux).
Removed top 9 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:657$579 ($and).
Removed top 9 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:658$581 ($or).
Removed top 9 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$590 ($or).
Removed top 9 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$590 ($or).
Removed top 9 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$590 ($or).
Removed top 1 bits (of 9) from port B of cell round_excep.$lt$../verilog/rtl/fpu_lib.sv:668$591 ($lt).
Removed top 24 bits (of 32) from port A of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$592 ($sub).
Removed top 27 bits (of 32) from port Y of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$592 ($sub).
Removed top 7 bits (of 8) from port A of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$592 ($sub).
Removed top 5 bits (of 10) from port B of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:670$592 ($sub).
Removed top 1 bits (of 9) from port B of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$593 ($sub).
Removed top 31 bits (of 32) from port B of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:671$594 ($add).
Removed top 9 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:672$604 ($mux).
Removed top 24 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:671$598 ($mux).
Removed top 24 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:671$599 ($or).
Removed top 24 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:671$599 ($or).
Removed top 24 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:671$599 ($or).
Removed top 8 bits (of 32) from port A of cell round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$601 ($shr).
Removed top 9 bits (of 32) from port Y of cell round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$601 ($shr).
Removed top 9 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:672$603 ($mux).
Removed top 1 bits (of 27) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:596$607 ($not).
Removed top 2 bits (of 24) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:597$609 ($and).
Removed top 2 bits (of 24) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:598$614 ($and).
Removed top 1 bits (of 24) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:598$614 ($and).
Removed top 1 bits (of 24) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:598$614 ($and).
Removed top 2 bits (of 27) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:605$624 ($or).
Removed top 5 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:605$624 ($or).
Removed top 7 bits (of 32) from port A of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:605$626 ($add).
Removed top 31 bits (of 32) from port B of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:605$626 ($add).
Removed top 6 bits (of 32) from port Y of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:605$626 ($add).
Removed top 6 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:606$631 ($mux).
Removed top 6 bits (of 32) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$633 ($and).
Removed top 6 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:606$638 ($mux).
Removed top 5 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:606$635 ($not).
Removed top 2 bits (of 27) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$636 ($and).
Removed top 4 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$636 ($and).
Removed top 4 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$636 ($and).
Removed top 24 bits (of 26) from port B of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:608$640 ($add).
Removed top 15 bits (of 26) from port Y of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:608$640 ($add).
Removed top 28 bits (of 32) from port A of cell round_excep.$ge$../verilog/rtl/fpu_lib.sv:613$644 ($ge).
Removed top 29 bits (of 32) from port B of cell round_excep.$ge$../verilog/rtl/fpu_lib.sv:613$644 ($ge).
Removed top 24 bits (of 32) from port B of cell round_excep.$lt$../verilog/rtl/fpu_lib.sv:614$646 ($lt).
Removed top 30 bits (of 32) from port A of cell round_excep.$le$../verilog/rtl/fpu_lib.sv:624$658 ($le).
Removed top 31 bits (of 32) from port B of cell round_excep.$le$../verilog/rtl/fpu_lib.sv:624$658 ($le).
Removed top 23 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$571 ($or).
Removed top 23 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:652$571 ($or).
Removed top 9 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$589 ($or).
Removed top 9 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$589 ($or).
Removed top 9 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:660$589 ($or).
Removed top 24 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:671$595 ($mux).
Removed top 6 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$633 ($and).
Removed top 6 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:606$633 ($and).
Removed top 4 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:606$635 ($not).
Removed top 23 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:651$569 ($or).
Removed top 23 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:651$569 ($or).
Removed top 9 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:658$581 ($or).
Removed top 9 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:658$581 ($or).
Removed top 9 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:659$588 ($mux).
Removed top 24 bits (of 32) from port Y of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:671$594 ($add).
Removed top 24 bits (of 32) from port A of cell round_excep.$add$../verilog/rtl/fpu_lib.sv:671$594 ($add).
Removed top 6 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:606$632 ($not).
Removed top 6 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:606$632 ($not).
Removed top 25 bits (of 32) from port B of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:650$567 ($or).
Removed top 23 bits (of 32) from port Y of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:650$567 ($or).
Removed top 23 bits (of 32) from port A of cell round_excep.$or$../verilog/rtl/fpu_lib.sv:650$567 ($or).
Removed top 9 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:657$580 ($mux).
Removed top 9 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:659$587 ($and).
Removed top 10 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:659$587 ($and).
Removed top 24 bits (of 32) from port Y of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$593 ($sub).
Removed top 2 bits (of 10) from port A of cell round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$593 ($sub).
Removed top 23 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$565 ($and).
Removed top 23 bits (of 32) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$565 ($and).
Removed top 23 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$565 ($and).
Removed top 23 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$562 ($and).
Removed top 23 bits (of 32) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$562 ($and).
Removed top 23 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:648$562 ($and).
Removed top 23 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:648$564 ($not).
Removed top 24 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:648$561 ($not).
Removed top 23 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:648$561 ($not).
Removed top 23 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:647$559 ($and).
Removed top 23 bits (of 32) from port A of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:647$559 ($and).
Removed top 23 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:647$559 ($and).
Removed top 23 bits (of 32) from port Y of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:646$556 ($and).
Removed top 23 bits (of 32) from port B of cell round_excep.$and$../verilog/rtl/fpu_lib.sv:646$556 ($and).
Removed top 23 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:647$558 ($not).
Removed top 23 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:647$558 ($not).
Removed top 23 bits (of 32) from port A of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:646$555 ($not).
Removed top 23 bits (of 32) from port Y of cell round_excep.$not$../verilog/rtl/fpu_lib.sv:646$555 ($not).
Removed top 23 bits (of 32) from mux cell round_excep.$ternary$../verilog/rtl/fpu_lib.sv:646$557 ($mux).
Removed top 6 bits (of 32) from wire round_excep.$add$../verilog/rtl/fpu_lib.sv:605$626_Y.
Removed top 24 bits (of 32) from wire round_excep.$add$../verilog/rtl/fpu_lib.sv:671$594_Y.
Removed top 1 bits (of 24) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:598$614_Y.
Removed top 6 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:606$633_Y.
Removed top 4 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:606$636_Y.
Removed top 23 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:646$556_Y.
Removed top 23 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:647$559_Y.
Removed top 23 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:648$562_Y.
Removed top 23 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:648$565_Y.
Removed top 9 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:657$579_Y.
Removed top 9 bits (of 32) from wire round_excep.$and$../verilog/rtl/fpu_lib.sv:659$587_Y.
Removed top 6 bits (of 32) from wire round_excep.$not$../verilog/rtl/fpu_lib.sv:606$632_Y.
Removed top 23 bits (of 32) from wire round_excep.$not$../verilog/rtl/fpu_lib.sv:646$555_Y.
Removed top 5 bits (of 32) from wire round_excep.$or$../verilog/rtl/fpu_lib.sv:605$624_Y.
Removed top 23 bits (of 32) from wire round_excep.$or$../verilog/rtl/fpu_lib.sv:650$567_Y.
Removed top 23 bits (of 32) from wire round_excep.$or$../verilog/rtl/fpu_lib.sv:651$569_Y.
Removed top 9 bits (of 32) from wire round_excep.$or$../verilog/rtl/fpu_lib.sv:658$581_Y.
Removed top 9 bits (of 32) from wire round_excep.$shr$../verilog/rtl/fpu_lib.sv:672$601_Y.
Removed top 24 bits (of 32) from wire round_excep.$sub$../verilog/rtl/fpu_lib.sv:671$593_Y.
Removed top 6 bits (of 32) from wire round_excep.$ternary$../verilog/rtl/fpu_lib.sv:606$631_Y.
Removed top 23 bits (of 32) from wire round_excep.$ternary$../verilog/rtl/fpu_lib.sv:645$554_Y.
Removed top 9 bits (of 32) from wire round_excep.$ternary$../verilog/rtl/fpu_lib.sv:657$580_Y.
Removed top 1 bits (of 27) from wire round_excep.shifted_round_mask.
Removed top 1 bits (of 25) from port A of cell rounding.$add$../verilog/rtl/fpu_lib.sv:113$62 ($add).
Removed top 1 bits (of 25) from port A of cell rounding.$add$../verilog/rtl/fpu_lib.sv:114$63 ($add).
Removed top 2 bits (of 3) from port B of cell rounding.$eq$../verilog/rtl/fpu_lib.sv:126$78 ($eq).
Removed top 1 bits (of 3) from port B of cell rounding.$eq$../verilog/rtl/fpu_lib.sv:127$81 ($eq).
Removed top 1 bits (of 3) from port B of cell rounding.$eq$../verilog/rtl/fpu_lib.sv:128$84 ($eq).
Removed top 31 bits (of 32) from port B of cell sigmoid_approx.$gt$../verilog/rtl/sigmoid_v5.sv:138$953 ($gt).
Removed top 31 bits (of 32) from port B of cell sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:139$954 ($sub).
Removed top 30 bits (of 32) from port Y of cell sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:139$954 ($sub).
Removed top 1 bits (of 2) from port B of cell sigmoid_approx.$eq$../verilog/rtl/sigmoid_v5.sv:141$955 ($eq).
Removed top 31 bits (of 32) from port B of cell sigmoid_approx.$gt$../verilog/rtl/sigmoid_v5.sv:146$956 ($gt).
Removed top 31 bits (of 32) from port B of cell sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:147$957 ($sub).
Removed top 30 bits (of 32) from port Y of cell sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:147$957 ($sub).
Removed top 1 bits (of 2) from port B of cell sigmoid_approx.$eq$../verilog/rtl/sigmoid_v5.sv:149$958 ($eq).
Removed top 30 bits (of 32) from wire sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:139$954_Y.
Removed top 30 bits (of 32) from wire sigmoid_approx.$sub$../verilog/rtl/sigmoid_v5.sv:147$957_Y.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 0 unused cells and 214 unused wires.
<suppressed ~17 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~896 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:605$1193 ($add).
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:608$1207 ($add).
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:671$1161 ($add).
  creating $macc model for $sub$../verilog/rtl/fpu_lib.sv:670$1159 ($sub).
  creating $macc model for $sub$../verilog/rtl/fpu_lib.sv:671$1160 ($sub).
  merging $macc model for $sub$../verilog/rtl/fpu_lib.sv:671$1160 into $add$../verilog/rtl/fpu_lib.sv:671$1161.
  creating $alu model for $macc $sub$../verilog/rtl/fpu_lib.sv:670$1159.
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:608$1207.
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:605$1193.
  creating $macc cell for $add$../verilog/rtl/fpu_lib.sv:671$1161: $auto$alumacc.cc:354:replace_macc$1658
  creating $alu model for $ge$../verilog/rtl/fpu_lib.sv:613$1211 ($ge): new $alu
  creating $alu model for $le$../verilog/rtl/fpu_lib.sv:624$1225 ($le): new $alu
  creating $alu model for $lt$../verilog/rtl/fpu_lib.sv:614$1213 ($lt): new $alu
  creating $alu model for $lt$../verilog/rtl/fpu_lib.sv:668$1158 ($lt): new $alu
  creating $alu cell for $lt$../verilog/rtl/fpu_lib.sv:668$1158: $auto$alumacc.cc:474:replace_alu$1663
  creating $alu cell for $lt$../verilog/rtl/fpu_lib.sv:614$1213: $auto$alumacc.cc:474:replace_alu$1674
  creating $alu cell for $le$../verilog/rtl/fpu_lib.sv:624$1225: $auto$alumacc.cc:474:replace_alu$1687
  creating $alu cell for $ge$../verilog/rtl/fpu_lib.sv:613$1211: $auto$alumacc.cc:474:replace_alu$1702
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:605$1193: $auto$alumacc.cc:474:replace_alu$1713
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:608$1207: $auto$alumacc.cc:474:replace_alu$1716
  creating $alu cell for $sub$../verilog/rtl/fpu_lib.sv:670$1159: $auto$alumacc.cc:474:replace_alu$1719
  created 7 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module $paramod\divider\exp_width=8\mant_width=24:
  creating $macc model for $add$../verilog/rtl/divider.sv:122$1350 ($add).
  creating $macc model for $sub$../verilog/rtl/divider.sv:134$1367 ($sub).
  creating $macc model for $sub$../verilog/rtl/divider.sv:154$1391 ($sub).
  creating $alu model for $macc $sub$../verilog/rtl/divider.sv:154$1391.
  creating $alu model for $macc $sub$../verilog/rtl/divider.sv:134$1367.
  creating $alu model for $macc $add$../verilog/rtl/divider.sv:122$1350.
  creating $alu model for $gt$../verilog/rtl/divider.sv:158$1395 ($gt): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:123$1351 ($le): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:127$1354 ($le): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:155$1392 ($le): new $alu
  creating $alu model for $eq$../verilog/rtl/divider.sv:165$1410 ($eq): merged with $le$../verilog/rtl/divider.sv:127$1354.
  creating $alu cell for $le$../verilog/rtl/divider.sv:155$1392: $auto$alumacc.cc:474:replace_alu$1726
  creating $alu cell for $le$../verilog/rtl/divider.sv:127$1354, $eq$../verilog/rtl/divider.sv:165$1410: $auto$alumacc.cc:474:replace_alu$1737
  creating $alu cell for $le$../verilog/rtl/divider.sv:123$1351: $auto$alumacc.cc:474:replace_alu$1750
  creating $alu cell for $gt$../verilog/rtl/divider.sv:158$1395: $auto$alumacc.cc:474:replace_alu$1761
  creating $alu cell for $add$../verilog/rtl/divider.sv:122$1350: $auto$alumacc.cc:474:replace_alu$1766
  creating $alu cell for $sub$../verilog/rtl/divider.sv:134$1367: $auto$alumacc.cc:474:replace_alu$1769
  creating $alu cell for $sub$../verilog/rtl/divider.sv:154$1391: $auto$alumacc.cc:474:replace_alu$1772
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\exponent\exp_width=8\mant_width=24:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:376$1256 ($add).
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:376$1256.
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:376$1256: $auto$alumacc.cc:474:replace_alu$1775
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\invert\width=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\invert\width=23:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\invert\width=25:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\lead_zero_param\in_width=23\count_width=5:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:477$970 ($add).
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:477$970.
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:477$970: $auto$alumacc.cc:474:replace_alu$1778
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\left_shifter\mant=27:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\multiplier\exp_width=8\mant_width=24:
  creating $macc model for $add$../verilog/rtl/multiplier.sv:58$1276 ($add).
  creating $macc model for $add$../verilog/rtl/multiplier.sv:60$1282 ($add).
  creating $macc model for $add$../verilog/rtl/multiplier.sv:91$1318 ($add).
  creating $macc model for $mul$../verilog/rtl/multiplier.sv:92$1320 ($mul).
  creating $macc model for $sub$../verilog/rtl/multiplier.sv:91$1319 ($sub).
  merging $macc model for $add$../verilog/rtl/multiplier.sv:91$1318 into $sub$../verilog/rtl/multiplier.sv:91$1319.
  creating $alu model for $macc $add$../verilog/rtl/multiplier.sv:60$1282.
  creating $alu model for $macc $add$../verilog/rtl/multiplier.sv:58$1276.
  creating $macc cell for $sub$../verilog/rtl/multiplier.sv:91$1319: $auto$alumacc.cc:354:replace_macc$1781
  creating $macc cell for $mul$../verilog/rtl/multiplier.sv:92$1320: $auto$alumacc.cc:354:replace_macc$1782
  creating $alu cell for $add$../verilog/rtl/multiplier.sv:58$1276: $auto$alumacc.cc:474:replace_alu$1783
  creating $alu cell for $add$../verilog/rtl/multiplier.sv:60$1282: $auto$alumacc.cc:474:replace_alu$1786
  created 2 $alu and 2 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=10:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=23:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=26:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=3:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdff\WIDTH=5:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=10:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=23:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=26:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=3:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\rvdffe\WIDTH=5:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24:
  creating $macc model for $sub$../verilog/rtl/sigmoid_v5.sv:139$1419 ($sub).
  creating $macc model for $sub$../verilog/rtl/sigmoid_v5.sv:147$1422 ($sub).
  creating $alu model for $macc $sub$../verilog/rtl/sigmoid_v5.sv:147$1422.
  creating $alu model for $macc $sub$../verilog/rtl/sigmoid_v5.sv:139$1419.
  creating $alu model for $gt$../verilog/rtl/sigmoid_v5.sv:138$1418 ($gt): new $alu
  creating $alu model for $gt$../verilog/rtl/sigmoid_v5.sv:146$1421 ($gt): new $alu
  creating $alu cell for $gt$../verilog/rtl/sigmoid_v5.sv:146$1421: $auto$alumacc.cc:474:replace_alu$1791
  creating $alu cell for $gt$../verilog/rtl/sigmoid_v5.sv:138$1418: $auto$alumacc.cc:474:replace_alu$1796
  creating $alu cell for $sub$../verilog/rtl/sigmoid_v5.sv:139$1419: $auto$alumacc.cc:474:replace_alu$1801
  creating $alu cell for $sub$../verilog/rtl/sigmoid_v5.sv:147$1422: $auto$alumacc.cc:474:replace_alu$1804
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module $paramod\special_check\exp_width=8\mant_width=24:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module NN:
  creating $macc model for $add$../verilog/rtl/NN.sv:84$967 ($add).
  creating $alu model for $macc $add$../verilog/rtl/NN.sv:84$967.
  creating $alu model for $ge$../verilog/rtl/NN.sv:86$968 ($ge): new $alu
  creating $alu model for $lt$../verilog/rtl/NN.sv:82$966 ($lt): merged with $ge$../verilog/rtl/NN.sv:86$968.
  creating $alu cell for $ge$../verilog/rtl/NN.sv:86$968, $lt$../verilog/rtl/NN.sv:82$966: $auto$alumacc.cc:474:replace_alu$1808
  creating $alu cell for $add$../verilog/rtl/NN.sv:84$967: $auto$alumacc.cc:474:replace_alu$1821
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module add_sub:
  creating $macc model for $add$../verilog/rtl/add_sub.sv:117$704 ($add).
  creating $macc model for $add$../verilog/rtl/add_sub.sv:119$706 ($add).
  creating $macc model for $add$../verilog/rtl/add_sub.sv:140$720 ($add).
  creating $macc model for $add$../verilog/rtl/add_sub.sv:140$721 ($add).
  creating $macc model for $add$../verilog/rtl/add_sub.sv:141$723 ($add).
  creating $macc model for $sub$../verilog/rtl/add_sub.sv:104$697 ($sub).
  creating $macc model for $sub$../verilog/rtl/add_sub.sv:104$698 ($sub).
  creating $macc model for $sub$../verilog/rtl/add_sub.sv:127$712 ($sub).
  creating $macc model for $sub$../verilog/rtl/add_sub.sv:141$722 ($sub).
  creating $macc model for $sub$../verilog/rtl/add_sub.sv:145$732 ($sub).
  merging $macc model for $sub$../verilog/rtl/add_sub.sv:141$722 into $add$../verilog/rtl/add_sub.sv:141$723.
  merging $macc model for $add$../verilog/rtl/add_sub.sv:140$720 into $add$../verilog/rtl/add_sub.sv:140$721.
  creating $alu model for $macc $sub$../verilog/rtl/add_sub.sv:127$712.
  creating $alu model for $macc $sub$../verilog/rtl/add_sub.sv:104$698.
  creating $alu model for $macc $sub$../verilog/rtl/add_sub.sv:104$697.
  creating $alu model for $macc $add$../verilog/rtl/add_sub.sv:140$721.
  creating $alu model for $macc $sub$../verilog/rtl/add_sub.sv:145$732.
  creating $alu model for $macc $add$../verilog/rtl/add_sub.sv:119$706.
  creating $alu model for $macc $add$../verilog/rtl/add_sub.sv:117$704.
  creating $macc cell for $add$../verilog/rtl/add_sub.sv:141$723: $auto$alumacc.cc:354:replace_macc$1824
  creating $alu model for $gt$../verilog/rtl/add_sub.sv:85$677 ($gt): new $alu
  creating $alu model for $gt$../verilog/rtl/add_sub.sv:85$679 ($gt): new $alu
  creating $alu model for $le$../verilog/rtl/add_sub.sv:126$710 ($le): new $alu
  creating $alu model for $eq$../verilog/rtl/add_sub.sv:148$734 ($eq): merged with $gt$../verilog/rtl/add_sub.sv:85$679.
  creating $alu model for $eq$../verilog/rtl/add_sub.sv:148$735 ($eq): merged with $gt$../verilog/rtl/add_sub.sv:85$677.
  creating $alu model for $ne$../verilog/rtl/add_sub.sv:85$678 ($ne): merged with $gt$../verilog/rtl/add_sub.sv:85$677.
  creating $alu cell for $le$../verilog/rtl/add_sub.sv:126$710: $auto$alumacc.cc:474:replace_alu$1828
  creating $alu cell for $gt$../verilog/rtl/add_sub.sv:85$679, $eq$../verilog/rtl/add_sub.sv:148$734: $auto$alumacc.cc:474:replace_alu$1841
  creating $alu cell for $gt$../verilog/rtl/add_sub.sv:85$677, $eq$../verilog/rtl/add_sub.sv:148$735, $ne$../verilog/rtl/add_sub.sv:85$678: $auto$alumacc.cc:474:replace_alu$1852
  creating $alu cell for $add$../verilog/rtl/add_sub.sv:117$704: $auto$alumacc.cc:474:replace_alu$1865
  creating $alu cell for $add$../verilog/rtl/add_sub.sv:119$706: $auto$alumacc.cc:474:replace_alu$1868
  creating $alu cell for $sub$../verilog/rtl/add_sub.sv:145$732: $auto$alumacc.cc:474:replace_alu$1871
  creating $alu cell for $add$../verilog/rtl/add_sub.sv:140$721: $auto$alumacc.cc:474:replace_alu$1874
  creating $alu cell for $sub$../verilog/rtl/add_sub.sv:104$697: $auto$alumacc.cc:474:replace_alu$1877
  creating $alu cell for $sub$../verilog/rtl/add_sub.sv:104$698: $auto$alumacc.cc:474:replace_alu$1880
  creating $alu cell for $sub$../verilog/rtl/add_sub.sv:127$712: $auto$alumacc.cc:474:replace_alu$1883
  created 10 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module compress_by2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module compress_by4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module divider:
  creating $macc model for $add$../verilog/rtl/divider.sv:122$885 ($add).
  creating $macc model for $sub$../verilog/rtl/divider.sv:134$902 ($sub).
  creating $macc model for $sub$../verilog/rtl/divider.sv:154$926 ($sub).
  creating $alu model for $macc $sub$../verilog/rtl/divider.sv:154$926.
  creating $alu model for $macc $sub$../verilog/rtl/divider.sv:134$902.
  creating $alu model for $macc $add$../verilog/rtl/divider.sv:122$885.
  creating $alu model for $gt$../verilog/rtl/divider.sv:158$930 ($gt): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:123$886 ($le): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:127$889 ($le): new $alu
  creating $alu model for $le$../verilog/rtl/divider.sv:155$927 ($le): new $alu
  creating $alu model for $eq$../verilog/rtl/divider.sv:165$945 ($eq): merged with $le$../verilog/rtl/divider.sv:127$889.
  creating $alu cell for $le$../verilog/rtl/divider.sv:155$927: $auto$alumacc.cc:474:replace_alu$1890
  creating $alu cell for $le$../verilog/rtl/divider.sv:127$889, $eq$../verilog/rtl/divider.sv:165$945: $auto$alumacc.cc:474:replace_alu$1901
  creating $alu cell for $le$../verilog/rtl/divider.sv:123$886: $auto$alumacc.cc:474:replace_alu$1914
  creating $alu cell for $gt$../verilog/rtl/divider.sv:158$930: $auto$alumacc.cc:474:replace_alu$1925
  creating $alu cell for $add$../verilog/rtl/divider.sv:122$885: $auto$alumacc.cc:474:replace_alu$1930
  creating $alu cell for $sub$../verilog/rtl/divider.sv:134$902: $auto$alumacc.cc:474:replace_alu$1933
  creating $alu cell for $sub$../verilog/rtl/divider.sv:154$926: $auto$alumacc.cc:474:replace_alu$1936
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module exponent:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:376$498 ($add).
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:376$498.
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:376$498: $auto$alumacc.cc:474:replace_alu$1939
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module int_excep:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module invert:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lead_zero_param:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:477$513 ($add).
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:477$513.
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:477$513: $auto$alumacc.cc:474:replace_alu$1942
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module leading_ones:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module leading_zero:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module left_shifter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module low_mask_hi_lo:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module low_mask_lo_hi:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module mac_spec_check:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module matrix_multiply_1x2_2x1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module matrix_multiply_2x2_2x1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module multiplier:
  creating $macc model for $add$../verilog/rtl/multiplier.sv:58$811 ($add).
  creating $macc model for $add$../verilog/rtl/multiplier.sv:60$817 ($add).
  creating $macc model for $add$../verilog/rtl/multiplier.sv:91$853 ($add).
  creating $macc model for $mul$../verilog/rtl/multiplier.sv:92$855 ($mul).
  creating $macc model for $sub$../verilog/rtl/multiplier.sv:91$854 ($sub).
  merging $macc model for $add$../verilog/rtl/multiplier.sv:91$853 into $sub$../verilog/rtl/multiplier.sv:91$854.
  creating $alu model for $macc $add$../verilog/rtl/multiplier.sv:60$817.
  creating $alu model for $macc $add$../verilog/rtl/multiplier.sv:58$811.
  creating $macc cell for $sub$../verilog/rtl/multiplier.sv:91$854: $auto$alumacc.cc:354:replace_macc$1945
  creating $macc cell for $mul$../verilog/rtl/multiplier.sv:92$855: $auto$alumacc.cc:354:replace_macc$1946
  creating $alu cell for $add$../verilog/rtl/multiplier.sv:58$811: $auto$alumacc.cc:474:replace_alu$1947
  creating $alu cell for $add$../verilog/rtl/multiplier.sv:60$817: $auto$alumacc.cc:474:replace_alu$1950
  created 2 $alu and 2 $macc cells.
Extracting $alu and $macc cells in module right_shifter:
  creating $alu model for $ge$../verilog/rtl/fpu_lib.sv:262$477 ($ge): new $alu
  creating $alu cell for $ge$../verilog/rtl/fpu_lib.sv:262$477: $auto$alumacc.cc:474:replace_alu$1954
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module round_excep:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:605$626 ($add).
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:608$640 ($add).
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:671$594 ($add).
  creating $macc model for $sub$../verilog/rtl/fpu_lib.sv:670$592 ($sub).
  creating $macc model for $sub$../verilog/rtl/fpu_lib.sv:671$593 ($sub).
  merging $macc model for $sub$../verilog/rtl/fpu_lib.sv:671$593 into $add$../verilog/rtl/fpu_lib.sv:671$594.
  creating $alu model for $macc $sub$../verilog/rtl/fpu_lib.sv:670$592.
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:608$640.
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:605$626.
  creating $macc cell for $add$../verilog/rtl/fpu_lib.sv:671$594: $auto$alumacc.cc:354:replace_macc$1963
  creating $alu model for $ge$../verilog/rtl/fpu_lib.sv:613$644 ($ge): new $alu
  creating $alu model for $le$../verilog/rtl/fpu_lib.sv:624$658 ($le): new $alu
  creating $alu model for $lt$../verilog/rtl/fpu_lib.sv:614$646 ($lt): new $alu
  creating $alu model for $lt$../verilog/rtl/fpu_lib.sv:668$591 ($lt): new $alu
  creating $alu cell for $lt$../verilog/rtl/fpu_lib.sv:668$591: $auto$alumacc.cc:474:replace_alu$1968
  creating $alu cell for $lt$../verilog/rtl/fpu_lib.sv:614$646: $auto$alumacc.cc:474:replace_alu$1979
  creating $alu cell for $le$../verilog/rtl/fpu_lib.sv:624$658: $auto$alumacc.cc:474:replace_alu$1992
  creating $alu cell for $ge$../verilog/rtl/fpu_lib.sv:613$644: $auto$alumacc.cc:474:replace_alu$2007
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:605$626: $auto$alumacc.cc:474:replace_alu$2018
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:608$640: $auto$alumacc.cc:474:replace_alu$2021
  creating $alu cell for $sub$../verilog/rtl/fpu_lib.sv:670$592: $auto$alumacc.cc:474:replace_alu$2024
  created 7 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module rounding:
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:113$62 ($add).
  creating $macc model for $add$../verilog/rtl/fpu_lib.sv:114$63 ($add).
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:114$63.
  creating $alu model for $macc $add$../verilog/rtl/fpu_lib.sv:113$62.
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:113$62: $auto$alumacc.cc:474:replace_alu$2027
  creating $alu cell for $add$../verilog/rtl/fpu_lib.sv:114$63: $auto$alumacc.cc:474:replace_alu$2030
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rvdff:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module rvdffe:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module sigmoid_approx:
  creating $macc model for $sub$../verilog/rtl/sigmoid_v5.sv:139$954 ($sub).
  creating $macc model for $sub$../verilog/rtl/sigmoid_v5.sv:147$957 ($sub).
  creating $alu model for $macc $sub$../verilog/rtl/sigmoid_v5.sv:147$957.
  creating $alu model for $macc $sub$../verilog/rtl/sigmoid_v5.sv:139$954.
  creating $alu model for $gt$../verilog/rtl/sigmoid_v5.sv:138$953 ($gt): new $alu
  creating $alu model for $gt$../verilog/rtl/sigmoid_v5.sv:146$956 ($gt): new $alu
  creating $alu cell for $gt$../verilog/rtl/sigmoid_v5.sv:146$956: $auto$alumacc.cc:474:replace_alu$2035
  creating $alu cell for $gt$../verilog/rtl/sigmoid_v5.sv:138$953: $auto$alumacc.cc:474:replace_alu$2040
  creating $alu cell for $sub$../verilog/rtl/sigmoid_v5.sv:139$954: $auto$alumacc.cc:474:replace_alu$2045
  creating $alu cell for $sub$../verilog/rtl/sigmoid_v5.sv:147$957: $auto$alumacc.cc:474:replace_alu$2048
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module special_check:
  created 0 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module $paramod\multiplier\exp_width=8\mant_width=24 that may be considered for resource sharing.
  Analyzing resource sharing options for $shl$../verilog/rtl/multiplier.sv:56$1269 ($shl):
    Found 1 activation_patterns using ctrl signal \exp_b_zero.
    Found 1 candidates: $shl$../verilog/rtl/multiplier.sv:55$1267
    Analyzing resource sharing with $shl$../verilog/rtl/multiplier.sv:55$1267 ($shl):
      Found 1 activation_patterns using ctrl signal \exp_a_zero.
      Activation pattern for cell $shl$../verilog/rtl/multiplier.sv:56$1269: \exp_b_zero = 1'1
      Activation pattern for cell $shl$../verilog/rtl/multiplier.sv:55$1267: \exp_a_zero = 1'1
      Size of SAT problem: 2 cells, 33 variables, 57 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \exp_b_zero \exp_a_zero } = 2'11
  Analyzing resource sharing options for $shl$../verilog/rtl/multiplier.sv:55$1267 ($shl):
    Found 1 activation_patterns using ctrl signal \exp_a_zero.
    No candidates found.
Found 2 cells in module multiplier that may be considered for resource sharing.
  Analyzing resource sharing options for $shl$../verilog/rtl/multiplier.sv:56$804 ($shl):
    Found 1 activation_patterns using ctrl signal \exp_b_zero.
    Found 1 candidates: $shl$../verilog/rtl/multiplier.sv:55$802
    Analyzing resource sharing with $shl$../verilog/rtl/multiplier.sv:55$802 ($shl):
      Found 1 activation_patterns using ctrl signal \exp_a_zero.
      Activation pattern for cell $shl$../verilog/rtl/multiplier.sv:56$804: \exp_b_zero = 1'1
      Activation pattern for cell $shl$../verilog/rtl/multiplier.sv:55$802: \exp_a_zero = 1'1
      Size of SAT problem: 2 cells, 33 variables, 57 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \exp_b_zero \exp_a_zero } = 2'11
  Analyzing resource sharing options for $shl$../verilog/rtl/multiplier.sv:55$802 ($shl):
    Found 1 activation_patterns using ctrl signal \exp_a_zero.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~3 debug messages>
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
<suppressed ~2 debug messages>
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
<suppressed ~2 debug messages>
Optimizing module add_sub.
<suppressed ~2 debug messages>
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
<suppressed ~3 debug messages>
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
<suppressed ~2 debug messages>
Optimizing module special_check.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
<suppressed ~3 debug messages>
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 1 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1709: { $auto$alumacc.cc:490:replace_alu$1703 [0] $auto$alumacc.cc:490:replace_alu$1703 [1] $auto$alumacc.cc:490:replace_alu$1703 [2] $auto$alumacc.cc:490:replace_alu$1703 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1666: { $auto$alumacc.cc:490:replace_alu$1664 [0] $auto$alumacc.cc:490:replace_alu$1664 [1] $auto$alumacc.cc:490:replace_alu$1664 [2] $auto$alumacc.cc:490:replace_alu$1664 [3] $auto$alumacc.cc:490:replace_alu$1664 [4] $auto$alumacc.cc:490:replace_alu$1664 [5] $auto$alumacc.cc:490:replace_alu$1664 [6] $auto$alumacc.cc:490:replace_alu$1664 [7] $auto$alumacc.cc:490:replace_alu$1664 [8] $auto$alumacc.cc:490:replace_alu$1664 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1677: { $auto$alumacc.cc:490:replace_alu$1675 [0] $auto$alumacc.cc:490:replace_alu$1675 [1] $auto$alumacc.cc:490:replace_alu$1675 [2] $auto$alumacc.cc:490:replace_alu$1675 [3] $auto$alumacc.cc:490:replace_alu$1675 [4] $auto$alumacc.cc:490:replace_alu$1675 [5] $auto$alumacc.cc:490:replace_alu$1675 [6] $auto$alumacc.cc:490:replace_alu$1675 [7] $auto$alumacc.cc:490:replace_alu$1675 [8] $auto$alumacc.cc:490:replace_alu$1675 [9] $auto$alumacc.cc:490:replace_alu$1675 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1690: { $auto$alumacc.cc:490:replace_alu$1688 [0] $auto$alumacc.cc:490:replace_alu$1688 [1] }
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1748: { $auto$rtlil.cc:1832:Not$1747 $auto$rtlil.cc:1835:ReduceAnd$1741 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1733: { $auto$alumacc.cc:490:replace_alu$1727 [0] $auto$alumacc.cc:490:replace_alu$1727 [1] $auto$alumacc.cc:490:replace_alu$1727 [2] $auto$alumacc.cc:490:replace_alu$1727 [3] $auto$alumacc.cc:490:replace_alu$1727 [4] $auto$alumacc.cc:490:replace_alu$1727 [5] $auto$alumacc.cc:490:replace_alu$1727 [6] $auto$alumacc.cc:490:replace_alu$1727 [7] $auto$alumacc.cc:490:replace_alu$1727 [8] $auto$alumacc.cc:490:replace_alu$1727 [9] $auto$alumacc.cc:490:replace_alu$1727 [10] $auto$alumacc.cc:490:replace_alu$1727 [11] $auto$alumacc.cc:490:replace_alu$1727 [12] $auto$alumacc.cc:490:replace_alu$1727 [13] $auto$alumacc.cc:490:replace_alu$1727 [14] $auto$alumacc.cc:490:replace_alu$1727 [15] $auto$alumacc.cc:490:replace_alu$1727 [16] $auto$alumacc.cc:490:replace_alu$1727 [17] $auto$alumacc.cc:490:replace_alu$1727 [18] $auto$alumacc.cc:490:replace_alu$1727 [19] $auto$alumacc.cc:490:replace_alu$1727 [20] $auto$alumacc.cc:490:replace_alu$1727 [21] $auto$alumacc.cc:490:replace_alu$1727 [22] $auto$alumacc.cc:490:replace_alu$1727 [23] $auto$alumacc.cc:490:replace_alu$1727 [24] $auto$alumacc.cc:490:replace_alu$1727 [25] $auto$alumacc.cc:490:replace_alu$1727 [26] $auto$alumacc.cc:490:replace_alu$1727 [27] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1740: { $auto$alumacc.cc:490:replace_alu$1738 [0] $auto$alumacc.cc:490:replace_alu$1738 [1] $auto$alumacc.cc:490:replace_alu$1738 [2] $auto$alumacc.cc:490:replace_alu$1738 [3] $auto$alumacc.cc:490:replace_alu$1738 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1757: { $auto$alumacc.cc:490:replace_alu$1751 [0] $auto$alumacc.cc:490:replace_alu$1751 [1] $auto$alumacc.cc:490:replace_alu$1751 [2] $auto$alumacc.cc:490:replace_alu$1751 [3] $auto$alumacc.cc:490:replace_alu$1751 [4] $auto$alumacc.cc:490:replace_alu$1751 [5] $auto$alumacc.cc:490:replace_alu$1751 [6] $auto$alumacc.cc:490:replace_alu$1751 [7] $auto$alumacc.cc:490:replace_alu$1751 [8] $auto$alumacc.cc:490:replace_alu$1751 [9] $auto$alumacc.cc:490:replace_alu$1751 [10] }
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1813: { $auto$alumacc.cc:490:replace_alu$1809 [0] $auto$alumacc.cc:490:replace_alu$1809 [1] $auto$alumacc.cc:490:replace_alu$1809 [2] $auto$alumacc.cc:490:replace_alu$1809 [3] $auto$alumacc.cc:490:replace_alu$1809 [4] $auto$alumacc.cc:490:replace_alu$1809 [5] }
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1831: { $auto$alumacc.cc:490:replace_alu$1829 [0] $auto$alumacc.cc:490:replace_alu$1829 [1] $auto$alumacc.cc:490:replace_alu$1829 [2] $auto$alumacc.cc:490:replace_alu$1829 [3] $auto$alumacc.cc:490:replace_alu$1829 [4] $auto$alumacc.cc:490:replace_alu$1829 [5] $auto$alumacc.cc:490:replace_alu$1829 [6] $auto$alumacc.cc:490:replace_alu$1829 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1844: { $auto$alumacc.cc:490:replace_alu$1842 [0] $auto$alumacc.cc:490:replace_alu$1842 [1] $auto$alumacc.cc:490:replace_alu$1842 [2] $auto$alumacc.cc:490:replace_alu$1842 [3] $auto$alumacc.cc:490:replace_alu$1842 [4] $auto$alumacc.cc:490:replace_alu$1842 [5] $auto$alumacc.cc:490:replace_alu$1842 [6] $auto$alumacc.cc:490:replace_alu$1842 [7] $auto$alumacc.cc:490:replace_alu$1842 [8] $auto$alumacc.cc:490:replace_alu$1842 [9] $auto$alumacc.cc:490:replace_alu$1842 [10] $auto$alumacc.cc:490:replace_alu$1842 [11] $auto$alumacc.cc:490:replace_alu$1842 [12] $auto$alumacc.cc:490:replace_alu$1842 [13] $auto$alumacc.cc:490:replace_alu$1842 [14] $auto$alumacc.cc:490:replace_alu$1842 [15] $auto$alumacc.cc:490:replace_alu$1842 [16] $auto$alumacc.cc:490:replace_alu$1842 [17] $auto$alumacc.cc:490:replace_alu$1842 [18] $auto$alumacc.cc:490:replace_alu$1842 [19] $auto$alumacc.cc:490:replace_alu$1842 [20] $auto$alumacc.cc:490:replace_alu$1842 [21] $auto$alumacc.cc:490:replace_alu$1842 [22] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1855: { $auto$alumacc.cc:490:replace_alu$1853 [0] $auto$alumacc.cc:490:replace_alu$1853 [1] $auto$alumacc.cc:490:replace_alu$1853 [2] $auto$alumacc.cc:490:replace_alu$1853 [3] $auto$alumacc.cc:490:replace_alu$1853 [4] $auto$alumacc.cc:490:replace_alu$1853 [5] $auto$alumacc.cc:490:replace_alu$1853 [6] $auto$alumacc.cc:490:replace_alu$1853 [7] }
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1899: { $auto$rtlil.cc:1864:Xor$1896 $auto$rtlil.cc:1835:ReduceAnd$1898 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1897: { $auto$alumacc.cc:490:replace_alu$1891 [0] $auto$alumacc.cc:490:replace_alu$1891 [1] $auto$alumacc.cc:490:replace_alu$1891 [2] $auto$alumacc.cc:490:replace_alu$1891 [3] $auto$alumacc.cc:490:replace_alu$1891 [4] $auto$alumacc.cc:490:replace_alu$1891 [5] $auto$alumacc.cc:490:replace_alu$1891 [6] $auto$alumacc.cc:490:replace_alu$1891 [7] $auto$alumacc.cc:490:replace_alu$1891 [8] $auto$alumacc.cc:490:replace_alu$1891 [9] $auto$alumacc.cc:490:replace_alu$1891 [10] $auto$alumacc.cc:490:replace_alu$1891 [11] $auto$alumacc.cc:490:replace_alu$1891 [12] $auto$alumacc.cc:490:replace_alu$1891 [13] $auto$alumacc.cc:490:replace_alu$1891 [14] $auto$alumacc.cc:490:replace_alu$1891 [15] $auto$alumacc.cc:490:replace_alu$1891 [16] $auto$alumacc.cc:490:replace_alu$1891 [17] $auto$alumacc.cc:490:replace_alu$1891 [18] $auto$alumacc.cc:490:replace_alu$1891 [19] $auto$alumacc.cc:490:replace_alu$1891 [20] $auto$alumacc.cc:490:replace_alu$1891 [21] $auto$alumacc.cc:490:replace_alu$1891 [22] $auto$alumacc.cc:490:replace_alu$1891 [23] $auto$alumacc.cc:490:replace_alu$1891 [24] $auto$alumacc.cc:490:replace_alu$1891 [25] $auto$alumacc.cc:490:replace_alu$1891 [26] $auto$alumacc.cc:490:replace_alu$1891 [27] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1904: { $auto$alumacc.cc:490:replace_alu$1902 [0] $auto$alumacc.cc:490:replace_alu$1902 [1] $auto$alumacc.cc:490:replace_alu$1902 [2] $auto$alumacc.cc:490:replace_alu$1902 [3] $auto$alumacc.cc:490:replace_alu$1902 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1921: { $auto$alumacc.cc:490:replace_alu$1915 [0] $auto$alumacc.cc:490:replace_alu$1915 [1] $auto$alumacc.cc:490:replace_alu$1915 [2] $auto$alumacc.cc:490:replace_alu$1915 [3] $auto$alumacc.cc:490:replace_alu$1915 [4] $auto$alumacc.cc:490:replace_alu$1915 [5] $auto$alumacc.cc:490:replace_alu$1915 [6] $auto$alumacc.cc:490:replace_alu$1915 [7] $auto$alumacc.cc:490:replace_alu$1915 [8] $auto$alumacc.cc:490:replace_alu$1915 [9] $auto$alumacc.cc:490:replace_alu$1915 [10] }
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1959: { $auto$alumacc.cc:490:replace_alu$1955 [0] $auto$alumacc.cc:490:replace_alu$1955 [1] $auto$alumacc.cc:490:replace_alu$1955 [2] $auto$alumacc.cc:490:replace_alu$1955 [3] $auto$alumacc.cc:490:replace_alu$1955 [4] $auto$alumacc.cc:490:replace_alu$1955 [5] $auto$alumacc.cc:490:replace_alu$1955 [6] $auto$alumacc.cc:490:replace_alu$1955 [7] }
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
    New input vector for $reduce_or cell $reduce_or$../verilog/rtl/fpu_lib.sv:598$615: { $and$../verilog/rtl/fpu_lib.sv:598$614_Y [0] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [1] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [2] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [3] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [4] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [5] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [6] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [7] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [8] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [9] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [10] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [11] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [12] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [13] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [14] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [15] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [16] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [17] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [18] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [19] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [20] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [21] $and$../verilog/rtl/fpu_lib.sv:598$614_Y [22] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2005: { $auto$rtlil.cc:1832:Not$2004 $auto$rtlil.cc:1835:ReduceAnd$1996 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2014: { $auto$alumacc.cc:490:replace_alu$2008 [0] $auto$alumacc.cc:490:replace_alu$2008 [1] $auto$alumacc.cc:490:replace_alu$2008 [2] $auto$alumacc.cc:490:replace_alu$2008 [3] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1971: { $auto$alumacc.cc:490:replace_alu$1969 [0] $auto$alumacc.cc:490:replace_alu$1969 [1] $auto$alumacc.cc:490:replace_alu$1969 [2] $auto$alumacc.cc:490:replace_alu$1969 [3] $auto$alumacc.cc:490:replace_alu$1969 [4] $auto$alumacc.cc:490:replace_alu$1969 [5] $auto$alumacc.cc:490:replace_alu$1969 [6] $auto$alumacc.cc:490:replace_alu$1969 [7] $auto$alumacc.cc:490:replace_alu$1969 [8] $auto$alumacc.cc:490:replace_alu$1969 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1982: { $auto$alumacc.cc:490:replace_alu$1980 [0] $auto$alumacc.cc:490:replace_alu$1980 [1] $auto$alumacc.cc:490:replace_alu$1980 [2] $auto$alumacc.cc:490:replace_alu$1980 [3] $auto$alumacc.cc:490:replace_alu$1980 [4] $auto$alumacc.cc:490:replace_alu$1980 [5] $auto$alumacc.cc:490:replace_alu$1980 [6] $auto$alumacc.cc:490:replace_alu$1980 [7] $auto$alumacc.cc:490:replace_alu$1980 [8] $auto$alumacc.cc:490:replace_alu$1980 [9] $auto$alumacc.cc:490:replace_alu$1980 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$1995: { $auto$alumacc.cc:490:replace_alu$1993 [0] $auto$alumacc.cc:490:replace_alu$1993 [1] }
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 23 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 15 unused cells and 49 unused wires.
<suppressed ~28 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1748: { \out_valid $auto$rtlil.cc:1832:Not$1747 }
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$1912: { $auto$rtlil.cc:1832:Not$1911 \out_valid }
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 2 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~167 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.13.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.13.23. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~113 debug messages>
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
<suppressed ~27 debug messages>
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
<suppressed ~15 debug messages>
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
<suppressed ~26 debug messages>
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
<suppressed ~1 debug messages>
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
<suppressed ~32 debug messages>
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
<suppressed ~2 debug messages>
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
<suppressed ~5 debug messages>
Optimizing module NN.
<suppressed ~2 debug messages>
Optimizing module add_sub.
<suppressed ~30 debug messages>
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
<suppressed ~27 debug messages>
Optimizing module exponent.
<suppressed ~15 debug messages>
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
<suppressed ~6 debug messages>
Optimizing module leading_ones.
<suppressed ~362 debug messages>
Optimizing module leading_zero.
<suppressed ~253 debug messages>
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
<suppressed ~1 debug messages>
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
<suppressed ~32 debug messages>
Optimizing module right_shifter.
<suppressed ~338 debug messages>
Optimizing module round_excep.
<suppressed ~118 debug messages>
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
<suppressed ~2 debug messages>
Optimizing module special_check.
<suppressed ~5 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
<suppressed ~3 debug messages>
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
<suppressed ~3 debug messages>
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 2 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 4 unused cells and 548 unused wires.
<suppressed ~21 debug messages>

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
<suppressed ~1 debug messages>
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~155 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:645$1121:
      Old ports: A=9'000000000, B=9'111000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [6]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [8:7] $ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [5:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [6] $ternary$../verilog/rtl/fpu_lib.sv:645$1121_Y [6] 6'000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:646$1124:
      Old ports: A=9'000000000, B=9'110010100, Y=$ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [2]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [8:3] $ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [1:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [2] $ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [2] 2'00 $ternary$../verilog/rtl/fpu_lib.sv:646$1124_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:647$1127:
      Old ports: A=8'00000000, B=8'10000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:647$1127_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:647$1127_Y [7]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:647$1127_Y [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:648$1130:
      Old ports: A=7'0000000, B=7'1000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:648$1130_Y [6:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:648$1130_Y [6]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:648$1130_Y [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:649$1133:
      Old ports: A=7'0000000, B=7'1101011, Y=$ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [6:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [6:1] = { $ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:649$1133_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:650$1135:
      Old ports: A=9'000000000, B=9'101111111, Y=$ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [8:1] = { $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$1135_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:651$1137:
      Old ports: A=9'000000000, B=9'110000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:651$1137_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:651$1137_Y [7]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:651$1137_Y [8] $ternary$../verilog/rtl/fpu_lib.sv:651$1137_Y [6:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:651$1137_Y [7] 7'0000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:652$1139:
      Old ports: A=9'000000000, B=9'111000000, Y=$auto$wreduce.cc:455:run$1543 [8:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1543 [6]
      New connections: { $auto$wreduce.cc:455:run$1543 [8:7] $auto$wreduce.cc:455:run$1543 [5:0] } = { $auto$wreduce.cc:455:run$1543 [6] $auto$wreduce.cc:455:run$1543 [6] 6'000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:655$1142:
      Old ports: A=23'00000000000000000000000, B=23'10000000000000000000000, Y=$auto$wreduce.cc:455:run$1544 [22:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1544 [22]
      New connections: $auto$wreduce.cc:455:run$1544 [21:0] = 22'0000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:657$1147:
      Old ports: A=23'00000000000000000000000, B={ \common_mant_out [22] 22'0000000000000000000000 }, Y=$auto$wreduce.cc:455:run$1545 [22:0]
      New ports: A=1'0, B=\common_mant_out [22], Y=$auto$wreduce.cc:455:run$1545 [22]
      New connections: $auto$wreduce.cc:455:run$1545 [21:0] = 22'0000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:659$1155:
      Old ports: A=23'00000000000000000000000, B={ 1'0 \common_mant_out [21:0] }, Y=$auto$wreduce.cc:455:run$1546 [22:0]
      New ports: A=22'0000000000000000000000, B=\common_mant_out [21:0], Y=$auto$wreduce.cc:455:run$1546 [21:0]
      New connections: $auto$wreduce.cc:455:run$1546 [22] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:671$1165:
      Old ports: A=8'00000000, B=8'11111111, Y=$ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [7:1] = { $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$1165_Y [0] }
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:133$1362:
      Old ports: A=5'00000, B=5'11010, Y={ $auto$opt_expr.cc:189:group_cell_inputs$2122 $ternary$../verilog/rtl/divider.sv:133$1362_Y [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:189:group_cell_inputs$2122 [0]
      New connections: { $auto$opt_expr.cc:189:group_cell_inputs$2122 [3:1] $ternary$../verilog/rtl/divider.sv:133$1362_Y [0] } = { $auto$opt_expr.cc:189:group_cell_inputs$2122 [0] $auto$opt_expr.cc:189:group_cell_inputs$2122 [0] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:150$1378:
      Old ports: A=26'00000000000000000000000000, B={ \mant_a 1'0 }, Y=$auto$wreduce.cc:455:run$1553 [25:0]
      New ports: A=25'0000000000000000000000000, B=\mant_a, Y=$auto$wreduce.cc:455:run$1553 [25:1]
      New connections: $auto$wreduce.cc:455:run$1553 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:150$1381:
      Old ports: A={ \rem_z 1'0 }, B=27'000000000000000000000000000, Y={ \rem [26] $auto$wreduce.cc:455:run$1554 [25:0] }
      New ports: A=\rem_z, B=26'00000000000000000000000000, Y={ \rem [26] $auto$wreduce.cc:455:run$1554 [25:1] }
      New connections: $auto$wreduce.cc:455:run$1554 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:152$1386:
      Old ports: A=26'00000000000000000000000000, B={ \mant_b 1'0 }, Y={ \trail_term [25] $auto$wreduce.cc:455:run$1555 [24:0] }
      New ports: A=25'0000000000000000000000000, B=\mant_b, Y={ \trail_term [25] $auto$wreduce.cc:455:run$1555 [24:1] }
      New connections: $auto$wreduce.cc:455:run$1555 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:153$1389:
      Old ports: A={ 1'1 \mant_b_z 1'0 }, B=25'0000000000000000000000000, Y=$auto$wreduce.cc:455:run$1556 [24:0]
      New ports: A={ 1'1 \mant_b_z }, B=24'000000000000000000000000, Y=$auto$wreduce.cc:455:run$1556 [24:1]
      New connections: $auto$wreduce.cc:455:run$1556 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:161$1402:
      Old ports: A=26'00000000000000000000000000, B={ \new_bit 25'0000000000000000000000000 }, Y=$auto$wreduce.cc:455:run$1557 [25:0]
      New ports: A=1'0, B=\new_bit, Y=$auto$wreduce.cc:455:run$1557 [25]
      New connections: $auto$wreduce.cc:455:run$1557 [24:0] = 25'0000000000000000000000000
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1000:
      Old ports: A=4'0000, B=4'1111, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [3:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:487$1000_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1002:
      Old ports: A=5'00000, B=5'10000, Y={ \bt[16].count_so_far [4] $auto$wreduce.cc:455:run$1568 [3:0] }
      New ports: A=1'0, B=1'1, Y=\bt[16].count_so_far [4]
      New connections: $auto$wreduce.cc:455:run$1568 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1004:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$1569 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1569 [0]
      New connections: $auto$wreduce.cc:455:run$1569 [4:1] = { $auto$wreduce.cc:455:run$1569 [0] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1006:
      Old ports: A=5'00000, B=5'10010, Y=$auto$wreduce.cc:455:run$1570 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1570 [1]
      New connections: { $auto$wreduce.cc:455:run$1570 [4:2] $auto$wreduce.cc:455:run$1570 [0] } = { $auto$wreduce.cc:455:run$1570 [1] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1008:
      Old ports: A=5'00000, B=5'10011, Y=$auto$wreduce.cc:455:run$1571 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1571 [0]
      New connections: $auto$wreduce.cc:455:run$1571 [4:1] = { $auto$wreduce.cc:455:run$1571 [0] 2'00 $auto$wreduce.cc:455:run$1571 [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1010:
      Old ports: A=5'00000, B=5'10100, Y=$auto$wreduce.cc:455:run$1572 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1572 [2]
      New connections: { $auto$wreduce.cc:455:run$1572 [4:3] $auto$wreduce.cc:455:run$1572 [1:0] } = { $auto$wreduce.cc:455:run$1572 [2] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1012:
      Old ports: A=5'00000, B=5'10101, Y=$auto$wreduce.cc:455:run$1573 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1573 [0]
      New connections: $auto$wreduce.cc:455:run$1573 [4:1] = { $auto$wreduce.cc:455:run$1573 [0] 1'0 $auto$wreduce.cc:455:run$1573 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1014:
      Old ports: A=5'00000, B=5'10110, Y=$auto$wreduce.cc:455:run$1574 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1574 [1]
      New connections: { $auto$wreduce.cc:455:run$1574 [4:2] $auto$wreduce.cc:455:run$1574 [0] } = { $auto$wreduce.cc:455:run$1574 [1] 1'0 $auto$wreduce.cc:455:run$1574 [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$1016:
      Old ports: A=5'00000, B=5'10111, Y=$auto$wreduce.cc:455:run$1575 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1575 [0]
      New connections: $auto$wreduce.cc:455:run$1575 [4:1] = { $auto$wreduce.cc:455:run$1575 [0] 1'0 $auto$wreduce.cc:455:run$1575 [0] $auto$wreduce.cc:455:run$1575 [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$974:
      Old ports: A=2'00, B=2'10, Y={ \bt[2].count_so_far [1] $ternary$../verilog/rtl/fpu_lib.sv:487$974_Y [0] }
      New ports: A=1'0, B=1'1, Y=\bt[2].count_so_far [1]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$974_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$976:
      Old ports: A=2'00, B=2'11, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$976_Y [1:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$976_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$976_Y [1] = $ternary$../verilog/rtl/fpu_lib.sv:487$976_Y [0]
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$978:
      Old ports: A=3'000, B=3'100, Y={ \bt[4].count_so_far [2] $ternary$../verilog/rtl/fpu_lib.sv:487$978_Y [1:0] }
      New ports: A=1'0, B=1'1, Y=\bt[4].count_so_far [2]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$978_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$980:
      Old ports: A=3'000, B=3'101, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$980_Y [2:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$980_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$980_Y [2:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$980_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$982:
      Old ports: A=3'000, B=3'110, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$982_Y [2:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$982_Y [1]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:487$982_Y [2] $ternary$../verilog/rtl/fpu_lib.sv:487$982_Y [0] } = { $ternary$../verilog/rtl/fpu_lib.sv:487$982_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$984:
      Old ports: A=3'000, B=3'111, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$984_Y [2:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$984_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$984_Y [2:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$984_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:487$984_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$986:
      Old ports: A=4'0000, B=4'1000, Y={ \bt[8].count_so_far [3] $ternary$../verilog/rtl/fpu_lib.sv:487$986_Y [2:0] }
      New ports: A=1'0, B=1'1, Y=\bt[8].count_so_far [3]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$986_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$988:
      Old ports: A=4'0000, B=4'1001, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$988_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$988_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$988_Y [3:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$988_Y [0] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$990:
      Old ports: A=4'0000, B=4'1010, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$990_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$990_Y [1]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:487$990_Y [3:2] $ternary$../verilog/rtl/fpu_lib.sv:487$990_Y [0] } = { $ternary$../verilog/rtl/fpu_lib.sv:487$990_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$992:
      Old ports: A=4'0000, B=4'1011, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$992_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$992_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$992_Y [3:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$992_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:487$992_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$994:
      Old ports: A=4'0000, B=4'1100, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$994_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$994_Y [2]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:487$994_Y [3] $ternary$../verilog/rtl/fpu_lib.sv:487$994_Y [1:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:487$994_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$996:
      Old ports: A=4'0000, B=4'1101, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$996_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$996_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:487$996_Y [3:1] = { $ternary$../verilog/rtl/fpu_lib.sv:487$996_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:487$996_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:487$998:
      Old ports: A=4'0000, B=4'1110, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [1]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [3:2] $ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [0] } = { $ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [1] $ternary$../verilog/rtl/fpu_lib.sv:487$998_Y [1] 1'0 }
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/add_sub.sv:169$773:
      Old ports: A=2139095039, B=32'11111111100000000000000000000000, Y=$ternary$../verilog/rtl/add_sub.sv:169$773_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$../verilog/rtl/add_sub.sv:169$773_Y [23] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] }
      New connections: { $ternary$../verilog/rtl/add_sub.sv:169$773_Y [31:24] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [22:1] } = { $ternary$../verilog/rtl/add_sub.sv:169$773_Y [23] 7'1111111 $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] $ternary$../verilog/rtl/add_sub.sv:169$773_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/add_sub.sv:171$777:
      Old ports: A=2139095040, B=32'11111111011111111111111111111111, Y=$ternary$../verilog/rtl/add_sub.sv:171$777_Y
      New ports: A=2'10, B=2'01, Y={ $ternary$../verilog/rtl/add_sub.sv:171$777_Y [23] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] }
      New connections: { $ternary$../verilog/rtl/add_sub.sv:171$777_Y [31:24] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [22:1] } = { $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] 7'1111111 $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] $ternary$../verilog/rtl/add_sub.sv:171$777_Y [0] }
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:133$897:
      Old ports: A=5'00000, B=5'11010, Y={ $auto$opt_expr.cc:189:group_cell_inputs$2186 $ternary$../verilog/rtl/divider.sv:133$897_Y [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:189:group_cell_inputs$2186 [0]
      New connections: { $auto$opt_expr.cc:189:group_cell_inputs$2186 [3:1] $ternary$../verilog/rtl/divider.sv:133$897_Y [0] } = { $auto$opt_expr.cc:189:group_cell_inputs$2186 [0] $auto$opt_expr.cc:189:group_cell_inputs$2186 [0] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:150$913:
      Old ports: A=26'00000000000000000000000000, B={ \mant_a 1'0 }, Y=$auto$wreduce.cc:455:run$1607 [25:0]
      New ports: A=25'0000000000000000000000000, B=\mant_a, Y=$auto$wreduce.cc:455:run$1607 [25:1]
      New connections: $auto$wreduce.cc:455:run$1607 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:150$916:
      Old ports: A={ \rem_z 1'0 }, B=27'000000000000000000000000000, Y={ \rem [26] $auto$wreduce.cc:455:run$1608 [25:0] }
      New ports: A=\rem_z, B=26'00000000000000000000000000, Y={ \rem [26] $auto$wreduce.cc:455:run$1608 [25:1] }
      New connections: $auto$wreduce.cc:455:run$1608 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:152$921:
      Old ports: A=26'00000000000000000000000000, B={ \mant_b 1'0 }, Y={ \trail_term [25] $auto$wreduce.cc:455:run$1609 [24:0] }
      New ports: A=25'0000000000000000000000000, B=\mant_b, Y={ \trail_term [25] $auto$wreduce.cc:455:run$1609 [24:1] }
      New connections: $auto$wreduce.cc:455:run$1609 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:153$924:
      Old ports: A={ 1'1 \mant_b_z 1'0 }, B=25'0000000000000000000000000, Y=$auto$wreduce.cc:455:run$1610 [24:0]
      New ports: A={ 1'1 \mant_b_z }, B=24'000000000000000000000000, Y=$auto$wreduce.cc:455:run$1610 [24:1]
      New connections: $auto$wreduce.cc:455:run$1610 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/divider.sv:161$937:
      Old ports: A=26'00000000000000000000000000, B={ \new_bit 25'0000000000000000000000000 }, Y=$auto$wreduce.cc:455:run$1611 [25:0]
      New ports: A=1'0, B=\new_bit, Y=$auto$wreduce.cc:455:run$1611 [25]
      New connections: $auto$wreduce.cc:455:run$1611 [24:0] = 25'0000000000000000000000000
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:645$554:
      Old ports: A=9'000000000, B=9'111000000, Y=$auto$wreduce.cc:455:run$1653 [8:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1653 [6]
      New connections: { $auto$wreduce.cc:455:run$1653 [8:7] $auto$wreduce.cc:455:run$1653 [5:0] } = { $auto$wreduce.cc:455:run$1653 [6] $auto$wreduce.cc:455:run$1653 [6] 6'000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:646$557:
      Old ports: A=9'000000000, B=9'110010100, Y=$ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [2]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [8:3] $ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [1:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [2] $ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [2] 2'00 $ternary$../verilog/rtl/fpu_lib.sv:646$557_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:647$560:
      Old ports: A=8'00000000, B=8'10000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:647$560_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:647$560_Y [7]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:647$560_Y [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:648$563:
      Old ports: A=7'0000000, B=7'1000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:648$563_Y [6:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:648$563_Y [6]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:648$563_Y [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:649$566:
      Old ports: A=7'0000000, B=7'1101011, Y=$ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [6:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [6:1] = { $ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:649$566_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:650$568:
      Old ports: A=9'000000000, B=9'101111111, Y=$ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [8:1] = { $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] 1'0 $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:650$568_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:651$570:
      Old ports: A=9'000000000, B=9'110000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:651$570_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:651$570_Y [7]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:651$570_Y [8] $ternary$../verilog/rtl/fpu_lib.sv:651$570_Y [6:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:651$570_Y [7] 7'0000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:652$572:
      Old ports: A=9'000000000, B=9'111000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [8:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [6]
      New connections: { $ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [8:7] $ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [5:0] } = { $ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [6] $ternary$../verilog/rtl/fpu_lib.sv:652$572_Y [6] 6'000000 }
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:655$575:
      Old ports: A=23'00000000000000000000000, B=23'10000000000000000000000, Y=$ternary$../verilog/rtl/fpu_lib.sv:655$575_Y [22:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:655$575_Y [22]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:655$575_Y [21:0] = 22'0000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:657$580:
      Old ports: A=23'00000000000000000000000, B={ \rounded_mant [22] 22'0000000000000000000000 }, Y=$auto$wreduce.cc:455:run$1654 [22:0]
      New ports: A=1'0, B=\rounded_mant [22], Y=$auto$wreduce.cc:455:run$1654 [22]
      New connections: $auto$wreduce.cc:455:run$1654 [21:0] = 22'0000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:659$588:
      Old ports: A=23'00000000000000000000000, B={ 1'0 \rounded_mant [21:0] }, Y=$ternary$../verilog/rtl/fpu_lib.sv:659$588_Y [22:0]
      New ports: A=22'0000000000000000000000, B=\rounded_mant [21:0], Y=$ternary$../verilog/rtl/fpu_lib.sv:659$588_Y [21:0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:659$588_Y [22] = 1'0
    Consolidated identical input bits for $mux cell $ternary$../verilog/rtl/fpu_lib.sv:671$598:
      Old ports: A=8'00000000, B=8'11111111, Y=$ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [7:0]
      New ports: A=1'0, B=1'1, Y=$ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0]
      New connections: $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [7:1] = { $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] $ternary$../verilog/rtl/fpu_lib.sv:671$598_Y [0] }
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 60 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
<suppressed ~12 debug messages>
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
<suppressed ~12 debug messages>
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 8 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 0 unused cells and 14 unused wires.
<suppressed ~5 debug messages>

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~86 debug messages>
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
<suppressed ~31 debug messages>
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
<suppressed ~101 debug messages>
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
<suppressed ~18 debug messages>
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
<suppressed ~31 debug messages>
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
<suppressed ~86 debug messages>
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~107 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 0 unused cells and 146 unused wires.
<suppressed ~11 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.20.16. Rerunning OPT passes. (Maybe there is more to do..)

2.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~107 debug messages>

2.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 0 changes.

2.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

2.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

2.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.20.23. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=25 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=25 for cells of type $lcu.
Using template $paramod$constmap:0b7151c0bb523058e4c1bb912c2bf89fd362e273$paramod$042ed67b51157352d5377093b3d429a881d35670\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$constmap:4330209bc728ed6d313d94e716949a6ea44f4f0e$paramod$628780400a6a2c3a0e6ceadb1e3fcca008f4f8a4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod$constmap:25671bffc91492da087a7431135a9cf29086ceac$paramod$e19474880e38018eecc1e123089d46c49fdf3b45\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \s_exp [7:0] (8 bits, unsigned)
  add 8'01111111 (8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:43885dd6663c0b87bd65a3b01bb10caff3ea385a$paramod$77dac0f4ac63a84b4946129732055ac4d1dfa079\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=25\Y_WIDTH=26 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=26 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=23\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
  add \exp_a (8 bits, unsigned)
  sub \inc_dec_exp_amt (5 bits, unsigned)
  add bits \round_of (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=27\B_WIDTH=27\Y_WIDTH=28 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=27\Y_WIDTH=27 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=23 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=8 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=28 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=27 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
  add { \mant_1 [23] \mant_oper1 } * { \mant_2 [23] \mant_oper2 } (24x24 bits, unsigned)
  add { \sexp_1 [8:6] \adj_exp_a [5:0] } (9 bits, unsigned)
  add { \sexp_2 [8:6] \adj_exp_b [5:0] } (9 bits, unsigned)
  add 10'1100000000 (10 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=48 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=47 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=48\B_WIDTH=48\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=10 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=48 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=27\B_WIDTH=26\Y_WIDTH=28 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=28\Y_WIDTH=28 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=10\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:6a72df75ba949c0918a62db01d6c3ee0ba633bac$paramod$77191d9eea3ab469bfb0543f86dd82cc2d0a85fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=23\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=24 for cells of type $lcu.
Using template $paramod$constmap:b6b21f717aa26e652540597017ab0be5c9314058$paramod$0eec51ce6284c6dee4ff8e66b9cdd3976e7749b1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:c541b1a0f53eaf80ed8c0c21c8b4d7065885823b$paramod$9de0ecd4e857ba23c662d8fd632e550ab947da2c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
  add \s_exp [7:0] (8 bits, unsigned)
  add 8'01111111 (8 bits, unsigned)
  add { \sexp_1 [8:6] \adj_exp_a [5:0] } (9 bits, unsigned)
  add { \sexp_2 [8:6] \adj_exp_b [5:0] } (9 bits, unsigned)
  add 10'1100000000 (10 bits, unsigned)
  add { \mant_1 [23] \mant_oper1 } * { \mant_2 [23] \mant_oper2 } (24x24 bits, unsigned)
No more expansions possible.
<suppressed ~23104 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~367 debug messages>
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
<suppressed ~345 debug messages>
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
<suppressed ~88 debug messages>
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
<suppressed ~163 debug messages>
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
<suppressed ~499 debug messages>
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
<suppressed ~1 debug messages>
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
<suppressed ~3548 debug messages>
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
<suppressed ~44 debug messages>
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
<suppressed ~48 debug messages>
Optimizing module add_sub.
<suppressed ~473 debug messages>
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
<suppressed ~345 debug messages>
Optimizing module exponent.
<suppressed ~88 debug messages>
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
<suppressed ~14 debug messages>
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
<suppressed ~1 debug messages>
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
<suppressed ~3519 debug messages>
Optimizing module right_shifter.
<suppressed ~175 debug messages>
Optimizing module round_excep.
<suppressed ~367 debug messages>
Optimizing module rounding.
<suppressed ~289 debug messages>
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
<suppressed ~44 debug messages>
Optimizing module special_check.

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
<suppressed ~93 debug messages>
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
<suppressed ~102 debug messages>
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
<suppressed ~12 debug messages>
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
<suppressed ~3 debug messages>
Finding identical cells in module `\NN'.
<suppressed ~30 debug messages>
Finding identical cells in module `\add_sub'.
<suppressed ~84 debug messages>
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
<suppressed ~102 debug messages>
Finding identical cells in module `\exponent'.
<suppressed ~6 debug messages>
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
<suppressed ~2397 debug messages>
Finding identical cells in module `\leading_zero'.
<suppressed ~1374 debug messages>
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
<suppressed ~6 debug messages>
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
<suppressed ~12 debug messages>
Finding identical cells in module `\right_shifter'.
<suppressed ~1293 debug messages>
Finding identical cells in module `\round_excep'.
<suppressed ~102 debug messages>
Finding identical cells in module `\rounding'.
<suppressed ~273 debug messages>
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
<suppressed ~6 debug messages>
Finding identical cells in module `\special_check'.
<suppressed ~3 debug messages>
Removed a total of 1972 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 1103 unused cells and 3743 unused wires.
<suppressed ~1142 debug messages>

2.22.5. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep' to `<abc-temp-dir>/input.blif'..
Extracted 895 gates and 1005 wires to a netlist network with 108 inputs and 67 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:       83
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:              AOI4 cells:       14
ABC RESULTS:               MUX cells:      165
ABC RESULTS:              NAND cells:       19
ABC RESULTS:               NOR cells:       37
ABC RESULTS:               NOT cells:       74
ABC RESULTS:              OAI3 cells:       65
ABC RESULTS:              OAI4 cells:       15
ABC RESULTS:                OR cells:       68
ABC RESULTS:             ORNOT cells:       72
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:      830
ABC RESULTS:           input signals:      108
ABC RESULTS:          output signals:       67
Removing temp directory.

2.23.2. Extracting gate netlist of module `$paramod\divider\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 800 gates and 966 wires to a netlist network with 164 inputs and 82 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:      112
ABC RESULTS:              AOI3 cells:       50
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:       88
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:       25
ABC RESULTS:               NOT cells:       69
ABC RESULTS:              OAI3 cells:       26
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:       97
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               XOR cells:       63
ABC RESULTS:        internal signals:      720
ABC RESULTS:           input signals:      164
ABC RESULTS:          output signals:       82
Removing temp directory.

2.23.3. Extracting gate netlist of module `$paramod\exponent\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 213 gates and 251 wires to a netlist network with 36 inputs and 32 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       42
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:      109
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       24
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      183
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       32
Removing temp directory.

2.23.4. Extracting gate netlist of module `$paramod\invert\width=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.5. Extracting gate netlist of module `$paramod\invert\width=23' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.6. Extracting gate netlist of module `$paramod\invert\width=25' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.7. Extracting gate netlist of module `$paramod\lead_zero_param\in_width=23\count_width=5' to `<abc-temp-dir>/input.blif'..
Extracted 151 gates and 174 wires to a netlist network with 23 inputs and 5 outputs.

2.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.7.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:              AOI3 cells:        6
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:                OR cells:       64
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:        internal signals:      146
ABC RESULTS:           input signals:       23
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.8. Extracting gate netlist of module `$paramod\left_shifter\mant=27' to `<abc-temp-dir>/input.blif'..
Extracted 188 gates and 224 wires to a netlist network with 35 inputs and 26 outputs.

2.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.8.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       26
ABC RESULTS:               MUX cells:      104
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       31
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:        internal signals:      163
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       26
Removing temp directory.

2.23.9. Extracting gate netlist of module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130' to `<abc-temp-dir>/input.blif'..
Extracted 148 gates and 159 wires to a netlist network with 9 inputs and 25 outputs.

2.23.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       31
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              OAI3 cells:       27
ABC RESULTS:                OR cells:       20
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:        internal signals:      125
ABC RESULTS:           input signals:        9
ABC RESULTS:          output signals:       25
Removing temp directory.

2.23.10. Extracting gate netlist of module `$paramod\mac_spec_check\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 21 wires to a netlist network with 4 inputs and 5 outputs.

2.23.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.10.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.11. Extracting gate netlist of module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.12. Extracting gate netlist of module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.13. Extracting gate netlist of module `$paramod\multiplier\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 4043 gates and 4131 wires to a netlist network with 86 inputs and 42 outputs.

2.23.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       89
ABC RESULTS:            ANDNOT cells:     1012
ABC RESULTS:              AOI3 cells:      286
ABC RESULTS:               MUX cells:      218
ABC RESULTS:              NAND cells:       64
ABC RESULTS:               NOR cells:      446
ABC RESULTS:               NOT cells:      275
ABC RESULTS:              OAI3 cells:       65
ABC RESULTS:                OR cells:      246
ABC RESULTS:             ORNOT cells:       52
ABC RESULTS:              XNOR cells:      476
ABC RESULTS:               XOR cells:      725
ABC RESULTS:        internal signals:     4003
ABC RESULTS:           input signals:       86
ABC RESULTS:          output signals:       42
Removing temp directory.

2.23.14. Extracting gate netlist of module `$paramod\rvdff\WIDTH=1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.15. Extracting gate netlist of module `$paramod\rvdff\WIDTH=10' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.16. Extracting gate netlist of module `$paramod\rvdff\WIDTH=23' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.17. Extracting gate netlist of module `$paramod\rvdff\WIDTH=26' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.18. Extracting gate netlist of module `$paramod\rvdff\WIDTH=3' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.19. Extracting gate netlist of module `$paramod\rvdff\WIDTH=5' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.20. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=1' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 4 wires to a netlist network with 3 inputs and 1 outputs.

2.23.20.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.20.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

2.23.21. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=10' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 31 wires to a netlist network with 21 inputs and 10 outputs.

2.23.21.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.21.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       10
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       21
ABC RESULTS:          output signals:       10
Removing temp directory.

2.23.22. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=23' to `<abc-temp-dir>/input.blif'..
Extracted 23 gates and 70 wires to a netlist network with 47 inputs and 23 outputs.

2.23.22.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.22.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       23
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       47
ABC RESULTS:          output signals:       23
Removing temp directory.

2.23.23. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=26' to `<abc-temp-dir>/input.blif'..
Extracted 26 gates and 79 wires to a netlist network with 53 inputs and 26 outputs.

2.23.23.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.23.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:       26
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       53
ABC RESULTS:          output signals:       26
Removing temp directory.

2.23.24. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=3' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 10 wires to a netlist network with 7 inputs and 3 outputs.

2.23.24.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.24.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

2.23.25. Extracting gate netlist of module `$paramod\rvdffe\WIDTH=5' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 16 wires to a netlist network with 11 inputs and 5 outputs.

2.23.25.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.25.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        5
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.26. Extracting gate netlist of module `$paramod\sigmoid_approx\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 219 gates and 485 wires to a netlist network with 264 inputs and 136 outputs.

2.23.26.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.26.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      131
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       28
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:       85
ABC RESULTS:           input signals:      264
ABC RESULTS:          output signals:      136
Removing temp directory.

2.23.27. Extracting gate netlist of module `$paramod\special_check\exp_width=8\mant_width=24' to `<abc-temp-dir>/input.blif'..
Extracted 62 gates and 95 wires to a netlist network with 32 inputs and 10 outputs.

2.23.27.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.27.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       53
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       10
Removing temp directory.

2.23.28. Extracting gate netlist of module `\NN' to `<abc-temp-dir>/input.blif'..
Extracted 178 gates and 315 wires to a netlist network with 135 inputs and 7 outputs.

2.23.28.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.28.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:        5
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       58
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       68
ABC RESULTS:        internal signals:      173
ABC RESULTS:           input signals:      135
ABC RESULTS:          output signals:        7
Removing temp directory.

2.23.29. Extracting gate netlist of module `\add_sub' to `<abc-temp-dir>/input.blif'..
Extracted 1314 gates and 1480 wires to a netlist network with 164 inputs and 130 outputs.

2.23.29.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.29.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        9
ABC RESULTS:            ANDNOT cells:      140
ABC RESULTS:              AOI3 cells:       44
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      208
ABC RESULTS:              NAND cells:       14
ABC RESULTS:               NOR cells:       57
ABC RESULTS:               NOT cells:      138
ABC RESULTS:              OAI3 cells:      114
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      223
ABC RESULTS:             ORNOT cells:       50
ABC RESULTS:              XNOR cells:       45
ABC RESULTS:               XOR cells:      152
ABC RESULTS:        internal signals:     1186
ABC RESULTS:           input signals:      164
ABC RESULTS:          output signals:      130
Removing temp directory.

2.23.30. Extracting gate netlist of module `\compress_by2' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.31. Extracting gate netlist of module `\compress_by4' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.32. Extracting gate netlist of module `\divider' to `<abc-temp-dir>/input.blif'..
Extracted 800 gates and 966 wires to a netlist network with 164 inputs and 82 outputs.

2.23.32.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.32.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:      112
ABC RESULTS:              AOI3 cells:       50
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:       88
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:       25
ABC RESULTS:               NOT cells:       69
ABC RESULTS:              OAI3 cells:       26
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:       97
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               XOR cells:       63
ABC RESULTS:        internal signals:      720
ABC RESULTS:           input signals:      164
ABC RESULTS:          output signals:       82
Removing temp directory.

2.23.33. Extracting gate netlist of module `\exponent' to `<abc-temp-dir>/input.blif'..
Extracted 213 gates and 251 wires to a netlist network with 36 inputs and 32 outputs.

2.23.33.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.33.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       42
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:      109
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        7
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       24
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      183
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       32
Removing temp directory.

2.23.34. Extracting gate netlist of module `\int_excep' to `<abc-temp-dir>/input.blif'..
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 1 outputs.

2.23.34.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.34.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        1
Removing temp directory.

2.23.35. Extracting gate netlist of module `\invert' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.36. Extracting gate netlist of module `\lead_zero_param' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

2.23.36.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.36.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

2.23.37. Extracting gate netlist of module `\leading_ones' to `<abc-temp-dir>/input.blif'..
Extracted 195 gates and 226 wires to a netlist network with 31 inputs and 5 outputs.

2.23.37.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.37.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       41
ABC RESULTS:              AOI3 cells:        5
ABC RESULTS:               NOR cells:        4
ABC RESULTS:               NOT cells:        5
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:                OR cells:      101
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:        internal signals:      190
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.38. Extracting gate netlist of module `\leading_zero' to `<abc-temp-dir>/input.blif'..
Extracted 141 gates and 165 wires to a netlist network with 24 inputs and 5 outputs.

2.23.38.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.38.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       20
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:        2
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:                OR cells:       82
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:      136
ABC RESULTS:           input signals:       24
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.39. Extracting gate netlist of module `\left_shifter' to `<abc-temp-dir>/input.blif'..
Extracted 167 gates and 200 wires to a netlist network with 32 inputs and 23 outputs.

2.23.39.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.39.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:               MUX cells:       89
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       31
ABC RESULTS:             ORNOT cells:       24
ABC RESULTS:        internal signals:      145
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       23
Removing temp directory.

2.23.40. Extracting gate netlist of module `\low_mask_hi_lo' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.41. Extracting gate netlist of module `\low_mask_lo_hi' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

2.23.41.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.41.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

2.23.42. Extracting gate netlist of module `\mac_spec_check' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 21 wires to a netlist network with 4 inputs and 5 outputs.

2.23.42.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.42.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:        internal signals:       12
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        5
Removing temp directory.

2.23.43. Extracting gate netlist of module `\matrix_multiply_1x2_2x1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.44. Extracting gate netlist of module `\matrix_multiply_2x2_2x1' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.45. Extracting gate netlist of module `\multiplier' to `<abc-temp-dir>/input.blif'..
Extracted 4066 gates and 4154 wires to a netlist network with 86 inputs and 42 outputs.

2.23.45.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.45.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       93
ABC RESULTS:            ANDNOT cells:      990
ABC RESULTS:              AOI3 cells:      285
ABC RESULTS:               MUX cells:      219
ABC RESULTS:              NAND cells:       68
ABC RESULTS:               NOR cells:      434
ABC RESULTS:               NOT cells:      217
ABC RESULTS:              OAI3 cells:       75
ABC RESULTS:                OR cells:      282
ABC RESULTS:             ORNOT cells:       60
ABC RESULTS:              XNOR cells:      427
ABC RESULTS:               XOR cells:      791
ABC RESULTS:        internal signals:     4026
ABC RESULTS:           input signals:       86
ABC RESULTS:          output signals:       42
Removing temp directory.

2.23.46. Extracting gate netlist of module `\right_shifter' to `<abc-temp-dir>/input.blif'..
Extracted 946 gates and 982 wires to a netlist network with 35 inputs and 27 outputs.

2.23.46.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.46.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       53
ABC RESULTS:              AOI3 cells:      150
ABC RESULTS:              AOI4 cells:       26
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:       28
ABC RESULTS:               NOT cells:       38
ABC RESULTS:              OAI3 cells:      163
ABC RESULTS:                OR cells:       92
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:        internal signals:      920
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       27
Removing temp directory.

2.23.47. Extracting gate netlist of module `\round_excep' to `<abc-temp-dir>/input.blif'..
Extracted 846 gates and 954 wires to a netlist network with 106 inputs and 67 outputs.

2.23.47.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.47.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       23
ABC RESULTS:            ANDNOT cells:       70
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:              AOI4 cells:       13
ABC RESULTS:               MUX cells:      136
ABC RESULTS:              NAND cells:       19
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               NOT cells:       75
ABC RESULTS:              OAI3 cells:       68
ABC RESULTS:              OAI4 cells:       14
ABC RESULTS:                OR cells:       65
ABC RESULTS:             ORNOT cells:       72
ABC RESULTS:              XNOR cells:        9
ABC RESULTS:               XOR cells:       35
ABC RESULTS:        internal signals:      781
ABC RESULTS:           input signals:      106
ABC RESULTS:          output signals:       67
Removing temp directory.

2.23.48. Extracting gate netlist of module `\rounding' to `<abc-temp-dir>/input.blif'..
Extracted 484 gates and 517 wires to a netlist network with 31 inputs and 25 outputs.

2.23.48.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.48.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:       71
ABC RESULTS:              AOI3 cells:       25
ABC RESULTS:              AOI4 cells:       24
ABC RESULTS:               MUX cells:      136
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       47
ABC RESULTS:              OAI3 cells:       55
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       35
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       23
ABC RESULTS:        internal signals:      461
ABC RESULTS:           input signals:       31
ABC RESULTS:          output signals:       25
Removing temp directory.

2.23.49. Extracting gate netlist of module `\rvdff' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

2.23.50. Extracting gate netlist of module `\rvdffe' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 4 wires to a netlist network with 3 inputs and 1 outputs.

2.23.50.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.50.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        1
Removing temp directory.

2.23.51. Extracting gate netlist of module `\sigmoid_approx' to `<abc-temp-dir>/input.blif'..
Extracted 219 gates and 485 wires to a netlist network with 264 inputs and 136 outputs.

2.23.51.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.51.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      131
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOT cells:        5
ABC RESULTS:                OR cells:       28
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:       31
ABC RESULTS:        internal signals:       85
ABC RESULTS:           input signals:      264
ABC RESULTS:          output signals:      136
Removing temp directory.

2.23.52. Extracting gate netlist of module `\special_check' to `<abc-temp-dir>/input.blif'..
Extracted 62 gates and 95 wires to a netlist network with 32 inputs and 10 outputs.

2.23.52.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.52.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       29
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:        internal signals:       53
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       10
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
<suppressed ~45 debug messages>
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
<suppressed ~1 debug messages>
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
<suppressed ~76 debug messages>
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
<suppressed ~1 debug messages>
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
<suppressed ~53 debug messages>
Optimizing module right_shifter.
Optimizing module round_excep.
<suppressed ~22 debug messages>
Optimizing module rounding.
<suppressed ~70 debug messages>
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
<suppressed ~6 debug messages>
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
<suppressed ~3 debug messages>
Finding identical cells in module `\add_sub'.
<suppressed ~57 debug messages>
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
<suppressed ~3 debug messages>
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
<suppressed ~6 debug messages>
Finding identical cells in module `\rounding'.
<suppressed ~3 debug messages>
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 26 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..
Removed 3 unused cells and 6064 unused wires.
<suppressed ~184 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep ===

   Number of wires:                651
   Number of wire bits:            994
   Number of public wires:          34
   Number of public wire bits:     377
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                686
     $_ANDNOT_                      83
     $_AND_                         22
     $_AOI3_                         8
     $_AOI4_                        14
     $_MUX_                        165
     $_NAND_                        19
     $_NOR_                         35
     $_NOT_                         73
     $_OAI3_                        65
     $_OAI4_                        15
     $_ORNOT_                       72
     $_OR_                          68
     $_XNOR_                        14
     $_XOR_                         31
     $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130      1
     $paramod\mac_spec_check\exp_width=8\mant_width=24      1

=== $paramod\divider\exp_width=8\mant_width=24 ===

   Number of wires:                563
   Number of wire bits:           1063
   Number of public wires:          62
   Number of public wire bits:     562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                595
     $_ANDNOT_                     112
     $_AND_                         11
     $_AOI3_                        50
     $_AOI4_                         2
     $_MUX_                         88
     $_NAND_                        10
     $_NOR_                         25
     $_NOT_                         69
     $_OAI3_                        26
     $_OAI4_                         2
     $_ORNOT_                        7
     $_OR_                          97
     $_XNOR_                        17
     $_XOR_                         63
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\exponent\exp_width=8\mant_width=24      2
     $paramod\mac_spec_check\exp_width=8\mant_width=24      2
     $paramod\rvdffe\WIDTH=1         6
     $paramod\rvdffe\WIDTH=10        1
     $paramod\rvdffe\WIDTH=23        1
     $paramod\rvdffe\WIDTH=26        2
     $paramod\rvdffe\WIDTH=5         1

=== $paramod\exponent\exp_width=8\mant_width=24 ===

   Number of wires:                183
   Number of wire bits:            317
   Number of public wires:           9
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                207
     $_ANDNOT_                      42
     $_AND_                          2
     $_AOI3_                         2
     $_MUX_                        109
     $_NAND_                         2
     $_NOR_                          5
     $_NOT_                          7
     $_OAI3_                         2
     $_ORNOT_                        4
     $_OR_                          24
     $_XNOR_                         1
     $_XOR_                          6
     $paramod\lead_zero_param\in_width=23\count_width=5      1

=== $paramod\invert\width=1 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\invert\width=23 ===

   Number of wires:                  2
   Number of wire bits:             46
   Number of public wires:           2
   Number of public wire bits:      46
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\invert\width=25 ===

   Number of wires:                  2
   Number of wire bits:             50
   Number of public wires:           2
   Number of public wire bits:      50
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\lead_zero_param\in_width=23\count_width=5 ===

   Number of wires:                127
   Number of wire bits:            290
   Number of public wires:          27
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_ANDNOT_                      14
     $_AOI3_                         6
     $_NAND_                         1
     $_NOR_                          4
     $_NOT_                          7
     $_OAI3_                         5
     $_ORNOT_                        4
     $_OR_                          64
     $paramod\invert\width=23        1

=== $paramod\left_shifter\mant=27 ===

   Number of wires:                167
   Number of wire bits:            252
   Number of public wires:           4
   Number of public wire bits:      89
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                189
     $_ANDNOT_                      26
     $_MUX_                        104
     $_NOT_                          1
     $_ORNOT_                       27
     $_OR_                          31

=== $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130 ===

   Number of wires:                 92
   Number of wire bits:            660
   Number of public wires:           4
   Number of public wire bits:     572
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                114
     $_ANDNOT_                      31
     $_AND_                          1
     $_AOI3_                         8
     $_NAND_                        18
     $_NOR_                          1
     $_NOT_                          6
     $_OAI3_                        27
     $_ORNOT_                        1
     $_OR_                          20
     $paramod\invert\width=25        1

=== $paramod\mac_spec_check\exp_width=8\mant_width=24 ===

   Number of wires:                 14
   Number of wire bits:            109
   Number of public wires:          10
   Number of public wire bits:     105
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_ANDNOT_                       3
     $_NAND_                         2
     $_NOR_                          2
     $_OR_                           2

=== $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24 ===

   Number of wires:                  9
   Number of wire bits:            259
   Number of public wires:           9
   Number of public wire bits:     259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         1

=== $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24 ===

   Number of wires:                 15
   Number of wire bits:            451
   Number of public wires:          15
   Number of public wire bits:     451
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $paramod\multiplier\exp_width=8\mant_width=24      4
     add_sub                         2

=== $paramod\multiplier\exp_width=8\mant_width=24 ===

   Number of wires:               3945
   Number of wire bits:           4382
   Number of public wires:          34
   Number of public wire bits:     471
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3958
     $_ANDNOT_                    1012
     $_AND_                         89
     $_AOI3_                       286
     $_MUX_                        218
     $_NAND_                        64
     $_NOR_                        446
     $_NOT_                        274
     $_OAI3_                        65
     $_ORNOT_                       52
     $_OR_                         246
     $_XNOR_                       476
     $_XOR_                        725
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\lead_zero_param\in_width=23\count_width=5      2
     $paramod\special_check\exp_width=8\mant_width=24      2

=== $paramod\rvdff\WIDTH=1 ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_DFF_PN0_                      1

=== $paramod\rvdff\WIDTH=10 ===

   Number of wires:                  4
   Number of wire bits:             22
   Number of public wires:           4
   Number of public wire bits:      22
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $_DFF_PN0_                     10

=== $paramod\rvdff\WIDTH=23 ===

   Number of wires:                  4
   Number of wire bits:             48
   Number of public wires:           4
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 23
     $_DFF_PN0_                     23

=== $paramod\rvdff\WIDTH=26 ===

   Number of wires:                  4
   Number of wire bits:             54
   Number of public wires:           4
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_DFF_PN0_                     26

=== $paramod\rvdff\WIDTH=3 ===

   Number of wires:                  4
   Number of wire bits:              8
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_DFF_PN0_                      3

=== $paramod\rvdff\WIDTH=5 ===

   Number of wires:                  4
   Number of wire bits:             12
   Number of public wires:           4
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_DFF_PN0_                      5

=== $paramod\rvdffe\WIDTH=1 ===

   Number of wires:                  6
   Number of wire bits:              6
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_MUX_                          1
     $paramod\rvdff\WIDTH=1          1

=== $paramod\rvdffe\WIDTH=10 ===

   Number of wires:                  6
   Number of wire bits:             33
   Number of public wires:           6
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $_MUX_                         10
     $paramod\rvdff\WIDTH=10         1

=== $paramod\rvdffe\WIDTH=23 ===

   Number of wires:                  6
   Number of wire bits:             72
   Number of public wires:           6
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $_MUX_                         23
     $paramod\rvdff\WIDTH=23         1

=== $paramod\rvdffe\WIDTH=26 ===

   Number of wires:                  6
   Number of wire bits:             81
   Number of public wires:           6
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_MUX_                         26
     $paramod\rvdff\WIDTH=26         1

=== $paramod\rvdffe\WIDTH=3 ===

   Number of wires:                  6
   Number of wire bits:             12
   Number of public wires:           6
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $_MUX_                          3
     $paramod\rvdff\WIDTH=3          1

=== $paramod\rvdffe\WIDTH=5 ===

   Number of wires:                  6
   Number of wire bits:             18
   Number of public wires:           6
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $_MUX_                          5
     $paramod\rvdff\WIDTH=5          1

=== $paramod\sigmoid_approx\exp_width=8\mant_width=24 ===

   Number of wires:                108
   Number of wire bits:            734
   Number of public wires:          28
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                320
     $_ANDNOT_                       7
     $_AND_                          2
     $_AOI4_                         2
     $_DFF_PN0_                    102
     $_MUX_                        131
     $_NAND_                         2
     $_NOT_                          5
     $_OR_                          28
     $_XNOR_                         1
     $_XOR_                         31
     $paramod\divider\exp_width=8\mant_width=24      2
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         5

=== $paramod\special_check\exp_width=8\mant_width=24 ===

   Number of wires:                 64
   Number of wire bits:            133
   Number of public wires:          15
   Number of public wire bits:      84
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $_ANDNOT_                      16
     $_AOI3_                         1
     $_NAND_                         4
     $_NOR_                          5
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          29

=== NN ===

   Number of wires:                191
   Number of wire bits:            885
   Number of public wires:          30
   Number of public wire bits:     719
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                245
     $_ANDNOT_                      17
     $_AND_                          4
     $_AOI3_                         2
     $_DFF_PN0_                     71
     $_MUX_                          5
     $_NAND_                         2
     $_NOR_                          1
     $_NOT_                          5
     $_ORNOT_                        2
     $_OR_                          58
     $_XNOR_                         2
     $_XOR_                         68
     $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24      1
     $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24      1
     $paramod\sigmoid_approx\exp_width=8\mant_width=24      3
     add_sub                         3

=== add_sub ===

   Number of wires:               1088
   Number of wire bits:           1535
   Number of public wires:          40
   Number of public wire bits:     487
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1184
     $_ANDNOT_                     137
     $_AND_                          9
     $_AOI3_                        44
     $_AOI4_                         1
     $_MUX_                        208
     $_NAND_                        14
     $_NOR_                         57
     $_NOT_                        138
     $_OAI3_                       114
     $_OAI4_                         2
     $_ORNOT_                       50
     $_OR_                         222
     $_XNOR_                        44
     $_XOR_                        138
     $paramod\left_shifter\mant=27      1
     $paramod\special_check\exp_width=8\mant_width=24      2
     leading_zero                    1
     right_shifter                   1
     rounding                        1

=== compress_by2 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== compress_by4 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== divider ===

   Number of wires:                563
   Number of wire bits:           1063
   Number of public wires:          62
   Number of public wire bits:     562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                595
     $_ANDNOT_                     112
     $_AND_                         11
     $_AOI3_                        50
     $_AOI4_                         2
     $_MUX_                         88
     $_NAND_                        10
     $_NOR_                         25
     $_NOT_                         69
     $_OAI3_                        26
     $_OAI4_                         2
     $_ORNOT_                        7
     $_OR_                          97
     $_XNOR_                        17
     $_XOR_                         63
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\exponent\exp_width=8\mant_width=24      2
     $paramod\mac_spec_check\exp_width=8\mant_width=24      2
     $paramod\rvdffe\WIDTH=1         6
     $paramod\rvdffe\WIDTH=10        1
     $paramod\rvdffe\WIDTH=23        1
     $paramod\rvdffe\WIDTH=26        2
     $paramod\rvdffe\WIDTH=5         1

=== exponent ===

   Number of wires:                183
   Number of wire bits:            317
   Number of public wires:           9
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                207
     $_ANDNOT_                      42
     $_AND_                          2
     $_AOI3_                         2
     $_MUX_                        109
     $_NAND_                         2
     $_NOR_                          5
     $_NOT_                          7
     $_OAI3_                         2
     $_ORNOT_                        4
     $_OR_                          24
     $_XNOR_                         1
     $_XOR_                          6
     $paramod\lead_zero_param\in_width=23\count_width=5      1

=== int_excep ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ORNOT_                        1
     $_OR_                           1
     $_XOR_                          1

=== invert ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== lead_zero_param ===

   Number of wires:                  6
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_NOT_                          1
     $paramod\invert\width=1         1

=== leading_ones ===

   Number of wires:                162
   Number of wire bits:            197
   Number of public wires:           2
   Number of public wire bits:      37
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $_ANDNOT_                      41
     $_AOI3_                         5
     $_NOR_                          4
     $_NOT_                          5
     $_OAI3_                         5
     $_ORNOT_                        5
     $_OR_                         100

=== leading_zero ===

   Number of wires:                113
   Number of wire bits:            140
   Number of public wires:           2
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                116
     $_ANDNOT_                      20
     $_AOI3_                         1
     $_NOR_                          3
     $_NOT_                          2
     $_OAI3_                         5
     $_ORNOT_                        3
     $_OR_                          82

=== left_shifter ===

   Number of wires:                149
   Number of wire bits:            225
   Number of public wires:           4
   Number of public wire bits:      80
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                168
     $_ANDNOT_                      23
     $_MUX_                         89
     $_NOT_                          1
     $_ORNOT_                       24
     $_OR_                          31

=== low_mask_hi_lo ===

   Number of wires:                  4
   Number of wire bits:              6
   Number of public wires:           4
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod\invert\width=1         1

=== low_mask_lo_hi ===

   Number of wires:                  4
   Number of wire bits:              6
   Number of public wires:           4
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_NOT_                          1
     $paramod\invert\width=1         1

=== mac_spec_check ===

   Number of wires:                 14
   Number of wire bits:             31
   Number of public wires:          10
   Number of public wire bits:      27
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_ANDNOT_                       3
     $_NAND_                         2
     $_NOR_                          2
     $_OR_                           2

=== matrix_multiply_1x2_2x1 ===

   Number of wires:                  9
   Number of wire bits:            259
   Number of public wires:           9
   Number of public wire bits:     259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         1

=== matrix_multiply_2x2_2x1 ===

   Number of wires:                 15
   Number of wire bits:            451
   Number of public wires:          15
   Number of public wire bits:     451
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $paramod\multiplier\exp_width=8\mant_width=24      4
     add_sub                         2

=== multiplier ===

   Number of wires:               3933
   Number of wire bits:           4370
   Number of public wires:          34
   Number of public wire bits:     471
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3946
     $_ANDNOT_                     990
     $_AND_                         93
     $_AOI3_                       285
     $_MUX_                        219
     $_NAND_                        68
     $_NOR_                        434
     $_NOT_                        217
     $_OAI3_                        75
     $_ORNOT_                       60
     $_OR_                         282
     $_XNOR_                       427
     $_XOR_                        791
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\lead_zero_param\in_width=23\count_width=5      2
     $paramod\special_check\exp_width=8\mant_width=24      2

=== right_shifter ===

   Number of wires:                544
   Number of wire bits:            603
   Number of public wires:           3
   Number of public wire bits:      62
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                568
     $_ANDNOT_                      53
     $_AND_                          6
     $_AOI3_                       150
     $_AOI4_                        26
     $_NAND_                         5
     $_NOR_                         28
     $_NOT_                         38
     $_OAI3_                       163
     $_ORNOT_                        7
     $_OR_                          92

=== round_excep ===

   Number of wires:                608
   Number of wire bits:            948
   Number of public wires:          35
   Number of public wire bits:     375
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                642
     $_ANDNOT_                      70
     $_AND_                         23
     $_AOI3_                         8
     $_AOI4_                        13
     $_MUX_                        136
     $_NAND_                        19
     $_NOR_                         34
     $_NOT_                         74
     $_OAI3_                        68
     $_OAI4_                        14
     $_ORNOT_                       72
     $_OR_                          65
     $_XNOR_                         9
     $_XOR_                         35
     $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130      1
     $paramod\mac_spec_check\exp_width=8\mant_width=24      1

=== rounding ===

   Number of wires:                428
   Number of wire bits:            502
   Number of public wires:           7
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                446
     $_ANDNOT_                      71
     $_AND_                          1
     $_AOI3_                        25
     $_AOI4_                        24
     $_MUX_                        136
     $_NAND_                        18
     $_NOR_                          5
     $_NOT_                         47
     $_OAI3_                        55
     $_OAI4_                         1
     $_ORNOT_                        2
     $_OR_                          35
     $_XNOR_                         3
     $_XOR_                         23

=== rvdff ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_DFF_PN0_                      1

=== rvdffe ===

   Number of wires:                  6
   Number of wire bits:              6
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_MUX_                          1
     $paramod\rvdff\WIDTH=1          1

=== sigmoid_approx ===

   Number of wires:                108
   Number of wire bits:            734
   Number of public wires:          28
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                320
     $_ANDNOT_                       7
     $_AND_                          2
     $_AOI4_                         2
     $_DFF_PN0_                    102
     $_MUX_                        131
     $_NAND_                         2
     $_NOT_                          5
     $_OR_                          28
     $_XNOR_                         1
     $_XOR_                         31
     $paramod\divider\exp_width=8\mant_width=24      2
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         5

=== special_check ===

   Number of wires:                 64
   Number of wire bits:            133
   Number of public wires:          15
   Number of public wire bits:      84
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $_ANDNOT_                      16
     $_AOI3_                         1
     $_NAND_                         4
     $_NOR_                          5
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          29

2.27. Executing CHECK pass (checking for obvious problems).
checking module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
checking module $paramod\divider\exp_width=8\mant_width=24..
checking module $paramod\exponent\exp_width=8\mant_width=24..
checking module $paramod\invert\width=1..
checking module $paramod\invert\width=23..
checking module $paramod\invert\width=25..
checking module $paramod\lead_zero_param\in_width=23\count_width=5..
checking module $paramod\left_shifter\mant=27..
checking module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
checking module $paramod\mac_spec_check\exp_width=8\mant_width=24..
checking module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
checking module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
checking module $paramod\multiplier\exp_width=8\mant_width=24..
checking module $paramod\rvdff\WIDTH=1..
checking module $paramod\rvdff\WIDTH=10..
checking module $paramod\rvdff\WIDTH=23..
checking module $paramod\rvdff\WIDTH=26..
checking module $paramod\rvdff\WIDTH=3..
checking module $paramod\rvdff\WIDTH=5..
checking module $paramod\rvdffe\WIDTH=1..
checking module $paramod\rvdffe\WIDTH=10..
checking module $paramod\rvdffe\WIDTH=23..
checking module $paramod\rvdffe\WIDTH=26..
checking module $paramod\rvdffe\WIDTH=3..
checking module $paramod\rvdffe\WIDTH=5..
checking module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
checking module $paramod\special_check\exp_width=8\mant_width=24..
checking module NN..
checking module add_sub..
checking module compress_by2..
checking module compress_by4..
checking module divider..
checking module exponent..
checking module int_excep..
checking module invert..
checking module lead_zero_param..
checking module leading_ones..
checking module leading_zero..
checking module left_shifter..
checking module low_mask_hi_lo..
checking module low_mask_lo_hi..
checking module mac_spec_check..
checking module matrix_multiply_1x2_2x1..
checking module matrix_multiply_2x2_2x1..
checking module multiplier..
checking module right_shifter..
checking module round_excep..
checking module rounding..
checking module rvdff..
checking module rvdffe..
checking module sigmoid_approx..
checking module special_check..
found and reported 0 problems.

3. Executing OPT pass (performing simple optimizations).

3.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

3.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\divider\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\exponent\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\invert\width=25..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\lead_zero_param\in_width=23\count_width=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\left_shifter\mant=27..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\mac_spec_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\multiplier\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdff\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=10..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=23..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=26..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=3..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\rvdffe\WIDTH=5..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module $paramod\special_check\exp_width=8\mant_width=24..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \NN..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \add_sub..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \compress_by4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \divider..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \exponent..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \int_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \invert..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lead_zero_param..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_ones..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \leading_zero..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \left_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_hi_lo..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \low_mask_lo_hi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \mac_spec_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_1x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \matrix_multiply_2x2_2x1..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \multiplier..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \right_shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \round_excep..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rounding..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \rvdffe..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \sigmoid_approx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \special_check..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
  Optimizing cells in module $paramod\divider\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\exponent\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\invert\width=1.
  Optimizing cells in module $paramod\invert\width=23.
  Optimizing cells in module $paramod\invert\width=25.
  Optimizing cells in module $paramod\lead_zero_param\in_width=23\count_width=5.
  Optimizing cells in module $paramod\left_shifter\mant=27.
  Optimizing cells in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
  Optimizing cells in module $paramod\mac_spec_check\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\multiplier\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\rvdff\WIDTH=1.
  Optimizing cells in module $paramod\rvdff\WIDTH=10.
  Optimizing cells in module $paramod\rvdff\WIDTH=23.
  Optimizing cells in module $paramod\rvdff\WIDTH=26.
  Optimizing cells in module $paramod\rvdff\WIDTH=3.
  Optimizing cells in module $paramod\rvdff\WIDTH=5.
  Optimizing cells in module $paramod\rvdffe\WIDTH=1.
  Optimizing cells in module $paramod\rvdffe\WIDTH=10.
  Optimizing cells in module $paramod\rvdffe\WIDTH=23.
  Optimizing cells in module $paramod\rvdffe\WIDTH=26.
  Optimizing cells in module $paramod\rvdffe\WIDTH=3.
  Optimizing cells in module $paramod\rvdffe\WIDTH=5.
  Optimizing cells in module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
  Optimizing cells in module $paramod\special_check\exp_width=8\mant_width=24.
  Optimizing cells in module \NN.
  Optimizing cells in module \add_sub.
  Optimizing cells in module \compress_by2.
  Optimizing cells in module \compress_by4.
  Optimizing cells in module \divider.
  Optimizing cells in module \exponent.
  Optimizing cells in module \int_excep.
  Optimizing cells in module \invert.
  Optimizing cells in module \lead_zero_param.
  Optimizing cells in module \leading_ones.
  Optimizing cells in module \leading_zero.
  Optimizing cells in module \left_shifter.
  Optimizing cells in module \low_mask_hi_lo.
  Optimizing cells in module \low_mask_lo_hi.
  Optimizing cells in module \mac_spec_check.
  Optimizing cells in module \matrix_multiply_1x2_2x1.
  Optimizing cells in module \matrix_multiply_2x2_2x1.
  Optimizing cells in module \multiplier.
  Optimizing cells in module \right_shifter.
  Optimizing cells in module \round_excep.
  Optimizing cells in module \rounding.
  Optimizing cells in module \rvdff.
  Optimizing cells in module \rvdffe.
  Optimizing cells in module \sigmoid_approx.
  Optimizing cells in module \special_check.
Performed a total of 0 changes.

3.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Finding identical cells in module `$paramod\divider\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\exponent\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\invert\width=1'.
Finding identical cells in module `$paramod\invert\width=23'.
Finding identical cells in module `$paramod\invert\width=25'.
Finding identical cells in module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Finding identical cells in module `$paramod\left_shifter\mant=27'.
Finding identical cells in module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Finding identical cells in module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\multiplier\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\rvdff\WIDTH=1'.
Finding identical cells in module `$paramod\rvdff\WIDTH=10'.
Finding identical cells in module `$paramod\rvdff\WIDTH=23'.
Finding identical cells in module `$paramod\rvdff\WIDTH=26'.
Finding identical cells in module `$paramod\rvdff\WIDTH=3'.
Finding identical cells in module `$paramod\rvdff\WIDTH=5'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=1'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=10'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=23'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=26'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=3'.
Finding identical cells in module `$paramod\rvdffe\WIDTH=5'.
Finding identical cells in module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Finding identical cells in module `$paramod\special_check\exp_width=8\mant_width=24'.
Finding identical cells in module `\NN'.
Finding identical cells in module `\add_sub'.
Finding identical cells in module `\compress_by2'.
Finding identical cells in module `\compress_by4'.
Finding identical cells in module `\divider'.
Finding identical cells in module `\exponent'.
Finding identical cells in module `\int_excep'.
Finding identical cells in module `\invert'.
Finding identical cells in module `\lead_zero_param'.
Finding identical cells in module `\leading_ones'.
Finding identical cells in module `\leading_zero'.
Finding identical cells in module `\left_shifter'.
Finding identical cells in module `\low_mask_hi_lo'.
Finding identical cells in module `\low_mask_lo_hi'.
Finding identical cells in module `\mac_spec_check'.
Finding identical cells in module `\matrix_multiply_1x2_2x1'.
Finding identical cells in module `\matrix_multiply_2x2_2x1'.
Finding identical cells in module `\multiplier'.
Finding identical cells in module `\right_shifter'.
Finding identical cells in module `\round_excep'.
Finding identical cells in module `\rounding'.
Finding identical cells in module `\rvdff'.
Finding identical cells in module `\rvdffe'.
Finding identical cells in module `\sigmoid_approx'.
Finding identical cells in module `\special_check'.
Removed a total of 0 cells.

3.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep..
Finding unused cells or wires in module $paramod\divider\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\exponent\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\invert\width=1..
Finding unused cells or wires in module $paramod\invert\width=23..
Finding unused cells or wires in module $paramod\invert\width=25..
Finding unused cells or wires in module $paramod\lead_zero_param\in_width=23\count_width=5..
Finding unused cells or wires in module $paramod\left_shifter\mant=27..
Finding unused cells or wires in module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130..
Finding unused cells or wires in module $paramod\mac_spec_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\multiplier\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdff\WIDTH=5..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=1..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=10..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=23..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=26..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=3..
Finding unused cells or wires in module $paramod\rvdffe\WIDTH=5..
Finding unused cells or wires in module $paramod\sigmoid_approx\exp_width=8\mant_width=24..
Finding unused cells or wires in module $paramod\special_check\exp_width=8\mant_width=24..
Finding unused cells or wires in module \NN..
Finding unused cells or wires in module \add_sub..
Finding unused cells or wires in module \compress_by2..
Finding unused cells or wires in module \compress_by4..
Finding unused cells or wires in module \divider..
Finding unused cells or wires in module \exponent..
Finding unused cells or wires in module \int_excep..
Finding unused cells or wires in module \invert..
Finding unused cells or wires in module \lead_zero_param..
Finding unused cells or wires in module \leading_ones..
Finding unused cells or wires in module \leading_zero..
Finding unused cells or wires in module \left_shifter..
Finding unused cells or wires in module \low_mask_hi_lo..
Finding unused cells or wires in module \low_mask_lo_hi..
Finding unused cells or wires in module \mac_spec_check..
Finding unused cells or wires in module \matrix_multiply_1x2_2x1..
Finding unused cells or wires in module \matrix_multiply_2x2_2x1..
Finding unused cells or wires in module \multiplier..
Finding unused cells or wires in module \right_shifter..
Finding unused cells or wires in module \round_excep..
Finding unused cells or wires in module \rounding..
Finding unused cells or wires in module \rvdff..
Finding unused cells or wires in module \rvdffe..
Finding unused cells or wires in module \sigmoid_approx..
Finding unused cells or wires in module \special_check..

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep.
Optimizing module $paramod\divider\exp_width=8\mant_width=24.
Optimizing module $paramod\exponent\exp_width=8\mant_width=24.
Optimizing module $paramod\invert\width=1.
Optimizing module $paramod\invert\width=23.
Optimizing module $paramod\invert\width=25.
Optimizing module $paramod\lead_zero_param\in_width=23\count_width=5.
Optimizing module $paramod\left_shifter\mant=27.
Optimizing module $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130.
Optimizing module $paramod\mac_spec_check\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24.
Optimizing module $paramod\multiplier\exp_width=8\mant_width=24.
Optimizing module $paramod\rvdff\WIDTH=1.
Optimizing module $paramod\rvdff\WIDTH=10.
Optimizing module $paramod\rvdff\WIDTH=23.
Optimizing module $paramod\rvdff\WIDTH=26.
Optimizing module $paramod\rvdff\WIDTH=3.
Optimizing module $paramod\rvdff\WIDTH=5.
Optimizing module $paramod\rvdffe\WIDTH=1.
Optimizing module $paramod\rvdffe\WIDTH=10.
Optimizing module $paramod\rvdffe\WIDTH=23.
Optimizing module $paramod\rvdffe\WIDTH=26.
Optimizing module $paramod\rvdffe\WIDTH=3.
Optimizing module $paramod\rvdffe\WIDTH=5.
Optimizing module $paramod\sigmoid_approx\exp_width=8\mant_width=24.
Optimizing module $paramod\special_check\exp_width=8\mant_width=24.
Optimizing module NN.
Optimizing module add_sub.
Optimizing module compress_by2.
Optimizing module compress_by4.
Optimizing module divider.
Optimizing module exponent.
Optimizing module int_excep.
Optimizing module invert.
Optimizing module lead_zero_param.
Optimizing module leading_ones.
Optimizing module leading_zero.
Optimizing module left_shifter.
Optimizing module low_mask_hi_lo.
Optimizing module low_mask_lo_hi.
Optimizing module mac_spec_check.
Optimizing module matrix_multiply_1x2_2x1.
Optimizing module matrix_multiply_2x2_2x1.
Optimizing module multiplier.
Optimizing module right_shifter.
Optimizing module round_excep.
Optimizing module rounding.
Optimizing module rvdff.
Optimizing module rvdffe.
Optimizing module sigmoid_approx.
Optimizing module special_check.

3.9. Finished OPT passes. (There is nothing left to do.)

4. Executing Verilog backend.
Dumping module `$paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep'.
Dumping module `$paramod\divider\exp_width=8\mant_width=24'.
Dumping module `$paramod\exponent\exp_width=8\mant_width=24'.
Dumping module `$paramod\invert\width=1'.
Dumping module `$paramod\invert\width=23'.
Dumping module `$paramod\invert\width=25'.
Dumping module `$paramod\lead_zero_param\in_width=23\count_width=5'.
Dumping module `$paramod\left_shifter\mant=27'.
Dumping module `$paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130'.
Dumping module `$paramod\mac_spec_check\exp_width=8\mant_width=24'.
Dumping module `$paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24'.
Dumping module `$paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24'.
Dumping module `$paramod\multiplier\exp_width=8\mant_width=24'.
Dumping module `$paramod\rvdff\WIDTH=1'.
Dumping module `$paramod\rvdff\WIDTH=10'.
Dumping module `$paramod\rvdff\WIDTH=23'.
Dumping module `$paramod\rvdff\WIDTH=26'.
Dumping module `$paramod\rvdff\WIDTH=3'.
Dumping module `$paramod\rvdff\WIDTH=5'.
Dumping module `$paramod\rvdffe\WIDTH=1'.
Dumping module `$paramod\rvdffe\WIDTH=10'.
Dumping module `$paramod\rvdffe\WIDTH=23'.
Dumping module `$paramod\rvdffe\WIDTH=26'.
Dumping module `$paramod\rvdffe\WIDTH=3'.
Dumping module `$paramod\rvdffe\WIDTH=5'.
Dumping module `$paramod\sigmoid_approx\exp_width=8\mant_width=24'.
Dumping module `$paramod\special_check\exp_width=8\mant_width=24'.
Dumping module `\NN'.
Dumping module `\add_sub'.
Dumping module `\compress_by2'.
Dumping module `\compress_by4'.
Dumping module `\divider'.
Dumping module `\exponent'.
Dumping module `\int_excep'.
Dumping module `\invert'.
Dumping module `\lead_zero_param'.
Dumping module `\leading_ones'.
Dumping module `\leading_zero'.
Dumping module `\left_shifter'.
Dumping module `\low_mask_hi_lo'.
Dumping module `\low_mask_lo_hi'.
Dumping module `\mac_spec_check'.
Dumping module `\matrix_multiply_1x2_2x1'.
Dumping module `\matrix_multiply_2x2_2x1'.
Dumping module `\multiplier'.
Dumping module `\right_shifter'.
Dumping module `\round_excep'.
Dumping module `\rounding'.
Dumping module `\rvdff'.
Dumping module `\rvdffe'.
Dumping module `\sigmoid_approx'.
Dumping module `\special_check'.

5. Printing statistics.

=== $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep ===

   Number of wires:                651
   Number of wire bits:            994
   Number of public wires:          34
   Number of public wire bits:     377
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                686
     $_ANDNOT_                      83
     $_AND_                         22
     $_AOI3_                         8
     $_AOI4_                        14
     $_MUX_                        165
     $_NAND_                        19
     $_NOR_                         35
     $_NOT_                         73
     $_OAI3_                        65
     $_OAI4_                        15
     $_ORNOT_                       72
     $_OR_                          68
     $_XNOR_                        14
     $_XOR_                         31
     $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130      1
     $paramod\mac_spec_check\exp_width=8\mant_width=24      1

=== $paramod\divider\exp_width=8\mant_width=24 ===

   Number of wires:                563
   Number of wire bits:           1063
   Number of public wires:          62
   Number of public wire bits:     562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                595
     $_ANDNOT_                     112
     $_AND_                         11
     $_AOI3_                        50
     $_AOI4_                         2
     $_MUX_                         88
     $_NAND_                        10
     $_NOR_                         25
     $_NOT_                         69
     $_OAI3_                        26
     $_OAI4_                         2
     $_ORNOT_                        7
     $_OR_                          97
     $_XNOR_                        17
     $_XOR_                         63
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\exponent\exp_width=8\mant_width=24      2
     $paramod\mac_spec_check\exp_width=8\mant_width=24      2
     $paramod\rvdffe\WIDTH=1         6
     $paramod\rvdffe\WIDTH=10        1
     $paramod\rvdffe\WIDTH=23        1
     $paramod\rvdffe\WIDTH=26        2
     $paramod\rvdffe\WIDTH=5         1

=== $paramod\exponent\exp_width=8\mant_width=24 ===

   Number of wires:                183
   Number of wire bits:            317
   Number of public wires:           9
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                207
     $_ANDNOT_                      42
     $_AND_                          2
     $_AOI3_                         2
     $_MUX_                        109
     $_NAND_                         2
     $_NOR_                          5
     $_NOT_                          7
     $_OAI3_                         2
     $_ORNOT_                        4
     $_OR_                          24
     $_XNOR_                         1
     $_XOR_                          6
     $paramod\lead_zero_param\in_width=23\count_width=5      1

=== $paramod\invert\width=1 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\invert\width=23 ===

   Number of wires:                  2
   Number of wire bits:             46
   Number of public wires:           2
   Number of public wire bits:      46
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\invert\width=25 ===

   Number of wires:                  2
   Number of wire bits:             50
   Number of public wires:           2
   Number of public wire bits:      50
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== $paramod\lead_zero_param\in_width=23\count_width=5 ===

   Number of wires:                127
   Number of wire bits:            290
   Number of public wires:          27
   Number of public wire bits:     190
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                106
     $_ANDNOT_                      14
     $_AOI3_                         6
     $_NAND_                         1
     $_NOR_                          4
     $_NOT_                          7
     $_OAI3_                         5
     $_ORNOT_                        4
     $_OR_                          64
     $paramod\invert\width=23        1

=== $paramod\left_shifter\mant=27 ===

   Number of wires:                167
   Number of wire bits:            252
   Number of public wires:           4
   Number of public wire bits:      89
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                189
     $_ANDNOT_                      26
     $_MUX_                        104
     $_NOT_                          1
     $_ORNOT_                       27
     $_OR_                          31

=== $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130 ===

   Number of wires:                 92
   Number of wire bits:            660
   Number of public wires:           4
   Number of public wire bits:     572
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                114
     $_ANDNOT_                      31
     $_AND_                          1
     $_AOI3_                         8
     $_NAND_                        18
     $_NOR_                          1
     $_NOT_                          6
     $_OAI3_                        27
     $_ORNOT_                        1
     $_OR_                          20
     $paramod\invert\width=25        1

=== $paramod\mac_spec_check\exp_width=8\mant_width=24 ===

   Number of wires:                 14
   Number of wire bits:            109
   Number of public wires:          10
   Number of public wire bits:     105
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_ANDNOT_                       3
     $_NAND_                         2
     $_NOR_                          2
     $_OR_                           2

=== $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24 ===

   Number of wires:                  9
   Number of wire bits:            259
   Number of public wires:           9
   Number of public wire bits:     259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         1

=== $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24 ===

   Number of wires:                 15
   Number of wire bits:            451
   Number of public wires:          15
   Number of public wire bits:     451
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $paramod\multiplier\exp_width=8\mant_width=24      4
     add_sub                         2

=== $paramod\multiplier\exp_width=8\mant_width=24 ===

   Number of wires:               3945
   Number of wire bits:           4382
   Number of public wires:          34
   Number of public wire bits:     471
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3958
     $_ANDNOT_                    1012
     $_AND_                         89
     $_AOI3_                       286
     $_MUX_                        218
     $_NAND_                        64
     $_NOR_                        446
     $_NOT_                        274
     $_OAI3_                        65
     $_ORNOT_                       52
     $_OR_                         246
     $_XNOR_                       476
     $_XOR_                        725
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\lead_zero_param\in_width=23\count_width=5      2
     $paramod\special_check\exp_width=8\mant_width=24      2

=== $paramod\rvdff\WIDTH=1 ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_DFF_PN0_                      1

=== $paramod\rvdff\WIDTH=10 ===

   Number of wires:                  4
   Number of wire bits:             22
   Number of public wires:           4
   Number of public wire bits:      22
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $_DFF_PN0_                     10

=== $paramod\rvdff\WIDTH=23 ===

   Number of wires:                  4
   Number of wire bits:             48
   Number of public wires:           4
   Number of public wire bits:      48
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 23
     $_DFF_PN0_                     23

=== $paramod\rvdff\WIDTH=26 ===

   Number of wires:                  4
   Number of wire bits:             54
   Number of public wires:           4
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 26
     $_DFF_PN0_                     26

=== $paramod\rvdff\WIDTH=3 ===

   Number of wires:                  4
   Number of wire bits:              8
   Number of public wires:           4
   Number of public wire bits:       8
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_DFF_PN0_                      3

=== $paramod\rvdff\WIDTH=5 ===

   Number of wires:                  4
   Number of wire bits:             12
   Number of public wires:           4
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  5
     $_DFF_PN0_                      5

=== $paramod\rvdffe\WIDTH=1 ===

   Number of wires:                  6
   Number of wire bits:              6
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_MUX_                          1
     $paramod\rvdff\WIDTH=1          1

=== $paramod\rvdffe\WIDTH=10 ===

   Number of wires:                  6
   Number of wire bits:             33
   Number of public wires:           6
   Number of public wire bits:      33
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 11
     $_MUX_                         10
     $paramod\rvdff\WIDTH=10         1

=== $paramod\rvdffe\WIDTH=23 ===

   Number of wires:                  6
   Number of wire bits:             72
   Number of public wires:           6
   Number of public wire bits:      72
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $_MUX_                         23
     $paramod\rvdff\WIDTH=23         1

=== $paramod\rvdffe\WIDTH=26 ===

   Number of wires:                  6
   Number of wire bits:             81
   Number of public wires:           6
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $_MUX_                         26
     $paramod\rvdff\WIDTH=26         1

=== $paramod\rvdffe\WIDTH=3 ===

   Number of wires:                  6
   Number of wire bits:             12
   Number of public wires:           6
   Number of public wire bits:      12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $_MUX_                          3
     $paramod\rvdff\WIDTH=3          1

=== $paramod\rvdffe\WIDTH=5 ===

   Number of wires:                  6
   Number of wire bits:             18
   Number of public wires:           6
   Number of public wire bits:      18
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $_MUX_                          5
     $paramod\rvdff\WIDTH=5          1

=== $paramod\sigmoid_approx\exp_width=8\mant_width=24 ===

   Number of wires:                108
   Number of wire bits:            734
   Number of public wires:          28
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                320
     $_ANDNOT_                       7
     $_AND_                          2
     $_AOI4_                         2
     $_DFF_PN0_                    102
     $_MUX_                        131
     $_NAND_                         2
     $_NOT_                          5
     $_OR_                          28
     $_XNOR_                         1
     $_XOR_                         31
     $paramod\divider\exp_width=8\mant_width=24      2
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         5

=== $paramod\special_check\exp_width=8\mant_width=24 ===

   Number of wires:                 64
   Number of wire bits:            133
   Number of public wires:          15
   Number of public wire bits:      84
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $_ANDNOT_                      16
     $_AOI3_                         1
     $_NAND_                         4
     $_NOR_                          5
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          29

=== NN ===

   Number of wires:                191
   Number of wire bits:            885
   Number of public wires:          30
   Number of public wire bits:     719
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                245
     $_ANDNOT_                      17
     $_AND_                          4
     $_AOI3_                         2
     $_DFF_PN0_                     71
     $_MUX_                          5
     $_NAND_                         2
     $_NOR_                          1
     $_NOT_                          5
     $_ORNOT_                        2
     $_OR_                          58
     $_XNOR_                         2
     $_XOR_                         68
     $paramod\matrix_multiply_1x2_2x1\exp_width=8\mant_width=24      1
     $paramod\matrix_multiply_2x2_2x1\exp_width=8\mant_width=24      1
     $paramod\sigmoid_approx\exp_width=8\mant_width=24      3
     add_sub                         3

=== add_sub ===

   Number of wires:               1088
   Number of wire bits:           1535
   Number of public wires:          40
   Number of public wire bits:     487
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1184
     $_ANDNOT_                     137
     $_AND_                          9
     $_AOI3_                        44
     $_AOI4_                         1
     $_MUX_                        208
     $_NAND_                        14
     $_NOR_                         57
     $_NOT_                        138
     $_OAI3_                       114
     $_OAI4_                         2
     $_ORNOT_                       50
     $_OR_                         222
     $_XNOR_                        44
     $_XOR_                        138
     $paramod\left_shifter\mant=27      1
     $paramod\special_check\exp_width=8\mant_width=24      2
     leading_zero                    1
     right_shifter                   1
     rounding                        1

=== compress_by2 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== compress_by4 ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== divider ===

   Number of wires:                563
   Number of wire bits:           1063
   Number of public wires:          62
   Number of public wire bits:     562
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                595
     $_ANDNOT_                     112
     $_AND_                         11
     $_AOI3_                        50
     $_AOI4_                         2
     $_MUX_                         88
     $_NAND_                        10
     $_NOR_                         25
     $_NOT_                         69
     $_OAI3_                        26
     $_OAI4_                         2
     $_ORNOT_                        7
     $_OR_                          97
     $_XNOR_                        17
     $_XOR_                         63
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\exponent\exp_width=8\mant_width=24      2
     $paramod\mac_spec_check\exp_width=8\mant_width=24      2
     $paramod\rvdffe\WIDTH=1         6
     $paramod\rvdffe\WIDTH=10        1
     $paramod\rvdffe\WIDTH=23        1
     $paramod\rvdffe\WIDTH=26        2
     $paramod\rvdffe\WIDTH=5         1

=== exponent ===

   Number of wires:                183
   Number of wire bits:            317
   Number of public wires:           9
   Number of public wire bits:     143
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                207
     $_ANDNOT_                      42
     $_AND_                          2
     $_AOI3_                         2
     $_MUX_                        109
     $_NAND_                         2
     $_NOR_                          5
     $_NOT_                          7
     $_OAI3_                         2
     $_ORNOT_                        4
     $_OR_                          24
     $_XNOR_                         1
     $_XOR_                          6
     $paramod\lead_zero_param\in_width=23\count_width=5      1

=== int_excep ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $_ORNOT_                        1
     $_OR_                           1
     $_XOR_                          1

=== invert ===

   Number of wires:                  2
   Number of wire bits:              2
   Number of public wires:           2
   Number of public wire bits:       2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

=== lead_zero_param ===

   Number of wires:                  6
   Number of wire bits:              7
   Number of public wires:           6
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_NOT_                          1
     $paramod\invert\width=1         1

=== leading_ones ===

   Number of wires:                162
   Number of wire bits:            197
   Number of public wires:           2
   Number of public wire bits:      37
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                165
     $_ANDNOT_                      41
     $_AOI3_                         5
     $_NOR_                          4
     $_NOT_                          5
     $_OAI3_                         5
     $_ORNOT_                        5
     $_OR_                         100

=== leading_zero ===

   Number of wires:                113
   Number of wire bits:            140
   Number of public wires:           2
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                116
     $_ANDNOT_                      20
     $_AOI3_                         1
     $_NOR_                          3
     $_NOT_                          2
     $_OAI3_                         5
     $_ORNOT_                        3
     $_OR_                          82

=== left_shifter ===

   Number of wires:                149
   Number of wire bits:            225
   Number of public wires:           4
   Number of public wire bits:      80
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                168
     $_ANDNOT_                      23
     $_MUX_                         89
     $_NOT_                          1
     $_ORNOT_                       24
     $_OR_                          31

=== low_mask_hi_lo ===

   Number of wires:                  4
   Number of wire bits:              6
   Number of public wires:           4
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $paramod\invert\width=1         1

=== low_mask_lo_hi ===

   Number of wires:                  4
   Number of wire bits:              6
   Number of public wires:           4
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_NOT_                          1
     $paramod\invert\width=1         1

=== mac_spec_check ===

   Number of wires:                 14
   Number of wire bits:             31
   Number of public wires:          10
   Number of public wire bits:      27
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $_ANDNOT_                       3
     $_NAND_                         2
     $_NOR_                          2
     $_OR_                           2

=== matrix_multiply_1x2_2x1 ===

   Number of wires:                  9
   Number of wire bits:            259
   Number of public wires:           9
   Number of public wire bits:     259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         1

=== matrix_multiply_2x2_2x1 ===

   Number of wires:                 15
   Number of wire bits:            451
   Number of public wires:          15
   Number of public wire bits:     451
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     $paramod\multiplier\exp_width=8\mant_width=24      4
     add_sub                         2

=== multiplier ===

   Number of wires:               3933
   Number of wire bits:           4370
   Number of public wires:          34
   Number of public wire bits:     471
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3946
     $_ANDNOT_                     990
     $_AND_                         93
     $_AOI3_                       285
     $_MUX_                        219
     $_NAND_                        68
     $_NOR_                        434
     $_NOT_                        217
     $_OAI3_                        75
     $_ORNOT_                       60
     $_OR_                         282
     $_XNOR_                       427
     $_XOR_                        791
     $paramod$391cfcddd3c4eb5bfeefa2a8eac8a865e52f2949\round_excep      1
     $paramod\lead_zero_param\in_width=23\count_width=5      2
     $paramod\special_check\exp_width=8\mant_width=24      2

=== right_shifter ===

   Number of wires:                544
   Number of wire bits:            603
   Number of public wires:           3
   Number of public wire bits:      62
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                568
     $_ANDNOT_                      53
     $_AND_                          6
     $_AOI3_                       150
     $_AOI4_                        26
     $_NAND_                         5
     $_NOR_                         28
     $_NOT_                         38
     $_OAI3_                       163
     $_ORNOT_                        7
     $_OR_                          92

=== round_excep ===

   Number of wires:                608
   Number of wire bits:            948
   Number of public wires:          35
   Number of public wire bits:     375
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                642
     $_ANDNOT_                      70
     $_AND_                         23
     $_AOI3_                         8
     $_AOI4_                        13
     $_MUX_                        136
     $_NAND_                        19
     $_NOR_                         34
     $_NOT_                         74
     $_OAI3_                        68
     $_OAI4_                        14
     $_ORNOT_                       72
     $_OR_                          65
     $_XNOR_                         9
     $_XOR_                         35
     $paramod\low_mask_lo_hi\in_width=9\top_bound=105\bottom_bound=130      1
     $paramod\mac_spec_check\exp_width=8\mant_width=24      1

=== rounding ===

   Number of wires:                428
   Number of wire bits:            502
   Number of public wires:           7
   Number of public wire bits:      81
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                446
     $_ANDNOT_                      71
     $_AND_                          1
     $_AOI3_                        25
     $_AOI4_                        24
     $_MUX_                        136
     $_NAND_                        18
     $_NOR_                          5
     $_NOT_                         47
     $_OAI3_                        55
     $_OAI4_                         1
     $_ORNOT_                        2
     $_OR_                          35
     $_XNOR_                         3
     $_XOR_                         23

=== rvdff ===

   Number of wires:                  4
   Number of wire bits:              4
   Number of public wires:           4
   Number of public wire bits:       4
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_DFF_PN0_                      1

=== rvdffe ===

   Number of wires:                  6
   Number of wire bits:              6
   Number of public wires:           6
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_MUX_                          1
     $paramod\rvdff\WIDTH=1          1

=== sigmoid_approx ===

   Number of wires:                108
   Number of wire bits:            734
   Number of public wires:          28
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                320
     $_ANDNOT_                       7
     $_AND_                          2
     $_AOI4_                         2
     $_DFF_PN0_                    102
     $_MUX_                        131
     $_NAND_                         2
     $_NOT_                          5
     $_OR_                          28
     $_XNOR_                         1
     $_XOR_                         31
     $paramod\divider\exp_width=8\mant_width=24      2
     $paramod\multiplier\exp_width=8\mant_width=24      2
     add_sub                         5

=== special_check ===

   Number of wires:                 64
   Number of wire bits:            133
   Number of public wires:          15
   Number of public wire bits:      84
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 59
     $_ANDNOT_                      16
     $_AOI3_                         1
     $_NAND_                         4
     $_NOR_                          5
     $_NOT_                          1
     $_ORNOT_                        3
     $_OR_                          29

End of script. Logfile hash: 80588d1481
CPU: user 25.32s system 0.11s, MEM: 95.72 MB total, 89.86 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 34x opt_clean (4 sec), 18% 40x opt_expr (4 sec), ...
